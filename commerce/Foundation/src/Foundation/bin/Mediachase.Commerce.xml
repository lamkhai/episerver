<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mediachase.Commerce</name>
    </assembly>
    <members>
        <member name="T:Mediachase.Commerce.Assets.Database.AssetServiceDatabase">
            <summary>
            This type/member supports the EPiServer infrastructure and is not intended to be
            used directly from your code.
            
            Default implementation of <see cref="T:Mediachase.Commerce.Assets.IAssetService"/> and <see cref="T:Mediachase.Commerce.Assets.IAssetServiceEx"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Database.AssetServiceDatabase.AddAssociation(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto,Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemAssetRow,System.Int32)">
            <summary>
            Add asset association to catalog entry
            </summary>
            <param name="entryDto"> catalog entry dto</param>
            <param name="assetElement"> asset element </param>
            <param name="entryId">The entry id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Database.AssetServiceDatabase.AddAssociation(Mediachase.Commerce.Catalog.Dto.CatalogNodeDto,Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogItemAssetRow)">
            <summary>
            Add asset association to catalog entry
            </summary>
            <param name="node"> catalog entry dto</param>
            <param name="assetElement"> asset element </param>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Database.AssetServiceDatabase.CommitAssetsToEntry(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemAssetRow},Mediachase.Commerce.Catalog.Dto.CatalogEntryDto)">
            <summary>
            Commit assets to entry
            </summary>
            <param name="assetRows">The assets to add.</param>
            <param name="entryDto">The entries to add assets to.</param>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Database.AssetServiceDatabase.CommitAssetsToEntry(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemAssetRow},Mediachase.Commerce.Catalog.Dto.CatalogEntryDto,System.Int32)">
            <summary>
            Commit assets to entry
            </summary>
            <param name="assetRows">The assets to add.</param>
            <param name="entryDto">The entries to add assets to.</param>
            <param name="entryId">The entry id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Database.AssetServiceDatabase.CommitAssets(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemAssetRow},Mediachase.Commerce.Catalog.Dto.CatalogEntryDto,System.Int32)">
            <summary>
            Commit assets to entry
            </summary>
            <param name="updatingRows">The assets to add.</param>
            <param name="entryDto">The entries to add assets to.</param>
            <param name="entryId">The entry id.</param>
        </member>
        <member name="T:Mediachase.Commerce.Assets.IAssetService">
            <summary>
            Provide update asset in ECF
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Assets.IAssetService.CommitAssetsToEntry(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemAssetRow},Mediachase.Commerce.Catalog.Dto.CatalogEntryDto)">
            <summary>
            Adds asset information to a <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto"/>.
            </summary>
            <param name="assetRows">The rows to update.</param>
            <param name="entry">The entry dto.</param>
            <remarks>The first entry in <paramref name="entry"/> will be used even if it contains multiple entries.</remarks>
        </member>
        <member name="M:Mediachase.Commerce.Assets.IAssetService.CommitAssetsToNode(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogItemAssetRow},Mediachase.Commerce.Catalog.Dto.CatalogNodeDto)">
            <summary>
            Adds asset information to a <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto"/>.
            </summary>
            <param name="assetRows">The rows to update.</param>
            <param name="node">The node dto.</param>
            <remarks>The first node in <paramref name="node"/> will be used even if it contains multiple nodes.</remarks>
        </member>
        <member name="T:Mediachase.Commerce.Assets.IAssetServiceEx">
            <summary>
            Extends <see cref="T:Mediachase.Commerce.Assets.IAssetService"/> with support for batch saving.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Assets.IAssetServiceEx.CommitAssetsToEntry(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemAssetRow},Mediachase.Commerce.Catalog.Dto.CatalogEntryDto,System.Int32)">
            <summary>
            Adds asset information to a <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto"/>.
            </summary>
            <param name="assetRows">The rows to update.</param>
            <param name="entry">The entry dto.</param>
            <param name="entryId">The entry id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Assets.IAssetServiceEx.CommitAssetsToNode(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogItemAssetRow},Mediachase.Commerce.Catalog.Dto.CatalogNodeDto,System.Int32)">
            <summary>
            Adds asset information to a <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto"/>.
            </summary>
            <param name="assetRows">The rows to update.</param>
            <param name="node">The node dto.</param>
            <param name="nodeId">The node id</param>
        </member>
        <member name="P:Mediachase.Commerce.Assets.ImportExport.CatalogItemAsset.CatalogItemType">
            <summary>
            If not node, then it is an entry.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Assets.ImportExport.CatalogItemAssetImportExport">
            <summary>
            Implements bulk catalog item asset import/export through serialized objects.
            </summary>
            <remarks>
            Asset path: For now, it is the file name, which matches up to the Name column in the tblWorkContent table in the CMS database. This may change to use actual file paths (blob paths?) in the future.
            Asset key: Matches the ContentGUID column in tblContent. This is not exported and is only for internal use. Currently during import/export, the asset key is used to match the file specified by
            the AssetPath element (in the XML) with image content in the CMS database.
            Asset type: Currently, this is the qualified class names of applicable content class (IContentImage). This may change to allow users to specify MIME types in the future.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Assets.ImportExport.CatalogItemAssetImportExport.GetAssetType(System.String)">
            <summary>
            Gets the asset type based on the MIME type.
            </summary>
            <param name="mimeType">MIME type of the asset.</param>
            <returns>The asset type. Currently, this returns "IContentMedia" or "IContentImage".</returns>
        </member>
        <member name="M:Mediachase.Commerce.Assets.ImportExport.CatalogItemAssetImportExport.#ctor(Mediachase.Commerce.Catalog.ICatalogSystem,EPiServer.IContentLoader,Mediachase.Commerce.Catalog.NodeIdentityResolver,Mediachase.Commerce.Catalog.EntryIdentityResolver,EPiServer.Web.IMimeTypeResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Assets.ImportExport.CatalogItemAssetImportExport" /> class.
            </summary>
            <param name="catalogSystem">The catalog system.</param>
            <param name="contentLoader">The content loader.</param>
            <param name="nodeIdentityResolver">The node identity resolver.</param>
            <param name="entryIdentityResolver">The entry identity resolver.</param>
            <param name="mimeTypeResolver">The mime type resolver</param>
        </member>
        <member name="M:Mediachase.Commerce.Assets.ImportExport.CatalogItemAssetImportExport.ExportXml(System.String)">
            <summary>
            Exports catalog item assets into an XML file to be used for bulk import.
            </summary>
            <param name="outputPath">Path to write the XML export to.</param>
        </member>
        <member name="M:Mediachase.Commerce.Assets.ImportExport.CatalogItemAssetImportExport.GetEntryAssets">
            <summary>
            Get the assets of entries.
            </summary>
            <returns>List of CatalogItemAsset.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Assets.ImportExport.CatalogItemAssetImportExport.GetNodeAssets">
            <summary>
            Get the assets of nodes.
            </summary>
            <returns>List of CatalogItemAsset.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Assets.ImportExport.CatalogItemAssetImportExport.ImportXml(System.String,Mediachase.Commerce.Assets.ImportExport.OverwriteOptionsEnum)">
            <summary>
            Imports catalog item assets in bulk from a pre-existing XML file.
            </summary>
            <param name="sourceXmlFile">XML file name.</param>
            <param name="overwriteOptions">Option to overwrite catalog item assets.</param>
            <returns>Returns true if import succeeds.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Assets.ImportExport.CatalogItemAssetImportExport.ImportXml(System.Xml.XmlReader,Mediachase.Commerce.Assets.ImportExport.OverwriteOptionsEnum)">
            <summary>
            Imports catalog item assets in bulk from an XML stream.
            </summary>
            <param name="reader">XML reader for incoming stream.</param>
            <param name="overwriteOptions">Option to overwrite catalog item assets.</param>
            <returns>Returns true if import succeeds.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Assets.ImportExport.CatalogItemAssetImportExport.GetAssetType(Mediachase.Commerce.Assets.ImportExport.CatalogItemAsset)">
            <summary>
            Gets the type of the asset for the catalog item.
            </summary>
            <param name="catalogItemAsset">De-serialized object for a catalog item asset.</param>
            <returns>The asset type. It is either explicitly defined or de-referenced by its MIME type or file type.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Assets.Import.AssetWrapper">
            <summary>
            Wraps information about an imported asset.
            </summary>
            <remarks>
            Used to carry light-weight information to associate with the products in ECF.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.Assets.Import.AssetWrapper.AssetKey">
            <summary>
            Gets or sets the string representation of the asset key.
            </summary>
            <value>
            The asset key.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Assets.Import.AssetWrapper.Group">
            <summary>
            Gets or sets the asset group that this asset belongs to.
            </summary>
            <value>
            The asset group.
            </value>
        </member>
        <member name="T:Mediachase.Commerce.Assets.Import.CmsContentMapping">
            <summary>
            An import implementation that will import assets according to the the structure of 'asset folder name' / 'asset group' / 'asset file'.
            </summary>
            <remarks>
            This is the most efficient way if many product re-use the same image, but may cause maintenance problems if assets are managed from within ECF
            due to the fact that one image is used in multiple places.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.CmsContentMapping.#ctor(Mediachase.Data.Provider.IConnectionStringHandler)">
            <summary>
            Creates an instance of <see cref="T:Mediachase.Commerce.Assets.Import.CmsContentMapping"/>.
            </summary>
            <param name="connectionHandler">The connection handler, which contains connection string to both CMS and Commerce database.</param>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.CmsContentMapping.DoImport(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Assets.Import.AssetMapping})">
            <summary>
            The main entry point for import.
            </summary>
            <remarks>
            Imports each asset file once (according to the information in the mapping file) and associates it with one or more products.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.CmsContentMapping.DoImport(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Assets.Import.AssetMapping},Mediachase.Commerce.Shared.IProgressMessenger)">
            <summary>
            Does the import.
            </summary>
            <param name="entries">The entries.</param>
            <param name="progressMessenger">The progress messenger.</param>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.CmsContentMapping.UpdateAssetType(Mediachase.Commerce.Shared.IProgressMessenger)">
            <summary>
            Updates the type of the asset for catalog contents.
            </summary>
            <param name="progressMessenger">The progress messenger.</param>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.CmsContentMapping.GetContentAssetList">
            <summary>
            Get content asset list. This dictionary comes in form of &lt;AssetName, AssetGuid&gt;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.CmsContentMapping.GetAssetMappings">
            <summary>
            Gets the asset mappings. This dictionary comes in form of &lt;AssetGuid, AssetName&gt;
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Assets.Import.CsvReader">
            <summary>
            Simple implementation of reading a CSV file.
            </summary>
            <remarks>
            Known limitations: does not handle commas in values, even if values are quoted.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.CsvReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Assets.Import.CsvReader"/> class.
            </summary>
            <param name="path">The path to the CSV file.</param>
        </member>
        <member name="P:Mediachase.Commerce.Assets.Import.CsvReader.TotalEntries">
            <summary>
            Gets the total entries in the file.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.CsvReader.Entries">
            <summary>
            Gets the product/asset mappings read from the file.
            </summary>
            <returns>An IEnumerable of MappingEntry containing the information from the CSV file.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.CsvReader.ReadFirstRow(System.IO.StreamReader)">
            <summary>
            Reads the first row.
            </summary>
            <param name="stream">The stream.</param>
            <remarks>
            Figures out which column contains the products and which contains the assets.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.EntryAssetsHelper.AssociateAssetsWithEntries(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Mediachase.Commerce.Assets.Import.AssetMapping}})">
            <summary>
            Associates the assets with entries from a dictionary of EntryCode-List AssetMapping
            </summary>
            <param name="entryDto">Container CatalogEntryDto which can contain multiple sub catalog entries</param>
            <param name="mappings">Dictionary of EntryCode-List AssetMapping</param>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.EntryAssetsHelper.AssociateAssetsWithCatalogNode(Mediachase.Commerce.Catalog.Dto.CatalogNodeDto,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Assets.Import.AssetMapping})">
            <summary>
            Associates the assets with catalog node.
            </summary>
            <param name="catalogNodeDto">The catalog node dto.</param>
            <param name="assets">The assets.</param>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.EntryAssetsHelper.GetAssetType(Mediachase.Commerce.Assets.Import.AssetMapping)">
            <summary>
            Get asset type of asset mapping by mime type
            </summary>
            <param name="asset">The asset mapping</param>
            <returns>The asset type</returns>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.EntryAssetsHelper.GetAssetType(System.String)">
            <summary>
            Gets the type of the asset.
            </summary>
            <param name="assetName">Name of the asset.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.EntryAssetsHelper.IsAssetTypeValid(System.String,System.String)">
            <summary>
            Determines whether an image's asset type is wrongly set as episerver.core.icontentmedia or not
            </summary>
            <param name="assetType">Type of the asset.</param>
            <param name="assetName">Name of the asset.</param>
            <returns>False if assetType is empty or set as episerver.core.icontentmedia while it's an image. True otherwise.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Assets.Import.ImportBase">
            <summary>
            Base class for different types of asset import implementations.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.ImportBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Assets.Import.ImportBase"/> class.
            </summary>
            <param name="assetPath">The local file path where the files to import are present.</param>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.ImportBase.DoImport(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Assets.Import.AssetMapping})">
            <summary>
            Does the import.
            </summary>
            <param name="entries">The entries to import.</param>
        </member>
        <member name="P:Mediachase.Commerce.Assets.Import.ImportBase.AssetPath">
            <summary>
            Gets the local file path where assets to import are stored.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Assets.Import.ImportBase.AssetGroups">
            <summary>
            Gets all available asset groups.
            </summary>
            <remarks>
            The asset groups are determined by subfolders on the first level below the AssetPath. I e if you have the AssetPath set as "C:\Images" and below 
            the folder you have "Small", "Medum", and "Large" then your asset groups will be "Small", "Medium" and "Large".
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.ImportBase.AssociateAssetsWithProduct(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Assets.Import.AssetWrapper},Mediachase.Commerce.Catalog.Dto.CatalogEntryDto)">
            <summary>
            Associates the assets with aproduct.
            </summary>
            <param name="assets">The imported assets to associate with  product.</param>
            <param name="productDto">The product that should receive the assets.</param>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.ImportBase.GetProductDto(System.String)">
            <summary>
            Gets the DTO object for a product/variation from ECF.
            </summary>
            <param name="productCode">The product code.</param>
            <returns>A catalogEntryDto or null if not found.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.ImportBase.ValidAssetGroups(System.String)">
            <summary>
            Gets all valid asset groups for the asset.
            </summary>
            <param name="assetName">Name of the asset.</param>
            <returns>The valid asset groups.</returns>
            <remarks>
            This handles the case when the mapping file (csv file) contains an entry that maps an asset to a product, but the asset file does not exist in all the different
            asset group folders. In that case we will only import the asset that actually exists.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.ImportBase.FullAssetPath(System.String[])">
            <summary>
            Gets the full path to an asset file.
            </summary>
            <param name="segments">The segments for the asset file.</param>
            <returns>A correctly joined file path pointing to the asset file.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.MappingEntryHelper.UpdateAssetTypeForEntries(Mediachase.Commerce.Shared.IProgressMessenger,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Correct the asset type for entry's assets.
            </summary>
            <param name="progressMessenger">The progress messenger.</param>
            <param name="assetMapping">The asset mapping.</param>
        </member>
        <member name="M:Mediachase.Commerce.Assets.Import.MappingEntryHelper.UpdateAssetTypeForNodes(Mediachase.Commerce.Shared.IProgressMessenger,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Correct the asset type for node's assets.
            </summary>
            <param name="progressMessenger">The progress messenger.</param>
            <param name="assetMapping">The asset mapping.</param>
        </member>
        <member name="T:Mediachase.Commerce.BackgroundTasks.BackgroundTaskManager">
            <summary>
            An in-memory implementation of the <see cref="T:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskManager"/> interface. This
            implementation does not persist queued tasks or messages, and queued tasks and progress
            messages will be lost when the application stops or the application pool is recycled.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.BackgroundTasks.BackgroundTaskManager.#ctor(Mediachase.Commerce.BackgroundTasks.BackgroundTaskMessageFactory)">
            <summary>
            Creates an instance of <see cref="T:Mediachase.Commerce.BackgroundTasks.BackgroundTaskManager"/>.
            </summary>
            <param name="defaultMessageFactory">
            A factory for final messages added on task completion.
            </param>
        </member>
        <member name="T:Mediachase.Commerce.BackgroundTasks.BackgroundTaskMessage">
            <summary>
            Default implementation of <see cref="T:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage"/>.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.BackgroundTasks.BackgroundTaskMessageFactory">
            <summary>
            Creates the final message for a task on completion.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.BackgroundTasks.BackgroundTaskMessageFactory.CreateSuccessMessage(Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage)">
            <summary>
            Creates a message indicating the task has completed successfully.
            </summary>
            <param name="mostRecentMessage">The last message generated by the task.</param>
            <returns>
            A final message to add to the message log for the task, or null if no additional 
            message should be added.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.BackgroundTasks.BackgroundTaskMessageFactory.CreateFailureMessage(Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage)">
            <summary>
            Creates a message indicating the task has failed by returning false.
            </summary>
            <param name="mostRecentMessage">The last message generated by the task.</param>
            <returns>
            A final message to add to the message log for the task, or null if no additional
            message should be added.
            </returns>        
        </member>
        <member name="M:Mediachase.Commerce.BackgroundTasks.BackgroundTaskMessageFactory.CreateExceptionMessage(Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage,System.Exception)">
            <summary>
            Creates a message indicating the task has failed by throwing an exception.
            </summary>
            <param name="mostRecentMessage">The last message generated by the task.</param>
            <param name="exception">The exception thrown by the task.</param>
            <returns>
            A final message to add to the message log for the task, or null if no additional
            message should be added.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.BackgroundTasks.BackgroundTaskMessageType">
            <summary>
            Describes types of messages returned by background tasks.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.BackgroundTasks.BackgroundTaskMessageType.Progress">
            <summary>
            The message is a transient progress message. Progress messages will be immediately
            overwritten by the next message, and will not be persisted in the log.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.BackgroundTasks.BackgroundTaskMessageType.Debug">
            <summary>
            The message contains debugging output.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.BackgroundTasks.BackgroundTaskMessageType.Info">
            <summary>
            The message is informational.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.BackgroundTasks.BackgroundTaskMessageType.Warning">
            <summary>
            The message contains a warning.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.BackgroundTasks.BackgroundTaskMessageType.Success">
            <summary>
            The message indicates overall success. Success should only be used for the final message in the log.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.BackgroundTasks.BackgroundTaskMessageType.Error">
            <summary>
            The message indicates overall failure. Failure should only be used for the final message in the log.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.BackgroundTasks.BackgroundTaskState">
            <summary>
            Represents the current state of a background task.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.BackgroundTasks.BackgroundTaskState.TaskId">
            <summary>
            Gets the ID of the task.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.BackgroundTasks.BackgroundTaskState.BackgroundTaskType">
            <summary>
            Gets the type of the task.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.BackgroundTasks.BackgroundTaskState.TaskArguments">
            <summary>
            Gets a dictionary containing the arguments to the task.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.BackgroundTasks.BackgroundTaskState.TaskStatus">
            <summary>
            Gets the current status of the task.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.BackgroundTasks.BackgroundTaskStatus">
            <summary>
            Describes the current state of a task.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.BackgroundTasks.BackgroundTaskStatus.Queued">
            <summary>
            The task is queued, pending completion of other tasks.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.BackgroundTasks.BackgroundTaskStatus.Running">
            <summary>
            The task is running.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.BackgroundTasks.BackgroundTaskStatus.Succeeded">
            <summary>
            The task has completed successfuly.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.BackgroundTasks.BackgroundTaskStatus.Interrupted">
            <summary>
            The task has failed due to a cancellation request.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.BackgroundTasks.BackgroundTaskStatus.Failed">
            <summary>
            The task has failed due to some reason other than a cancellation request.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.BackgroundTasks.IBackgroundTask">
            <summary>
            Describes a backgroud task that may be queued and run later. All implementations must have 
            a constructor accepting a single argument of type 
            <see cref="T:System.Collections.Generic.IDictionary`2"/> that may be used to
            re-create the task with the value returned from <see cref="P:BackgroundTaskArguments"/> if
            the task must be queued and run at a later time.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.BackgroundTasks.IBackgroundTask.BackgroundTaskType">
            <summary>
            Gets the type of the background task.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.BackgroundTasks.IBackgroundTask.TaskArguments">
            <summary>
            Gets the arguments to the background task constructor.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.BackgroundTasks.IBackgroundTask.Execute(System.Action{Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage},System.Threading.CancellationToken)">
            <summary>
            Executes the background task.
            </summary>
            <param name="addMessage">A delegate to add messages as the task runs.</param>
            <param name="cancellationToken">
            A cancellation token that the task manager may use to attempt to cancel a running task.
            Tasks that ignore the cancellation may be forcibly terminated.
            </param>
            <returns>True if the task succeeded, false if it failed.</returns>
        </member>
        <member name="T:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskManager">
            <summary>
            Manages safe execution of background tasks, and exposes progress messages from the tasks.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskManager.AddTask(Mediachase.Commerce.BackgroundTasks.IBackgroundTask)">
            <summary>
            Adds a task for the manager to run. The task will be executed immediately if no other
            tasks are running, or queued if another task is active.
            </summary>
            <param name="task">The task to execute.</param>
            <returns>The ID of the new task.</returns>
        </member>
        <member name="M:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskManager.GetMessages(System.Guid)">
            <summary>
            Gets the messages generated by the specified task. Messages will be returned in same 
            order they were created.
            </summary>
            <param name="taskId">The ID of the task to query.</param>
            <exception cref="T:System.ArgumentException">
            The specified task ID was not found.
            </exception>
            <returns>
            A collection of messages generated by the specified task.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskManager.GetMessages(System.Guid,System.Int32,System.Int32,System.Int32@,System.Collections.Generic.IEnumerable{Mediachase.Commerce.BackgroundTasks.BackgroundTaskMessageType})">
            <summary>
            Gets the messages generated by the specified task, with paging. Messages will be paged
            by and returned in the same order they were created.
            </summary>
            <param name="taskId">The ID of the task to query.</param>
            <param name="offset">The number of messages to skip.</param>
            <param name="count">The maximum number of messages to return.</param>
            <param name="totalCount">
            Set to the total number of messages generated by the specified task.
            </param>
            <param name="messageTypeFilter">
            If non-null, only message types contained in the filter will be returned; if null,
            all message tyeps will be returned.
            </param>
            <exception cref="T:System.ArgumentException">
            The specified task ID was not found.
            </exception>
            <returns>
            A collection of messages generated by the specified task.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskManager.GetProgress(System.Guid)">
            <summary>
            Gets the most recent message generated by the specified task, or null if the task has
            not generated any messages.
            </summary>
            <param name="taskId">The ID of the task to query.</param>
            <exception cref="T:System.ArgumentException">
            The specified task ID was not found.
            </exception>
            <returns>
            The most recent message, or null if the task has not generated any messages.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskManager.QueryTasks(System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{System.Type},System.Collections.Generic.IEnumerable{Mediachase.Commerce.BackgroundTasks.BackgroundTaskStatus})">
            <summary>
            Queries the task manager for known tasks.
            </summary>
            <param name="taskIds">Only return tasks with the specified task IDs; or if null, do not filter by task ID.</param>
            <param name="taskTypes">Only return tasks with the specified task types; or if null, do not filter by task type.</param>
            <param name="taskStatuses">Only return tasks with the specified task status; or if null, do not filter by task status.</param>
            <returns>A collection of tasks matching the specified filters.</returns>
        </member>
        <member name="T:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage">
            <summary>
            A message generated by a background task.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage.TimestampUtc">
            <summary>
            Gets the timestamp of the message, in UTC.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage.MessageType">
            <summary>
            Gets the type of the message.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage.Message">
            <summary>
            Gets the content of the message.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage.StageName">
            <summary>
            Gets the name of the current stage of processing.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage.StageIndex">
            <summary>
            Gets the index (zero based) of the current stage.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage.StageCount">
            <summary>
            Gets the number of stages in the task.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage.StageProgress">
            <summary>
            Gets the current progress within the current stage of execution.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage.StageTotalProgress">
            <summary>
            Gets the value of <see cref="P:StageProgress"/> that indicates completion of the current stage.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage.Exception">
            <summary>
            Gets the exception resulting in failure of the task, or null if the message is not a failure message.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage.ExceptionMessage">
            <summary>
            Gets the exception message from <see cref="P:Exception"/>, or null if <see cref="P:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage.Exception"/> is null.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage.ExceptionStackTrace">
            <summary>
            Gets the stack trace from <see cref="P:Exception"/>, or null if <see cref="P:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage.Exception"/> is null.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.BackgroundTasks.TaskDebugMessage">
            <summary>
            Reprents an <see cref="T:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage"/> with message type <see cref="F:BackgroundTaskMessageType.Debug"/>.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.BackgroundTasks.TaskErrorMessage">
            <summary>
            Reprents an <see cref="T:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage"/> with message type <see cref="F:BackgroundTaskMessageType.Error"/>.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.BackgroundTasks.TaskInfoMessage">
            <summary>
            Reprents an <see cref="T:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage"/> with message type <see cref="F:BackgroundTaskMessageType.Info"/>.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.BackgroundTasks.TaskProgressMessage">
            <summary>
            Reprents an <see cref="T:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage"/> with message type <see cref="F:BackgroundTaskMessageType.Progress"/>.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.BackgroundTasks.TaskSuccessMessage">
            <summary>
            Reprents an <see cref="T:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage"/> with message type <see cref="F:BackgroundTaskMessageType.Success"/>.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.BackgroundTasks.TaskWarningMessage">
            <summary>
            Represents an <see cref="T:Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage"/> with message type <see cref="F:BackgroundTaskMessageType.Warning"/>.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.CatalogItemChangeForEventDrivenIndexing">
            <summary>
            Handles changes regarding catalog items for event driven indexing.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.CatalogItemChangeForEventDrivenIndexing.#ctor(Mediachase.Commerce.Catalog.EntryIdentityResolver,EPiServer.Events.ChangeNotification.IChangeNotificationManager)">
            <summary>
             Initializes a new instance of the <see cref="T:Mediachase.Commerce.CatalogItemChangeForEventDrivenIndexing"/> class.
            </summary>
            <param name="entryIdentityResolver">The entry identity resolver.</param>
            <param name="changeNotificationManager">The change notification manager.</param>
        </member>
        <member name="M:Mediachase.Commerce.CatalogItemChangeForEventDrivenIndexing.InsertChanges(System.Collections.Generic.IEnumerable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.CatalogItemChangeHandlerBase">
            <summary>
            Handles changes regarding catalog items. 
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.CatalogItemChangeHandlerBase.InsertChanges(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Inserts changes regarding catalog entries.
            </summary>
            <param name="changes">The changes.</param>
        </member>
        <member name="T:Mediachase.Commerce.CatalogItemChangeManager">
            <summary>
            Handles changes regarding catalog items. 
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.CatalogItemChangeManager.#ctor(EPiServer.Events.ChangeNotification.IChangeNotificationManager,Mediachase.Commerce.Catalog.EntryIdentityResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.CatalogItemChangeManager"/> class.
            </summary>
            <param name="changeNotificationManager">The change notification manager.</param>
            <param name="entryIdentityResolver">The entry identity resolver.</param>
        </member>
        <member name="P:Mediachase.Commerce.CatalogItemChangeManager.BatchSize">
            <summary>
            Gets or sets the batch size of catalog index.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.CatalogItemChangeManager.NotifyChanges(System.Collections.Generic.IEnumerable{EPiServer.Events.ChangeNotification.IBulkChangeItem{Mediachase.Commerce.Catalog.CatalogEntryChange}})">
            <summary>
            Notifies changes regarding catalog entries.
            </summary>
            <param name="changes">The changes.</param>
        </member>
        <member name="M:Mediachase.Commerce.CatalogItemChangeManager.NotifyChanges(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Notifies changes regarding catalog entries.
            </summary>
            <param name="changes">The changed catalog entry ids.</param>
        </member>
        <member name="M:Mediachase.Commerce.CatalogItemChangeManager.InsertChanges(System.Collections.Generic.IEnumerable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.CatalogItemChangeManager.GetChangesFragment(System.Int32)">
            <summary>
            Gets the changes by batch.
            </summary>
            <returns>List of catalog entry ids which were changed.</returns>
        </member>
        <member name="M:Mediachase.Commerce.CatalogItemChangeManager.DeleteChanges(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Deletes changes which were indexed.
            </summary>
            <param name="ids">The list of id to remove.</param>
        </member>
        <member name="M:Mediachase.Commerce.CatalogItemChangeManager.ClearChanges">
            <summary>
            Clears the changes.
            </summary>
            <remarks>Should only be used for rebuilding index.</remarks>
        </member>
        <member name="M:Mediachase.Commerce.CatalogItemChangeManager.GetChangesCount(System.Int32)">
            <summary>
            Gets total number count of changes.
            </summary>
            <returns>Number of changed entries.</returns>
        </member>
        <member name="T:Mediachase.Commerce.CatalogItemChangeNotifier">
            <summary>
            Notifies changes regarding catalog items. 
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.CatalogItemChangeNotifier.#ctor(System.Collections.Generic.IEnumerable{Mediachase.Commerce.CatalogItemChangeHandlerBase})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.CatalogItemChangeNotifier"/> class.
            </summary>
            <param name="handlers">The collection of <see cref="T:Mediachase.Commerce.CatalogItemChangeHandlerBase"/>.</param>
        </member>
        <member name="M:Mediachase.Commerce.CatalogItemChangeNotifier.NotifyChanges(System.Collections.Generic.IEnumerable{EPiServer.Events.ChangeNotification.IBulkChangeItem{Mediachase.Commerce.Catalog.CatalogEntryChange}})">
            <summary>
            Notifies changes regarding catalog entries.
            </summary>
            <param name="changes">The changes.</param>
        </member>
        <member name="M:Mediachase.Commerce.CatalogItemChangeNotifier.NotifyChanges(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Notifies changes regarding catalog entries.
            </summary>
            <param name="changes">The changed catalog entry ids.</param>
        </member>
        <member name="T:Mediachase.Commerce.CatalogEntryMasterKey">
            <summary>
            Master key for catalog entry. Every catalog entry cache should has this as the master key.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.CatalogAssociationChange">
            <summary>
            This is a placeholder class to signal changes in catalog associations to the event system, until work
            has been done to allow us to listen for changes on the actual data objects.  This class is only 
            to accelerate development of the improved catalog indexing, and any use of this of this class
            will eventually need to be replaced.
            </summary>
            <remarks>
            For internal use only.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogAssociationChange.#ctor(System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CatalogAssociationChange"/> class.
            </summary>
            <param name="id">The catalog association identifier.</param>
            <param name="name">Name of the association.</param>
            <param name="description">The association description.</param>
            <param name="catalogEntryId">The catalog entry identifier.</param>
            <param name="sortOrder">The sort order.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogAssociationChange.Equals(Mediachase.Commerce.Catalog.CatalogAssociationChange)">
            <summary>
            Indicates whether the current object is equal to another object of type <see cref="T:Mediachase.Commerce.Catalog.CatalogAssociationChange"/>.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogAssociationChange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogAssociationChange.GetHashCode">
            <summary>
            Returns a hash code for this instance, which is based on the <see cref="P:Mediachase.Commerce.Catalog.CatalogAssociationChange.Id"/>.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.CatalogCache">
            <summary>
            Implements operations for the cache for the catalog system.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogCache.CreateCacheKey(System.String[])">
            <summary>
            Creates a non-language-specific cache key.
            </summary>
            <param name="keys">The elements to include in the key.</param>
            <returns>A cache key with the current culture and the specified elements.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogCache.CreateCacheKey(System.String)">
            <summary>
            Creates a non-language-specific cache key.
            </summary>
            <param name="key">The element to include in the key.</param>
            <returns>A cache key with the current culture and the specified elements.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogCache.CreateCacheKey(System.String,System.String)">
            <summary>
            Creates a non-language-specific cache key.
            </summary>
            <param name="key1">The first element to include in the key.</param>
            <param name="key2">The second element to include in the key.</param>
            <returns>A cache key with the current culture and the specified elements.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogCache.CreateCacheKey(System.String,System.String,System.String)">
            <summary>
            Creates a non-language-specific cache key.
            </summary>
            <param name="key1">The first element to include in the key.</param>
            <param name="key2">The second element to include in the key.</param>
            <param name="key3">The third element to include in the key.</param>
            <returns>A cache key with the current culture and the specified elements.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogCache.CreateCacheKey(System.Globalization.CultureInfo,System.String[])">
            <summary>
            Creates the cache key.
            </summary>
            <param name="culture">The culture of the cached object.</param>
            <param name="keys">The elements to include in the key.</param>
            <returns>A cache key with the specified culture and the specified elements.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogCache.CreateLocalizedCacheKey(System.String,System.String[])">
            <summary>
            Creates the cache key with a specific language
            </summary>
            <param name="language">The language of the cached object.</param>
            <param name="keys">The elements to include in the key.</param>
            <returns>A cache key with the specified culture and the specified elements.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogCache.CreateLocalizedCacheKey(System.String,System.String)">
            <summary>
            Creates the cache key with a specific language
            </summary>
            <param name="language">The language of the cached object.</param>
            <param name="key">The element to include in the key.</param>
            <returns>A cache key with the specified culture and the specified elements.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogCache.CreateLocalizedCacheKey(System.String,System.String,System.String)">
            <summary>
            Creates the cache key with a specific language
            </summary>
            <param name="language">The language of the cached object.</param>
            <param name="key1">The first element to include in the key.</param>
            <param name="key2">The second element to include in the key.</param>
            <returns>A cache key with the specified culture and the specified elements.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogCache.CreateLocalizedCacheKey(System.String,System.String,System.String,System.String)">
            <summary>
            Creates the cache key with a specific language
            </summary>
            <param name="language">The language of the cached object.</param>
            <param name="key1">The first element to include in the key.</param>
            <param name="key2">The second element to include in the key.</param>
            <param name="key3">The third element to include in the key.</param>
            /// <returns>A cache key with the specified culture and the specified elements.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogCache.Clear">
            <summary>
            Removes all items from the catalog cache depended on by all inserts.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogCache.Remove(System.String)">
            <summary>
            Removes the specified item from the cache.
            </summary>
            <param name="key">The key of the item to remove.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogCache.ReadThrough``1(System.String,System.Collections.Generic.IEnumerable{System.String},System.TimeSpan,System.Func{``0})">
            <summary>
            Read-through cache handling.
            </summary>
            <typeparam name="T">Type of the value to read.</typeparam>
            <param name="key">The key.</param>
            <param name="masterKeys">The master keys that the cached item should depend on.</param>
            <param name="timeout">The cache timeout.</param>
            <param name="load">The function to invoke for retrieving the value if it does not exist in the cache.</param>
            <returns>
            The object associated with the key, if it exists or is read thru the readValue fuction. Otherwise returns null.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogCache.ReadThrough``1(Mediachase.Data.Provider.ReadMode,System.String,System.Collections.Generic.IEnumerable{System.String},System.TimeSpan,System.Func{``0})">
            <summary>
            Read-through cache handling with <see cref="T:Mediachase.Data.Provider.ReadMode"/> support and using <see cref="F:EPiServer.Framework.Cache.ReadStrategy.Wait"/>.
            </summary>
            <typeparam name="T">Type of the value to read.</typeparam>
            <param name="readMode">The read mode.</param>
            <param name="key">The key.</param>
            <param name="masterKeys">The master keys that the cached item should depend on.</param>
            <param name="timeout">The cache timeout.</param>
            <param name="load">The function to invoke for retrieving the value if it does not exist in the cache.</param>
            <returns>
            The object associated with the key, if it exists or is read thru the readValue fuction. Otherwise returns null.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogCache.Insert(System.String,System.Object,System.TimeSpan)">
            <summary>
            Inserts the value into the cache with the specified key, with dependency to a master key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value to cache.</param>
            <param name="timeout">The cache timeout.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogCache.Insert(System.String,System.Object,System.Collections.Generic.IEnumerable{System.String},System.TimeSpan)">
            <summary>
            Inserts the value into the cache with the specified key, with dependency to a set of master keys.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value to cache.</param>
            <param name="masterKeys">The master keys that we depend upon. These don't have to exist in the cache,
            they will be inserted if they don't exist.</param>
            <param name="timeout">The cache timeout.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogCache.Get(System.String)">
            <summary>
            Retrieves a value from the cache by key.
            </summary>
            <param name="key">The cache key.</param>
            <returns>The cached value for the key, or null if the key is not found.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.CatalogCodeId">
            <summary>
            Encapsulates data describing a unique key to a catalog content.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogCodeId.Id">
            <summary>
            Gets and sets the id of the catalog content.
            </summary>
            <value>The content id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogCodeId.Code">
            <summary>
            Gets and sets the code of the catalog content.
            </summary>
            <value>The content code.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogCodeId.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CatalogCodeId"/> class.
            </summary>
            <param name="id">The content id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogCodeId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CatalogCodeId"/> class.
            </summary>
            <param name="code">The code.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogCodeId.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CatalogCodeId"/> class.
            </summary>
            <param name="id">The content id.</param>
            <param name="code">The code.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.CatalogConfiguration">
            <summary>
            Implemented as a thread-safe singleton class
            </summary>
            <summary>
            Implemented as a thread-safe singleton class
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CatalogConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogConfiguration.Instance">
            <summary>
            Singleton instance
            </summary>
            <value>The instance.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogConfiguration.Connection">
            <summary>
            Config setting which defines the database connection name
            </summary>
            <value>The connection.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogConfiguration.SalePriceTypes">
            <summary>
            Configuration element defines Sale Price Types
            </summary>
            <value>The mapped types.</value>       
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogConfiguration.AutoConfigure">
            <summary>
            Root config attribute which determines whether to auto configure the Catalog System when first initialized.
            </summary>
            <value><c>true</c> if [auto configure]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogConfiguration.ShowVariationListPrice">
            <summary>
            Enables the display of the obsolete variation list price in the catalog entry edit UI.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogConfiguration.ConfigureMetaData">
            <summary>
            Retrieve metadata from the meta data engine and store in the MetaInstaller
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogConfiguration.Cache">
            <summary>
            Config settings which define where caching is enabled and timeouts related to it.
            </summary>
            <value>The cache.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogConfiguration.Roles">
            <summary>
            Maps roles in Commerce Manager (the name) to a custom string (the value) for UI purposes. This setting is no longer used.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogConfiguration.GetRole(System.String)">
            <summary>
            Returns roles mapped to the key (name)
            </summary>
            <param name="key">The key.</param>
            <returns>The corresponding <see cref="T:Mediachase.Commerce.Catalog.RoleDefinition"/> if it exists; otherwise null.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogConfiguration.EncodingSettings">
            <summary>
            Config settings which define the image quality and image encoding. No longer used.
            </summary>
            <value>The encoding settings.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogConfiguration.Events">
            <summary>
            Collection of <see cref="T:Mediachase.Commerce.Engine.Events.EventDefinition"/> instances defined in the config file
            </summary>
            <value>The events.</value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.CatalogConnection">
            <summary>
            Config setting which defines the connection string for the catalog system.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogConnection.ConnectionStringName">
            <summary>
            Retrieves logical name of connection string in CommerceFramework Application hierarchy
            </summary>
            <value>The connection string name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogConnection.UseWebServices">
            <summary>
            Gets or sets a value indicating whether to use web services or not. Default is false.
            </summary>
            <value><c>true</c> to use web services; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogConnection.CommandTimeout">
            <summary>
            Gets or sets a value indicating whether to user custom sql command timeout or not. Default is -1.
            </summary>
            <value>CommandTimeout in seconds</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogConnection.CatalogImportBatchSize">
            <summary>
            Gets or sets the Batches size of the entries when importing catalog. Default is 200.
            </summary>
            <value>Number of entries to import per batch.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogConnection.AppDatabase">
            <summary>
            Uses ConnectionStringName property to retrieve connection string from
            ConnectionStrings portion of app/web.config file
            </summary>
            <value>The app database.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogConnection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.SalePriceTypeCollection">
            <summary>
            Collection of SaleTypeDefinition objects
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.SalePriceTypeCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Mediachase.Commerce.Catalog.SalePriceTypeDefinition"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.SalePriceTypeCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.SalePriceTypeCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.SalePriceTypeDefinition">
            <summary>
            Definition of sale price element in web.config file
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.SalePriceTypeDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.SalePriceTypeDefinition"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.SalePriceTypeDefinition.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.SalePriceTypeDefinition.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.SalePriceTypeDefinition.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.SalePriceTypeDefinition.ControlUrl">
            <summary>
            Gets the control url.
            </summary>
            <value>The control url.</value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.CacheConfiguration">
            <summary>
            Config settings which define where caching is enabled and timeouts related to it.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CacheConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CacheConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CacheConfiguration.IsEnabled">
            <summary>
            Attribute determines whether in-memory caching is enabled or not.
            </summary>
            <value>
            	<c>true</c> if this instance is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CacheConfiguration.CatalogCollectionTimeout">
            <summary>
            Configuration attribute which determines when the CatalogCollection values are
            automatically refreshed in memory (in seconds).
            </summary>
            <value>The catalog collection timeout.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CacheConfiguration.CatalogEntryTimeout">
            <summary>
            Configuration attribute which determines when the CatalogEntry value is
            automatically refreshed in memory (in seconds).
            </summary>
            <value>The catalog entry timeout.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CacheConfiguration.CatalogNodeTimeout">
            <summary>
            Configuration attribute which determines when the CatalogNode value is
            automatically refreshed in memory (in seconds).
            </summary>
            <value>The catalog node timeout.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CacheConfiguration.CatalogSchemaTimeout">
            <summary>
            Configuration attribute which determines when the CatalogSchema value is
            automatically refreshed in memory (in seconds).
            </summary>
            <value>The catalog schema timeout.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CacheConfiguration.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.EncodingSettings">
            <summary>
            Defines encoding settings - image quality and the default format
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EncodingSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.EncodingSettings"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.EncodingSettings.ImageQualityPercentage">
            <summary>
            Gets or sets the image quality percentage.
            </summary>
            <value>The image quality percentage.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.EncodingSettings.DefaultFormat">
            <summary>
            Gets or sets the default format.
            </summary>
            <value>The default format.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EncodingSettings.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.RoleCollection">
            <summary>
            Collection of RoleDefinition objects
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.RoleCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Mediachase.Commerce.Security.Configuration.RoleDefinitionElement"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.RoleCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.RoleCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.RoleDefinition">
            <summary>
            Definition of single role element in web.config file
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.RoleDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.RoleDefinition"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.RoleDefinition.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.RoleDefinition.Value">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.CatalogContentType">
            <summary>
            The content type for catalog objects
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.CatalogContentType.CatalogEntry">
            <summary>
            The catalog entry
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.CatalogContentType.CatalogNode">
            <summary>
            The catalog node
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.CatalogContentType.Catalog">
            <summary>
            The catalog
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.CatalogContentType.Root">
            <summary>
            The Commerce root
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.CatalogContent.CatalogContentSync">
            <summary>
            Class to sync changes from DTOs to ecfVersion 
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogContent.CatalogContentSync.#ctor(Mediachase.Commerce.Catalog.ICatalogSystem,EPiServer.Web.IUrlSegmentGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CatalogContent.CatalogContentSync"/> class.
            </summary>
            <param name="catalogSystem">The catalog system.</param>
            <param name="urlSegmentGenerator">The uri segment generator.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogContent.CatalogContentSync.CreateDraft(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto,System.String)">
            <summary>
            Creates the draft from entry dto.
            </summary>
            <param name="entryDto">The entry dto.</param>
            <param name="changedBy">The name of the current user.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogContent.CatalogContentSync.CreateDraft(Mediachase.Commerce.Catalog.Dto.CatalogNodeDto,System.String)">
            <summary>
            Creates the draft.
            </summary>
            <param name="nodeDto">The node dto.</param>
            <param name="changedBy">The name of the current user.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogContent.CatalogContentSync.CreateDraft(Mediachase.Commerce.Catalog.Dto.CatalogDto,System.String)">
            <summary>
            Creates the draft.
            </summary>
            <param name="catalogDto">The catalog dto.</param>
            <param name="changedBy">The name of the current user.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogContent.CatalogContentSync.DeletePublishedVersionsOfInactiveContents(System.Int32[],Mediachase.Commerce.Catalog.CatalogContentType)">
            <summary>
            Deletes published catalog content versions - those are inactive.
            </summary>
            <param name="objectIds">The array of object id.</param>
            <param name="catalogContentType">The object type id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogContent.CatalogContentSync.DeleteAllVersions(System.Int32[],Mediachase.Commerce.Catalog.CatalogContentType)">
            <summary>
            Deletes catalog content versions.
            </summary>
            <param name="objectIds">The array of object id.</param>
            <param name="catalogContentType">The object type id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogContent.CatalogContentSync.UpdateSeoUri(System.Int32[],Mediachase.Commerce.Catalog.CatalogContentType)">
            <summary>
            Updates the SeoUri and SeoUriSegment for versions.
            </summary>
            <param name="objectIds">The object id collections that their versions need to updated.</param>
            <param name="catalogContentType">The catalog content type.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogContent.CatalogContentSync.UpdateMasterLanguage(System.Int32[],Mediachase.Commerce.Catalog.CatalogContentType)">
            <summary>
            Updates master language for all versions found which has the given object ids.
            </summary>
            <param name="objectIds">The object ids.</param>
            <param name="catalogContentType">The catalog content type.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogContent.CatalogContentSync.UpdateVersionMasterLanguage(System.Int32,System.String)">
            <summary>
            Updates versions when master language is changed.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="newMasterLanguage">The new default master language</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.CatalogContext">
            <summary>
            Catalog Context class is an entry point for all calls that are made to the catalog system.
            This class can be used for either remote or local usage.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogContext.Current">
            <summary>
            Gets the current.
            </summary>
            <value>The current.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogContext.MetaDataContext">
            <summary>
            Gets or sets the meta data context.
            </summary>
            <value>The meta data context.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogContext.DisableVersionSync">
            <summary>
            Gets the value of the DisableVersionSync appSetting, indicating whether an
            update to Catalog content done outside the Content APIs will remove any version data (e.g. drafts,
            old published versions...) for the affected Content.
            Setting this to true can improve the speed of batch operations done through the lower-level API:s
            (like ICatalogSystem), e.g. the catalog import.
            </summary>
            <value>
            <c>true</c> to delete all versions; <c>false</c> to update versions if content models are available.
            </value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.CatalogEntryChange">
            <summary>
            This is a placeholder class to signal changes in catalog entries to the event system, until work
            has been done to allow us to listen for changes on the actual data objects.  This class is only 
            to accelerate development of the improved catalog indexing, and any use of this of this class
            will eventually need to be replaced.
            </summary>
            <remarks>
            For internal use only.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogEntryChange.CatalogEntryId">
            <summary>
            A key for the catalog entry that has changed.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogEntryChange.CatalogEntryCode">
            <summary>
            The catalog entry code of the catalog entry that has changed.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogEntryChange.#ctor(System.String)">
            <summary>
            Creates a catalog entry change object from a string that has been retrieved from an event queue.
            </summary>
            <param name="queuedString">The string from the queue.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogEntryChange.GetQueueableString">
            <summary>
            Serializes the change to a string suitable for storing in an event queue, and deserializing
            with the constructor taking a single string argument.
            </summary>
            <returns>A serialized version of this object.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.CatalogEventLevel">
            <summary>
            Flag to indicate which events to raise remotely.
            </summary>
            <remarks>
            "episerver.commerce:CatalogEventLevel" appSetting can be used to control
            which catalog events will be raised remotely.
            If the setting is not present, or has invalid value, the default level is All.
            Combinations of levels can be used, for example
            <add key="episerver.commerce:CatalogEventLevel" value="EntryUpdated, NodeUpdated" />
            </remarks>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.CatalogIdentityResolver">
            <summary>
            Class to resolve catalog item code-id map.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogIdentityResolver.#ctor(EPiServer.Framework.Cache.ISynchronizedObjectInstanceCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CatalogIdentityResolver"/> class.
            </summary>
            <param name="cache">The cache.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogIdentityResolver.#ctor(EPiServer.Framework.Cache.ISynchronizedObjectInstanceCache,Mediachase.Commerce.Catalog.CatalogOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CatalogIdentityResolver"/> class.
            </summary>
            <param name="cache">The cache.</param>
            <param name="catalogOptions">The catalog options.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogIdentityResolver.Update(System.String,System.Int32,System.Guid)">
            <summary>
            Updates the specified code/id pair in cache.
            </summary>
            <param name="code">The code.</param>
            <param name="id">The identifier.</param>
            <param name="guid">The guid.</param>
            <exception cref="T:System.ArgumentNullException">code</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">id</exception>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogIdentityResolver.Clear(System.String,System.Int32,System.Guid)">
            <summary>
            Clears the specified code/id/guid from cache.
            </summary>
            <param name="code">The code.</param>
            <param name="id">The identifier.</param>
            <param name="guid">The guid.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogIdentityResolver.TryResolve(System.String,System.Int32@)">
            <summary>
            Tries to resolve id from code.
            </summary>
            <param name="code">The code.</param>
            <param name="foundId">The found identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogIdentityResolver.GetIdsByCodes(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets ids from the list of code.
            </summary>
            <param name="codes">The list of code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogIdentityResolver.GetIdsFromCache(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Get catalog IDs from catalog codes by cache lookup.
            </summary>
            <param name="codes">A list of catalog codes.</param>
            <returns>A dictionary mapping from catalog code to catalog id.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogIdentityResolver.TryResolve(System.Int32,System.String@)">
            <summary>
            Tries to resolve code from id.
            </summary>
            <param name="id">The identifier.</param>
            <param name="foundCode">The found code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogIdentityResolver.GetCodesByIds(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets codes from the list of id.
            </summary>
            <param name="ids">The list of id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogIdentityResolver.GetCodesByGuids(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Gets codes from the list of id.
            </summary>
            <param name="guids">The content guids</param>
            <returns>The list of codes correspondent to content guids.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogIdentityResolver.GetId(System.String)">
            <summary>
            Gets the identifier.
            </summary>
            <param name="code">The code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogIdentityResolver.GetIds(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the identifiers from list of code.
            </summary>
            <param name="codes">The list of code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogIdentityResolver.GetCode(System.Int32)">
            <summary>
            Gets the code.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogIdentityResolver.GetCodes(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets the code from list of id.
            </summary>
            <param name="ids">The list of identifiers.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogIdentityResolver.GetCodes(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Gets the code from list of guids.
            </summary>
            <param name="guids">The list of guids.</param>
            <returns>The list of codes correspondent to guids.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogIdentityResolver.CachePrefix">
            <summary>
            Gets the cache prefix.
            </summary>
            <value>
            The cache prefix.
            </value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.CatalogKey">
            <summary>
            Encapsulates data describing a unique key to a catalog entry.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogKey.CatalogEntryCode">
            <summary>
            Gets the code of the catalog entry.
            </summary>
            <value>The catalog entry code.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CatalogKey.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CatalogKey"/> class.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.CatalogOptions">
            <summary>
            Contains options for the catalog system.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogOptions.UseCache">
            <summary>
             Indicates if the cache is enabled.
            </summary>
            <remarks>Default value true.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogOptions.ContentVersionCacheExpiration">
            <summary>
             The expiration time for catalog content versions.
            </summary>
            <remarks>Default value is 10 minutes.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogOptions.CollectionCacheExpiration">
            <summary>
             The expiration time for catalog relations, catalog associations, catalog nodes, catalog entries, catalog, tax categories and merchants.
            </summary>
            <remarks>Default value is 5 minutes.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogOptions.EntryCacheExpiration">
            <summary>
             The expiration time for entries.
            </summary>
            <remarks>Default value is 15 minutes.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogOptions.NodeCacheExpiration">
            <summary>
             The expiration time for nodes.
            </summary>
            <remarks>Default value is 15 minutes.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogOptions.CurrencyCacheExpiration">
            <summary>
             The expiration time for currencies.
            </summary>
            <remarks>Default value is 1 hour.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogOptions.IdentityResolverCacheExpiration">
            <summary>
             The expiration time for the identity resolver.
            </summary>
            <remarks>Default value is 10 minutes.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogOptions.InventoryCacheExpiration">
            <summary>
            The expiration time for inventory.
            </summary>
            <remarks>Default value is 5 minutes.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogOptions.PriceCacheExpiration">
            <summary>
            The expiration time for price.
            </summary>
            <remarks>Default value is 10 minutes.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogOptions.PriceDetailsCacheExpiration">
            <summary>
            The expiration time for price details.
            </summary>
            <remarks>Default value is 10 minutes.</remarks>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.CatalogPermissions">
            <summary>
            Permissions for catalog subsytem
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.View">
            <summary>
            Gets the view permission.
            </summary>
            <value>
            The catalog view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.Create">
            <summary>
            Gets the create permission.
            </summary>
            <value>
            The catalog create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.Edit">
            <summary>
            Gets the edit permission.
            </summary>
            <value>
            The catalog edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.Delete">
            <summary>
            Gets the delete permission.
            </summary>
            <value>
            The catalog delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.Import">
            <summary>
            Gets the import permission.
            </summary>
            <value>
            The catalog import PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.Export">
            <summary>
            Gets the export permission.
            </summary>
            <value>
            The catalog export PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.NodeView">
            <summary>
            Gets the node view permission.
            </summary>
            <value>
            The catalog node view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.NodeEdit">
            <summary>
            Gets the node edit permission.
            </summary>
            <value>
            The catalog node edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.NodeDelete">
            <summary>
            Gets the node delete permission.
            </summary>
            <value>
            The catalog node delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.NodeCreate">
            <summary>
            Gets the node create permission.
            </summary>
            <value>
            The catalog node create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.EntryView">
            <summary>
            Gets the entry view permission.
            </summary>
            <value>
            The catalog entry view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.EntryCreate">
            <summary>
            Gets the entry create permission.
            </summary>
            <value>
            The catalog entry create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.EntryEdit">
            <summary>
            Gets the entry edit permission.
            </summary>
            <value>
            The catalog entry edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.EntryDelete">
            <summary>
            Gets the entry delete permission.
            </summary>
            <value>
            The catalog entry delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.WarehouseView">
            <summary>
            Gets the warehouse view permission.
            </summary>
            <value>
            The catalog warehouse view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.WarehouseDelete">
            <summary>
            Gets the warehouse delete permission.
            </summary>
            <value>
            The catalog warehouse delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.WarehouseCreate">
            <summary>
            Gets the warehouse create permission.
            </summary>
            <value>
            The catalog warehouse create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.WarehouseEdit">
            <summary>
            Gets the warehouse edit permission.
            </summary>
            <value>
            The catalog warehouse edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.CountryView">
            <summary>
            Gets the country view permission.
            </summary>
            <value>
            The catalog country view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.CountryDelete">
            <summary>
            Gets the country delete permission.
            </summary>
            <value>
            The catalog country delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.CountryCreate">
            <summary>
            Gets the country create permission.
            </summary>
            <value>
            The catalog country create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.CountryEdit">
            <summary>
            Gets the country edit permission.
            </summary>
            <value>
            The catalog country edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.TaxCategoryView">
            <summary>
            Gets the tax category view permission.
            </summary>
            <value>
            The catalog tax category view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.TaxCategoryDelete">
            <summary>
            Gets the tax category delete permission.
            </summary>
            <value>
            The catalog tax category delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.TaxCategoryCreate">
            <summary>
            Gets the tax category create permission.
            </summary>
            <value>
            The catalog tax category create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.TaxCategoryEdit">
            <summary>
            Gets the tax category edit permission.
            </summary>
            <value>
            The catalog tax category edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.CurrencyView">
            <summary>
            Gets the currency view permission.
            </summary>
            <value>
            The catalog currency view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.CurrencyDelete">
            <summary>
            Gets the currency delete permission.
            </summary>
            <value>
            The catalog currency delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.CurrencyCreate">
            <summary>
            Gets the currency create permission.
            </summary>
            <value>
            The catalog currency create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.CurrencyEdit">
            <summary>
            Gets the currency edit permission.
            </summary>
            <value>
            The catalog currency edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.MetaClassView">
            <summary>
            Gets the meta class view permission.
            </summary>
            <value>
            The catalog meta class view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.MetaClassDelete">
            <summary>
            Gets the meta class delete permission.
            </summary>
            <value>
            The catalog meta class delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.MetaClassCreate">
            <summary>
            Gets the meta class create permission.
            </summary>
            <value>
            The catalog meta class create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.MetaClassEdit">
            <summary>
            Gets the meta class edit permission.
            </summary>
            <value>
            The catalog meta class edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.MetaFieldView">
            <summary>
            Gets the meta field view permission.
            </summary>
            <value>
            The catalog meta field view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.MetaFieldDelete">
            <summary>
            Gets the meta field delete permission.
            </summary>
            <value>
            The catalog meta field delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.MetaFieldCreate">
            <summary>
            Gets the meta field create permission.
            </summary>
            <value>
            The catalog meta field create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.MetaFieldEdit">
            <summary>
            Gets the meta field edit permission.
            </summary>
            <value>
            The catalog meta field edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogPermissions.TabView">
            <summary>
            Gets the tab view permission.
            </summary>
            <value>
            The catalog tab view PermissionType.
            </value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.CatalogResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.CatalogResources.CatalogSystem">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.CSVImport.CategoryMappingMetaClass">
            <summary>
            Summary description for SkuMappingMetaClass.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.CategoryMappingMetaClass.#ctor(Mediachase.MetaDataPlus.MetaDataContext,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CSVImport.CategoryMappingMetaClass"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="CatalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.CategoryMappingMetaClass.#ctor(Mediachase.MetaDataPlus.MetaDataContext,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CSVImport.CategoryMappingMetaClass"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="metaClassId">The meta class id.</param>
            <param name="CatalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.CategoryMappingMetaClass.#ctor(Mediachase.MetaDataPlus.MetaDataContext,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CSVImport.CategoryMappingMetaClass"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="CatalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.CategoryMappingMetaClass.FillSystemColumnInfo(System.Collections.ArrayList)">
            <summary>
            Fills the system column info.
            </summary>
            <param name="array">The array.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.CategoryMappingMetaClass.CreateSystemRow(Mediachase.MetaDataPlus.Import.FillDataMode,System.Int32,System.Collections.ArrayList,System.Object[])">
            <summary>
            Creates the system row.
            </summary>
            <param name="Mode">The mode.</param>
            <param name="RowIndex">Index of the row.</param>
            <param name="warningList">The warning list.</param>
            <param name="Item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.CategoryMappingMetaClass.RaiseObjectUpdatedEvent(System.Int32)">
            <summary>
            Raise node updated event.
            </summary>
            <param name="objectId">The catalog node id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.CategoryMappingMetaClass.ConvertToDictionary(System.Object,Mediachase.MetaDataPlus.Configurator.MetaDataType,System.String,System.Int32,Mediachase.MetaDataPlus.Import.MDPImportWarning[]@)">
            <summary>
            Converts to dictionary.
            </summary>
            <param name="value">The value.</param>
            <param name="DestType">Type of the dest.</param>
            <param name="DestFieldName">Name of the dest field.</param>
            <param name="RowIndex">Index of the row.</param>
            <param name="warnings">The warnings.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.CategoryMappingMetaClass.ConvertToFile(System.Object,Mediachase.MetaDataPlus.Configurator.MetaDataType,System.String,System.Int32,Mediachase.MetaDataPlus.Import.MDPImportWarning[]@)">
            <summary>
            Converts to file.
            </summary>
            <param name="value">The value.</param>
            <param name="Dest">The dest.</param>
            <param name="DestFieldName">Name of the dest field.</param>
            <param name="RowIndex">Index of the row.</param>
            <param name="warnings">The warnings.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.CSVImport.EntryAssociationMappingMetaClass">
            <summary>
            Summary description for EntryAssociationMappingMetaClass.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryAssociationMappingMetaClass.#ctor(Mediachase.MetaDataPlus.MetaDataContext,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CSVImport.EntryAssociationMappingMetaClass"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="CatalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryAssociationMappingMetaClass.#ctor(Mediachase.MetaDataPlus.MetaDataContext,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CSVImport.EntryAssociationMappingMetaClass"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="metaClassId">The meta class id.</param>
            <param name="CatalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryAssociationMappingMetaClass.#ctor(Mediachase.MetaDataPlus.MetaDataContext,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CSVImport.EntryAssociationMappingMetaClass"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="CatalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryAssociationMappingMetaClass.FillSystemColumnInfo(System.Collections.ArrayList)">
            <summary>
            Fills the system column info.
            </summary>
            <param name="array">The array.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryAssociationMappingMetaClass.CreateSystemRow(Mediachase.MetaDataPlus.Import.FillDataMode,System.Int32,System.Collections.ArrayList,System.Object[])">
            <summary>
            Creates the system row.
            </summary>
            <param name="Mode">The mode.</param>
            <param name="RowIndex">Index of the row.</param>
            <param name="warningList">The warning list.</param>
            <param name="Item">The item.</param>
            <returns>The id of the child entry if a row of CatalogEntryAssociation for that entry is inserted sucessfully, otherwise return 0.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryAssociationMappingMetaClass.ConvertToDictionary(System.Object,Mediachase.MetaDataPlus.Configurator.MetaDataType,System.String,System.Int32,Mediachase.MetaDataPlus.Import.MDPImportWarning[]@)">
            <summary>
            Converts to dictionary.
            </summary>
            <param name="value">The value.</param>
            <param name="DestType">Type of the dest.</param>
            <param name="DestFieldName">Name of the dest field.</param>
            <param name="RowIndex">Index of the row.</param>
            <param name="warnings">The warnings.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryAssociationMappingMetaClass.ConvertToFile(System.Object,Mediachase.MetaDataPlus.Configurator.MetaDataType,System.String,System.Int32,Mediachase.MetaDataPlus.Import.MDPImportWarning[]@)">
            <summary>
            Converts to file.
            </summary>
            <param name="value">The value.</param>
            <param name="Dest">The dest.</param>
            <param name="DestFieldName">Name of the dest field.</param>
            <param name="RowIndex">Index of the row.</param>
            <param name="warnings">The warnings.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.CSVImport.EntryMappingMetaClass">
            <summary>
            Summary description for SkuMappingMetaClass.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryMappingMetaClass.#ctor(Mediachase.MetaDataPlus.MetaDataContext,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CSVImport.EntryMappingMetaClass"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="CatalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryMappingMetaClass.#ctor(Mediachase.MetaDataPlus.MetaDataContext,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CSVImport.EntryMappingMetaClass"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="metaClassId">The meta class id.</param>
            <param name="CatalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryMappingMetaClass.#ctor(Mediachase.MetaDataPlus.MetaDataContext,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CSVImport.EntryMappingMetaClass"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="CatalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryMappingMetaClass.FillSystemColumnInfo(System.Collections.ArrayList)">
            <summary>
            Fills the system column info.
            </summary>
            <param name="array">The array.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryMappingMetaClass.CreateSystemRow(Mediachase.MetaDataPlus.Import.FillDataMode,System.Int32,System.Collections.ArrayList,System.Object[])">
            <summary>
            Creates the system row.
            </summary>
            <param name="mode">The mode.</param>
            <param name="RowIndex">Index of the row.</param>
            <param name="warningList">The warning list.</param>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryMappingMetaClass.RaiseObjectUpdatedEvent(System.Int32)">
            <summary>
            Raise entry updated event.
            </summary>
            <param name="objectId">The catalog entry id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryMappingMetaClass.ConvertToDictionary(System.Object,Mediachase.MetaDataPlus.Configurator.MetaDataType,System.String,System.Int32,Mediachase.MetaDataPlus.Import.MDPImportWarning[]@)">
            <summary>
            Converts to dictionary.
            </summary>
            <param name="value">The value.</param>
            <param name="DestType">Type of the dest.</param>
            <param name="DestFieldName">Name of the dest field.</param>
            <param name="RowIndex">Index of the row.</param>
            <param name="warnings">The warnings.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryMappingMetaClass.ConvertToFile(System.Object,Mediachase.MetaDataPlus.Configurator.MetaDataType,System.String,System.Int32,Mediachase.MetaDataPlus.Import.MDPImportWarning[]@)">
            <summary>
            Converts to file.
            </summary>
            <param name="value">The value.</param>
            <param name="Dest">The dest.</param>
            <param name="DestFieldName">Name of the dest field.</param>
            <param name="RowIndex">Index of the row.</param>
            <param name="warnings">The warnings.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.CSVImport.EntryRelationMappingMetaClass">
            <summary>
            Summary description for SkuMappingMetaClass.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryRelationMappingMetaClass.#ctor(Mediachase.MetaDataPlus.MetaDataContext,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CSVImport.EntryRelationMappingMetaClass"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="CatalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryRelationMappingMetaClass.#ctor(Mediachase.MetaDataPlus.MetaDataContext,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CSVImport.EntryRelationMappingMetaClass"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="metaClassId">The meta class id.</param>
            <param name="CatalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryRelationMappingMetaClass.#ctor(Mediachase.MetaDataPlus.MetaDataContext,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CSVImport.EntryRelationMappingMetaClass"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="CatalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryRelationMappingMetaClass.FillSystemColumnInfo(System.Collections.ArrayList)">
            <summary>
            Fills the system column info.
            </summary>
            <param name="array">The array.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryRelationMappingMetaClass.CreateSystemRow(Mediachase.MetaDataPlus.Import.FillDataMode,System.Int32,System.Collections.ArrayList,System.Object[])">
            <summary>
            Creates the system row.
            </summary>
            <param name="Mode">The mode.</param>
            <param name="RowIndex">Index of the row.</param>
            <param name="warningList">The warning list.</param>
            <param name="Item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryRelationMappingMetaClass.ConvertToDictionary(System.Object,Mediachase.MetaDataPlus.Configurator.MetaDataType,System.String,System.Int32,Mediachase.MetaDataPlus.Import.MDPImportWarning[]@)">
            <summary>
            Converts to dictionary.
            </summary>
            <param name="value">The value.</param>
            <param name="DestType">Type of the dest.</param>
            <param name="DestFieldName">Name of the dest field.</param>
            <param name="RowIndex">Index of the row.</param>
            <param name="warnings">The warnings.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.EntryRelationMappingMetaClass.ConvertToFile(System.Object,Mediachase.MetaDataPlus.Configurator.MetaDataType,System.String,System.Int32,Mediachase.MetaDataPlus.Import.MDPImportWarning[]@)">
            <summary>
            Converts to file.
            </summary>
            <param name="value">The value.</param>
            <param name="Dest">The dest.</param>
            <param name="DestFieldName">Name of the dest field.</param>
            <param name="RowIndex">Index of the row.</param>
            <param name="warnings">The warnings.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.PricingMappingMetaClass.FillSystemColumnInfo(System.Collections.ArrayList)">
            <summary>
            Fills the system column info.
            </summary>
            <param name="array">The array.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.PricingMappingMetaClass.CreateSystemRow(Mediachase.MetaDataPlus.Import.FillDataMode,System.Int32,System.Collections.ArrayList,System.Object[])">
            <summary>
            Creates the system row.
            </summary>
            <param name="Mode">The mode.</param>
            <param name="RowIndex">Index of the row.</param>
            <param name="warningList">The warning list.</param>
            <param name="Item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.VariationMappingMetaClass.FillSystemColumnInfo(System.Collections.ArrayList)">
            <summary>
            Fills the system column info.
            </summary>
            <param name="array">The array.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.VariationMappingMetaClass.GetFirstMatchingWarehouseByIdOrName(System.String)">
            <summary>
            Gets the first matching warehouse based on its name or id.
            </summary>
            <param name="idOrName">The id or name of the warehouse to find.</param>
            <returns>Returns the first warehouse that matches the provided id or name. If idOrName is null
            or if there are no matching warehouses then the return value will be null.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.VariationMappingMetaClass.CreateSystemRow(Mediachase.MetaDataPlus.Import.FillDataMode,System.Int32,System.Collections.ArrayList,System.Object[])">
            <summary>
            Creates the system row.
            </summary>
            <param name="mode">The mode.</param>
            <param name="rowIndex">Index of the row.</param>
            <param name="warningList">The warning list.</param>
            <param name="item">The item.</param>
            <returns>Returns the CatalogEntryId of the updated variation. If the entry is deleted zero is returned.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.VariationMappingMetaClass.ConvertToDictionary(System.Object,Mediachase.MetaDataPlus.Configurator.MetaDataType,System.String,System.Int32,Mediachase.MetaDataPlus.Import.MDPImportWarning[]@)">
            <summary>
            Converts to dictionary.
            </summary>
            <param name="value">The value.</param>
            <param name="DestType">Type of the dest.</param>
            <param name="DestFieldName">Name of the dest field.</param>
            <param name="RowIndex">Index of the row.</param>
            <param name="warnings">The warnings.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.CSVImport.VariationMappingMetaClass.ConvertToFile(System.Object,Mediachase.MetaDataPlus.Configurator.MetaDataType,System.String,System.Int32,Mediachase.MetaDataPlus.Import.MDPImportWarning[]@)">
            <summary>
            Converts to file.
            </summary>
            <param name="value">The value.</param>
            <param name="Dest">The dest.</param>
            <param name="DestFieldName">Name of the dest field.</param>
            <param name="RowIndex">Index of the row.</param>
            <param name="warnings">The warnings.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.DataSources.CatalogIndexSearchDataSource">
            <summary>
            Represent catalog search data source to data-bound controls.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogIndexSearchDataSource.TotalResults">
            <summary>
            Gets or sets the total results.
            </summary>
            <value>The total results.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogIndexSearchDataSource.CatalogEntriesDto">
            <summary>
            Gets or sets the catalog entries.
            </summary>
            <value>The catalog entries.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.DataSources.CatalogIndexSearchDataSource.GetView(System.String)">
            <summary>
            Gets the named data source view associated with the data source control.
            </summary>
            <param name="viewName">The name of the view to retrieve.</param>
            <returns>
            Returns the named <see cref="T:System.Web.UI.DataSourceView"/> associated with the <see cref="T:System.Web.UI.IDataSource"/>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.DataSources.CatalogIndexSearchDataSource.GetViewNames">
            <summary>
            Gets a collection of names representing the list of view objects associated with the <see cref="T:System.Web.UI.IDataSource"/> interface.
            </summary>
            <returns>
            An <see cref="T:System.Collections.ICollection"/> that contains the names of the views associated with the <see cref="T:System.Web.UI.IDataSource"/>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.DataSources.CatalogIndexSearchDataSource.CatalogSearchDataSourceView">
            <summary>
            Represents the catalog search data source view.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.DataSources.CatalogIndexSearchDataSource.CatalogSearchDataSourceView.DefaultViewName">
            <summary>
            Represents the default catalog search view name
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.DataSources.CatalogIndexSearchDataSource.CatalogSearchDataSourceView.#ctor(System.Web.UI.IDataSource,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.DataSources.CatalogIndexSearchDataSource.CatalogSearchDataSourceView"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="name">The name.</param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogIndexSearchDataSource.CatalogSearchDataSourceView.CatalogEntriesDto">
            <summary>
            Gets or sets the catalog entries.
            </summary>
            <value>The catalog entries.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogIndexSearchDataSource.CatalogSearchDataSourceView.TotalResults">
            <summary>
            Gets or sets the total results.
            </summary>
            <value>The total results.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.DataSources.CatalogIndexSearchDataSource.CatalogSearchDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
            <summary>
            Gets a list of data from the underlying data storage.
            </summary>
            <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments"/> that is used to request operations on the data beyond basic data retrieval.</param>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> list of data from the underlying data storage.
            </returns>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogIndexSearchDataSource.CatalogSearchDataSourceView.CanRetrieveTotalRowCount">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports retrieving the total number of data rows, instead of the data.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogIndexSearchDataSource.CatalogSearchDataSourceView.CanPage">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports paging through the data retrieved by the <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)"/> method.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogIndexSearchDataSource.CatalogSearchDataSourceView.CanDelete">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)"/> operation.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogIndexSearchDataSource.CatalogSearchDataSourceView.CanInsert">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)"/> operation.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogIndexSearchDataSource.CatalogSearchDataSourceView.CanUpdate">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)"/> operation.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The default implementation returns false.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.DataSources.CatalogItemsDataSource">
            <summary>
            Represents catalog items data source to data-bound controls.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogItemsDataSource.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogItemsDataSource.ResponseGroup">
            <summary>
            Gets or sets the response group.
            </summary>
            <value>The response group.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.DataSources.CatalogItemsDataSource.GetView(System.String)">
            <summary>
            Gets the named data source view associated with the data source control.
            </summary>
            <param name="viewName">The name of the <see cref="T:System.Web.UI.DataSourceView"/> to retrieve. In data source controls that support only one view, such as <see cref="T:System.Web.UI.WebControls.SqlDataSource"/>, this parameter is ignored.</param>
            <returns>
            Returns the named <see cref="T:System.Web.UI.DataSourceView"/> associated with the <see cref="T:System.Web.UI.DataSourceControl"/>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.DataSources.CatalogItemsDataSource.GetViewNames">
            <summary>
            Gets a collection of names, representing the list of <see cref="T:System.Web.UI.DataSourceView"/> objects associated with the <see cref="T:System.Web.UI.DataSourceControl"/> control.
            </summary>
            <returns>
            An <see cref="T:System.Collections.ICollection"/> that contains the names of the <see cref="T:System.Web.UI.DataSourceView"/> objects associated with the <see cref="T:System.Web.UI.DataSourceControl"/>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.DataSources.CatalogItemsDataSource.CatalogNodesDataSourceView">
            <summary>
            Represents the catalog nodes data source view.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.DataSources.CatalogItemsDataSource.CatalogNodesDataSourceView.DefaultViewName">
            <summary>
            Represents the default catalog node view name
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.DataSources.CatalogItemsDataSource.CatalogNodesDataSourceView.CatalogNodesTreeViewName">
            <summary>
            Represents the view where first row is [...] allowing to navigate to parent folder
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.DataSources.CatalogItemsDataSource.CatalogNodesDataSourceView.#ctor(System.Web.UI.IDataSource,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.DataSources.CatalogItemsDataSource.CatalogNodesDataSourceView"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="name">The name.</param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogItemsDataSource.CatalogNodesDataSourceView.Parameters">
            <summary>
            Gets or sets the _Parameters.
            </summary>
            <value>The Parameters.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogItemsDataSource.CatalogNodesDataSourceView.ResponseGroup">
            <summary>
            Gets or sets the response group.
            </summary>
            <value>The response group.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.DataSources.CatalogItemsDataSource.CatalogNodesDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
            <summary>
            Gets a list of data from the underlying data storage.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogItemsDataSource.CatalogNodesDataSourceView.CanRetrieveTotalRowCount">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports retrieving the total number of data rows, instead of the data.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogItemsDataSource.CatalogNodesDataSourceView.CanPage">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports paging through the data retrieved by the <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)"/> method.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogItemsDataSource.CatalogNodesDataSourceView.CanDelete">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)"/> operation.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogItemsDataSource.CatalogNodesDataSourceView.CanInsert">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)"/> operation.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogItemsDataSource.CatalogNodesDataSourceView.CanUpdate">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)"/> operation.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The default implementation returns false.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource">
            <summary>
            Represent catalog search data source to data-bound controls.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.Options">
            <summary>
            Gets or sets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.ResponseGroup">
            <summary>
            Gets or sets the response group.
            </summary>
            <value>The response group.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.DataMode">
            <summary>
            Gets or sets the data mode.
            </summary>
            <value>The data mode.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.GetView(System.String)">
            <summary>
            Gets the named data source view associated with the data source control.
            </summary>
            <param name="viewName">The name of the view to retrieve.</param>
            <returns>
            Returns the named <see cref="T:System.Web.UI.DataSourceView"/> associated with the <see cref="T:System.Web.UI.IDataSource"/>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.GetViewNames">
            <summary>
            Gets a collection of names representing the list of view objects associated with the <see cref="T:System.Web.UI.IDataSource"/> interface.
            </summary>
            <returns>
            An <see cref="T:System.Collections.ICollection"/> that contains the names of the views associated with the <see cref="T:System.Web.UI.IDataSource"/>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.CatalogSearchDataMode">
            <summary>
            Defines the catalog search data mode.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.CatalogSearchDataMode.Objects">
            <summary>
            Represents the Objects catalog search mode
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.CatalogSearchDataMode.DataSet">
            <summary>
            Represents the DataSet catalog search mode
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.CatalogSearchDataSourceView">
            <summary>
            Represents the catalog search data source view.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.CatalogSearchDataSourceView.DefaultViewName">
            <summary>
            Represents the default catalog search view name
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.CatalogSearchDataSourceView.#ctor(System.Web.UI.IDataSource,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.CatalogSearchDataSourceView"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="name">The name.</param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.CatalogSearchDataSourceView.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.CatalogSearchDataSourceView.Options">
            <summary>
            Gets or sets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.CatalogSearchDataSourceView.ResponseGroup">
            <summary>
            Gets or sets the response group.
            </summary>
            <value>The response group.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.CatalogSearchDataSourceView.DataMode">
            <summary>
            Gets or sets the data mode.
            </summary>
            <value>The data mode.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.CatalogSearchDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
            <summary>
            Gets a list of data from the underlying data storage.
            </summary>
            <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments"/> that is used to request operations on the data beyond basic data retrieval.</param>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> list of data from the underlying data storage.
            </returns>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.CatalogSearchDataSourceView.CanRetrieveTotalRowCount">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports retrieving the total number of data rows, instead of the data.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.CatalogSearchDataSourceView.CanPage">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports paging through the data retrieved by the <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)"/> method.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.CatalogSearchDataSourceView.CanDelete">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)"/> operation.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.CatalogSearchDataSourceView.CanInsert">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)"/> operation.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.DataSources.CatalogSearchDataSource.CatalogSearchDataSourceView.CanUpdate">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)"/> operation.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The default implementation returns false.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Data.CatalogAdmin">
            <summary>
            Contains all the functions needed to perform administration on the catalog
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Data.CatalogAdmin.CurrentDto">
            <summary>
            Gets the current dto.
            </summary>
            <value>The current dto.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogAdmin.Save">
            <summary>
            Updates the catalog.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogAdmin.Load">
            <summary>
            Loads the specified site GUID.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogAdmin.Load(System.Int32)">
            <summary>
            Loads the specified catalog id.
            </summary>
            <param name="catalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogAdmin.GetAllChangedValues``1(System.Data.TypedTableBase{``0},System.Data.DataColumn[])">
            <summary>
            Gets the original and current values (pending row state) of the specified columns in all changed rows in the specified table.
            </summary>
            <typeparam name="TRow">The type of the rows in the table.</typeparam>
            <param name="table">The table to inspect.</param>
            <param name="columns">The columns to fetch values from.</param>
            <returns>A enumerable of all values (including duplicates).</returns>
            <remarks>Only non-null, integer typed columns are supported.</remarks>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Data.CatalogAssociationAdmin">
            <summary>
            Implements administrator operations for the catalog association.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Data.CatalogAssociationAdmin.CurrentDto">
            <summary>
            Gets the catalog association DTO wrapped by this administrator.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogAssociationAdmin.Load(System.Int32)">
            <summary>
            Loads the specified catalog association by id.
            </summary>
            <param name="catalogAssociationId">The catalog association id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogAssociationAdmin.LoadByList(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Loads catalog associations for the specified catalog entries.
            </summary>
            <param name="catalogEntryIds">Catalog entry identifiers that associations as desired for.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogAssociationAdmin.DeleteByList(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Deletes catalog associations for the specified catalog entries.
            </summary>
            <param name="catalogEntryIds">Catalog entry identifiers that associations as desired for.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogAssociationAdmin.Load(System.String)">
            <summary>
            Loads all catalog associations with the specified name.
            </summary>
            <param name="catalogAssociationName">The association name.</param>
            <remarks>Warning: this may produce a very large result set.</remarks>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogAssociationAdmin.Save">
            <summary>
            Saves changes to the current DTO's associations.  Changes to AssociationType are not saved.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogAssociationAdmin.SaveAssociationType">
            <summary>
            Saves changes to the current DTO's association types.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogAssociationAdmin.Delete(System.Int32)">
            <summary>
            Deletes the specified catalog association.
            </summary>
            <param name="catalogAssociationId">The identifier of the association to delete.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogAssociationAdmin.LoadByCatalogEntryId(System.Int32)">
            <summary>
            Loads the association by catalog entry id.
            </summary>
            <param name="catalogEntryId">The catalog entry id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogAssociationAdmin.LoadByCatalogEntryCode(System.Int32,System.String)">
            <summary>
            Loads the association by catalog entry code.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="catalogEntryCode">The catalog entry code.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogAssociationAdmin.LoadByCatalogId(System.Int32)">
            <summary>
            Loads the association by catalog id.
            </summary>
            <param name="catalogId">The catalog id.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Data.CatalogDataHelper">
            <summary>
            Helper class for catalog data and data commands
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogDataHelper.CreateDataCommand">
            <summary>
            Creates the data command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.CurrentDto">
            <summary>
            Gets the current dto.
            </summary>
            <value>The current dto.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.Load(System.Int32,System.Nullable{Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup})">
            <summary>
            Loads the specified catalog entry id, according to catalog entry response group
            </summary>
            <remarks>It will load at least CatalogEntry and CatalogItemSeo, whatever the response groupe is</remarks>
            <param name="catalogEntryId">The catalog entry id.</param>
            <param name="responseGroup">The response group</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.Load(System.String,System.Nullable{Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup})">
            <summary>
            Loads the specified catalog entry code according a catalog entry response group
            </summary>
            <remarks>It will load at least CatalogEntry and CatalogItemSeo, whatever the response groupe is</remarks>
            <param name="catalogEntryCode">The catalog entry code.</param>
            <param name="responseGroup">The response group</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.GetEntryIdsByCodes(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets entry id by entry codes
            </summary>
            <param name="entryCodes">the entry codse</param>
            <returns>List of entry id</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.GetCodesByEntryIds(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets entry codes by entry ids
            </summary>
            <param name="entryIds">the entry ids</param>
            <returns>List of entry code</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.GetCodesByEntryGuids(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Gets entry codes by entry guids.
            </summary>
            <param name="entryGuids">The entry guids.</param>
            <returns>List of entry codes.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.Save">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.MergeSeoInfo(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemSeoDataTable,Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemSeoDataTable)">
            <summary>
            Merges SEO information from <paramref name="from"/> table to <paramref name="to"/> table.
            </summary>
            <param name="from">SEO table to get data from.</param>
            <param name="to">SEO table to merge data to.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.LoadSeoByList(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Loads only list of CatalogSeoItems.
            </summary>
            <param name="catalogEntryIds">The catalog entry ids.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.LoadByCatalogId(System.Int32,System.Nullable{Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup})">
            <summary>
            Loads the by catalog id according to catalog entry response group
            </summary>
            <remarks>It will load at least CatalogEntry and CatalogItemSeo, whatever the response groupe is</remarks>
            <param name="catalogId">The catalog id.</param>
            <param name="responseGroup">The catalog entry response group</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.LoadAllByCatalogId(System.Int32)">
            <summary>
            Loads ALL the entries the by catalog id.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <remarks>This method is created so we can get and delete all remaining entries in an extremely rare case. Use it with cautions!</remarks>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.LoadByCatalogNodeId(System.Int32,System.Int32,System.Nullable{Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup})">
            <summary>
            Loads the by catalog node id according to catalog entry response group
            </summary>
            <remarks>It will load at least CatalogEntry and CatalogItemSeo, whatever the response groupe is</remarks>
            <param name="catalogId">The catalog id.</param>
            <param name="catalogNodeId">The catalog node id.</param>
            <param name="responseGroup">The catalog entry response group</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.LoadByCatalogName(System.String,System.Nullable{Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup})">
            <summary>
            Loads the by catalog name according to catalog entry response group
            </summary>
            <remarks>It will load at least CatalogEntry and CatalogItemSeo, whatever the response groupe is</remarks>
            <param name="catalogName">Name of the catalog.</param>
            <param name="responseGroup">The catalog entry response group</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.LoadByCatalogNodeId(System.String,System.Int32,System.Nullable{Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup})">
            <summary>
            Loads the by catalog node id according to catalog entry response group
            </summary>
            <remarks>It will load at least CatalogEntry and CatalogItemSeo, whatever the response groupe is</remarks>
            <param name="catalogName">Name of the catalog.</param>
            <param name="catalogNodeId">The catalog node id.</param>
            <param name="responseGroup">The catalog entry response group</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.LoadByCatalogNodeCode(System.String,System.String,System.Nullable{Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup})">
            <summary>
            Loads the entrie by catalog name and node code according to catalog entry response group
            </summary>
            <remarks>It will load at least CatalogEntry and CatalogItemSeo, whatever the response groupe is</remarks>
            <param name="catalogName">Name of the catalog.</param>
            <param name="catalogNodeCode">The catalog node code.</param>
            <param name="responseGroup">The catalog entry response group</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.LoadByUri(System.String,System.String,System.Nullable{Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup})">
            <summary>
            Gets the catalog node by URI and language code according to catalog entry response group
            </summary>
            <remarks>It will load at least CatalogEntry and CatalogItemSeo, whatever the response groupe is</remarks>
            <param name="uri">The URI.</param>
            <param name="languageCode">The language code.</param>
            <param name="responseGroup">The catalog entry response group</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.LoadChildren(System.Int32,System.String,System.String,System.Nullable{Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup})">
            <summary>
            Loads the by parent entry id according to catalog entry response group
            </summary>
            <remarks>It will load at least CatalogEntry and CatalogItemSeo, whatever the response groupe is</remarks>
            <param name="parentEntryId">The parent entry id.</param>
            <param name="entryType">Type of the entry.</param>
            <param name="relationType">Type of the relation.</param>
            <param name="responseGroup">The catalog entry response group</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.LoadByName(System.String,System.String,System.Nullable{Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup})">
            <summary>
            Loads the entry by name and type according to catalog entry response group
            </summary>
            <remarks>It will load at least CatalogEntry and CatalogItemSeo, whatever the response groupe is</remarks>
            <param name="name">The name.</param>
            <param name="entryType">Type of the entry.</param>
            <param name="responseGroup">The catalog entry response group</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.LoadAssociated(System.Int32,System.String,System.Nullable{Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup})">
            <summary>
            Loads the associated according to catalog entry response group
            </summary>
            <remarks>It will load at least CatalogEntry and CatalogItemSeo, whatever the response groupe is</remarks>
            <param name="parentEntryId">The parent entry id.</param>
            <param name="associationName">Name of the association.</param>
            <param name="responseGroup">The catalog entry response group</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.LoadAssociated(System.String,System.String,System.Nullable{Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup})">
            <summary>
            Loads the associated according to catalog entry response group
            </summary>
            <remarks>It will load at least CatalogEntry and CatalogItemSeo, whatever the response groupe is</remarks>
            <param name="parentEntryCode">The parent entry code.</param>
            <param name="associationName">Name of the association.</param>
            <param name="responseGroup">The catalog entry response group</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.LoadMerchants">
            <summary>
            Loads all the merchants for the current application.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.LoadSearchResults(System.Guid,System.Nullable{Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup})">
            <summary>
            Loads the search results.
            </summary>
            <param name="searchSetId">The search set id.</param>
            <param name="responseGroup">The response group.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.CreateEntityListTable(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Creates an empty table for use with the udttEntityList data type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.ValidateAndLoadSeo(System.Collections.Generic.IDictionary{System.Int32,System.String},Mediachase.Commerce.Catalog.Dto.CatalogEntryDto)">
            <summary>
            Validates the SEO data, generates the unique one if needed, and update the CatalogItemSeo table of <paramref name="entryDto"/>.
            </summary>
            <remarks>If it found any invalid SEO data, it will update the CatalogItemSeo table of <paramref name="entryDto"/> with the correct data.</remarks>
            <param name="catalogEntryIdsAndNames">Dictionary of entry Id and name, which is used to generate the SEO data.</param>
            <param name="entryDto">The entry DTO to validate.</param>
            <returns>The Id of entries having SeoUri and SeoUriSegment that have been changed.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.CreateItemSeoDataTable(System.Collections.Generic.IDictionary{System.Int32,System.String},Mediachase.Commerce.Catalog.Dto.CatalogEntryDto)">
            <summary>
            Creates and returns the Catalog item Seo data as DataTable, based on the entry Id list and the Entry Dto.
            </summary>
            <param name="catalogEntryIdsAndNames">Dictionary of entry Id and name. These entries will be in the output data table.</param>
            <param name="entryDto">The catalog entry DTO.</param>
            <returns>Catalog item Seo data as DataTable.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.GenerateUri(System.String,System.String,Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemSeoDataTable,System.Collections.Generic.HashSet{System.String})">
            <summary>
            Generates Seo Uri for an entity.
            </summary>
            <remarks>Use this to generate Seo Uri for entity in a Seo DataTable only, since it only guarantees uniqueness inside <paramref name="seoTable"/>.</remarks>
            <param name="entityName">Name of the entity which is used to generate Uri.</param>
            <param name="languageCode">Language code.</param>
            <param name="seoTable">The Seo table to check for duplication.</param>
            <param name="knownUris">The known Uris.</param>
            <returns>Seo Uri as string.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.GenerateUriSegment(System.String,System.Int32,Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemSeoDataTable,System.String,System.Collections.Generic.HashSet{System.String})">
            <summary>
            Generates Seo Uri segment for an entity.
            </summary>
            <remarks>Use this to generate Seo Uri segment for entity in a Seo DataTable only, since it only guarantees uniqueness inside <paramref name="seoTable"/>.</remarks>
            <param name="entityName">Name of the entity which is used to generate Uri.</param>
            <param name="entityId">Entity id.</param>
            <param name="seoTable">The Seo table to check for duplication.</param>
            <param name="languageCode">The language code.</param>
            <param name="knownUriSegments">Known urisegments</param>
            <returns>Seo Uri segment as string.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.GetTableMapping(System.Nullable{Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup})">
            <summary>
            Get list of datatable's names of a dataset when loading catalog entry according to a catalog entry response group
            There are always at least 2 tables: CatalogEntry and CatalogItemSeo (equivalent with CatalogEntryInfo response group)
            </summary>
            <param name="responseGroup">The response group</param>
            <returns>array of DataTableMapping</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogEntryAdmin.HasCustomUniqueValueGenerator">
            <summary>
            Check if a custom implementation of <seealso cref="T:Mediachase.Commerce.Catalog.Data.UniqueValueGenerator"/> is used.
            If there is a custom implementation, we will use that one to generate SEO URL, otherwise, use our new Stored procedure, to boost the performance.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Data.CatalogLogAdmin">
            <summary>
            Implements administrative functions for the log
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Data.CatalogLogAdmin.CurrentDto">
            <summary>
            Gets the current dto.
            </summary>
            <value>The current dto.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogLogAdmin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Data.CatalogLogAdmin"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogLogAdmin.#ctor(Mediachase.Commerce.Catalog.Dto.CatalogLogDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Data.CatalogLogAdmin"/> class.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogLogAdmin.Load(System.String,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Loads the specified operation.
            </summary>
            <param name="operation">The operation.</param>
            <param name="objectType">Type of the object.</param>
            <param name="created">The created.</param>
            <param name="startingRecord">The starting record.</param>
            <param name="numberOfRecords">The number of records.</param>
            <param name="totalRecords">The total records.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogLogAdmin.Save">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Data.CatalogNodeAdmin">
            <summary>
            Implements administrative functions for the catalog node
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogNodeAdmin.Load(System.Int32)">
            <summary>
            Gets the catalog node.
            </summary>
            <param name="catalogNodeId">The catalog node id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogNodeAdmin.Load(System.String)">
            <summary>
            Loads the specified code.
            </summary>
            <param name="code">The code.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogNodeAdmin.LoadAssets(System.Int32)">
            <summary>
            Loads the assets.
            </summary>
            <param name="catalogNodeId">The catalog node id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogNodeAdmin.LoadSearchResults(System.Guid)">
            <summary>
            Loads the search results.
            </summary>
            <param name="searchSetId">The search set id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogNodeAdmin.Save">
            <summary>
            Updates the catalog node.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogNodeAdmin.MergeSeoInfo(Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogItemSeoDataTable,Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogItemSeoDataTable)">
            <summary>
            Merges SEO information from <paramref name="from"/> table to <paramref name="to"/> table.
            </summary>
            <param name="from">SEO table to get data from.</param>
            <param name="to">SEO table to merge data to.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogNodeAdmin.LoadByCatalogId(System.Int32)">
            <summary>
            Loads the by catalog id.
            </summary>
            <param name="catalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogNodeAdmin.LoadByCatalogName(System.String)">
            <summary>
            Loads the by catalog name.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogNodeAdmin.LoadByParentNodeId(System.Int32,System.Int32)">
            <summary>
            Loads the by catalog id.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="parentNodeId">The parent node id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogNodeAdmin.LoadByParentNodeCode(System.String,System.String)">
            <summary>
            Loads the by parent node code.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="parentNodeCode">The parent node code.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogNodeAdmin.LoadByUri(System.String,System.String)">
            <summary>
            Gets the catalog node by URL na dlanguage code.
            </summary>
            <param name="uri">The URI.</param>
            <param name="languageCode">The language code.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogNodeAdmin.GetNodeIdsByCodes(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets node ids by list of node code
            </summary>
            <param name="nodeCodes">The list of code</param>
            <returns>List of node id</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogNodeAdmin.GetCodesByNodeIds(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets node codes by list of node id
            </summary>
            <param name="nodeIds">The node id</param>
            <returns>List of node codes</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogNodeAdmin.ValidateAndLoadSeo(System.Collections.Generic.IDictionary{System.Int32,System.String},Mediachase.Commerce.Catalog.Dto.CatalogNodeDto)">
            <summary>
            Validates the SEO data, generates the unique one if needed, and update the CatalogItemSeo table of <paramref name="nodeDto"/>.
            </summary>
            <remarks>If it found any invalid SEO data, it will update the CatalogItemSeo table of <paramref name="nodeDto"/> with the correct data.</remarks>
            <param name="nodeIdsAndNames">Dictionary of node Id and name, which is used to generate the SEO data.</param>
            <param name="nodeDto">The entry DTO to validate.</param>
            <returns>The Id of nodes having SeoUri and SeoUriSegment that have been changed.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogNodeAdmin.CreateItemSeoDataTable(System.Collections.Generic.IDictionary{System.Int32,System.String},Mediachase.Commerce.Catalog.Dto.CatalogNodeDto)">
            <summary>
            Creates and returns the Catalog item Seo data as DataTable, based on the node Id list and the Node Dto.
            </summary>
            <param name="nodeIdsAndNames">Dictionary of node Id and name. These nodes will be in the output data table.</param>
            <param name="nodeDto">The catalog node DTO.</param>
            <returns>Catalog item Seo data as DataTable.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogNodeAdmin.GenerateUri(System.String,System.String,Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogItemSeoDataTable)">
            <summary>
            Generates Seo Uri for an entity.
            </summary>
            <remarks>Use this to generate Seo Uri for entity in a Seo DataTable only, since it only guarantees uniqueness inside <paramref name="seoTable"/>.</remarks>
            <param name="entityName">Name of the entity which is used to generate Uri.</param>
            <param name="languageCode">Language code.</param>
            <param name="seoTable">The Seo table to check for duplication.</param>
            <returns>Seo Uri as string.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogNodeAdmin.GenerateUriSegment(System.String,System.Int32,Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogItemSeoDataTable,System.String)">
            <summary>
            Generates Seo Uri segment for an entity.
            </summary>
            <remarks>Use this to generate Seo Uri segment for entity in a Seo DataTable only, since it only guarantees uniqueness inside <paramref name="seoTable"/>.</remarks>
            <param name="entityName">Name of the entity which is used to generate Uri.</param>
            <param name="entityId">Entity id.</param>
            <param name="seoTable">The Seo table to check for duplication.</param>
            <param name="languageCode">The language Code.</param>
            <returns>Seo Uri segment as string.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogNodeAdmin.HasCustomUniqueValueGenerator">
            <summary>
            Check if a custom implementation of <seealso cref="T:Mediachase.Commerce.Catalog.Data.UniqueValueGenerator"/> is used.
            If there is a custom implementation, we will use that one to generate SEO URL, otherwise, use our new Stored procedure, to boost the performance.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Data.CatalogRelationAdmin">
            <summary>
            Implements administrative functions for the catalog relation
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Data.CatalogRelationAdmin.CurrentDto">
            <summary>
            Gets the current dto.
            </summary>
            <value>The current dto.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogRelationAdmin.Load(System.Int32,System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Loads relationship data for the specified catalog id.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="catalogNodeId">The catalog node id.</param>
            <param name="catalogEntryId">The catalog entry id.</param>
            <param name="groupName">Name of the group.</param>
            <param name="responseGroup">The response group.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogRelationAdmin.GetNodeEntryRelations(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets the parent nodes for entires.
            </summary>
            <param name="catalogEntryIds">The catalog entry ids.</param>
            <returns>Entries (key) with it's parent nodes (value).</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogRelationAdmin.Load(System.Int32)">
            <summary>
            Loads relationship data for the specified child catalog entry.
            </summary>
            <param name="childEntryId">The child entry id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogRelationAdmin.LoadAsset(System.String)">
            <summary>
            Loads assets by key.
            </summary>
            <param name="key">The asset key.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogRelationAdmin.LoadRelationDtoForCatalogEntries(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Loads all entry-entry and node-entry relations involving the specified catalog entry ids.
            </summary>
            <param name="catalogEntryIds">The IDs of the target catalog entries.</param>
            <param name="catalogNodeIds">The IDs of the target catalog nodes.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogRelationAdmin.DeleteByList(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Delete node entry relations of the specified catalog entry and node ids.
            </summary>
            <param name="catalogEntryIds">The IDs of the target catalog entries.</param>
            <param name="catalogNodeIds">The IDs of the target catalog nodes.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogRelationAdmin.Save">
            <summary>
            Updates the catalog node.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CatalogRelationAdmin.GetAllChangedValues``1(System.Data.TypedTableBase{``0},System.Data.DataColumn[])">
            <summary>
            Gets the original and current values (pending row state) of the specified columns in all changed rows in the specified table.
            </summary>
            <typeparam name="TRow">The type of the rows in the table.</typeparam>
            <param name="table">The table to inspect.</param>
            <param name="columns">The columns to fetch values from.</param>
            <returns>A enumerable of all values (including duplicates).</returns>
            <remarks>Only non-null, integer typed columns are supported.</remarks>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Data.ContentGuidAdmin">
            <summary>
            Represents the database access to get catalog content guid from database.
            
            This class supports the EPiServer Commerce infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.ContentGuidAdmin.#ctor(Mediachase.Commerce.Catalog.ReferenceConverter)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Data.ContentGuidAdmin" /> class.
            </summary>
            <param name="referenceConverter">The reference converter.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.ContentGuidAdmin.ResolveContentLink(System.Guid)">
            <summary>
            Gets content link from <paramref name="contentGuid"/>.
            </summary>
            <param name="contentGuid">The content unique identifier.</param>
            <returns>Content link, or empty reference if the content link is not found</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.ContentGuidAdmin.ResolveContentGuid(EPiServer.Core.ContentReference)">
            <summary>
            Gets content Guid from <paramref name="contentLink"/>.
            </summary>
            <param name="contentLink">The content link.</param>
            <returns>The Guid for the specifed content, or Guid.Empty if the content guid is not found</returns>
            <exception cref="T:System.ArgumentException">The input content link is not CatalogEntry, CatalogNode or Catalog.</exception>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.ContentGuidAdmin.GetEntityIdByContentGuid(System.Guid)">
            <summary>
            Gets catalog content id by content guid. The catalog content might be catalog, node or entry
            </summary>
            <param name="contentGuid">the content guid</param>
            <returns>node id</returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Data.CurrencyAdmin">
            <summary>
            Implements administrative functions for the currency
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CurrencyAdmin.Load">
            <summary>
            Loads the currencies.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CurrencyAdmin.LoadByCurrencyId(System.Int32)">
            <summary>
            Loads the currency by specified currency id.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CurrencyAdmin.LoadByCurrency(Mediachase.Commerce.Currency)">
            <summary>
            Loads the currency by specified currency code.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.CurrencyAdmin.Save(Mediachase.Commerce.Catalog.Dto.CurrencyDto)">
            <summary>
            Updates the currency.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Data.UniqueSeoGenerator">
            <summary>
            Represents class to generate Uri and Uri segment, and guarantee uniqueness.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.UniqueSeoGenerator.GenerateSeoUri(System.String,System.String,System.Boolean)">
            <summary>
            Returns unique Uri value as string.
            </summary>
            <param name="name">Entity name, which is used to generate Uri.</param>
            <param name="languageCode">Language code, which is included in the Uri.</param>
            <param name="includeRandomToken">Flag to indicate whether the random hash should be included in the Uri or not.</param>
            <returns>Unique Uri value as string.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.UniqueSeoGenerator.GenerateUriSegment(System.String,System.Boolean)">
            <summary>
            Returns unique Uri segment value as string.
            </summary>
            <param name="name">Entity name, which is used to generate Uri segment.</param>
            <param name="includeRandomToken">Flag to indicate whether the random hash should be included in the Uri segment or not.</param>
            <returns>Unique Uri segment value as string.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.UniqueSeoGenerator.GetRandomToken">
            <summary>
            Returns a random token as string.
            </summary>
            <returns>Random token as string.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Data.UniqueValueGenerator">
            <summary>
            Generates values for fields that needs to be unique.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.UniqueValueGenerator.#ctor(Mediachase.Commerce.Catalog.ICatalogSystem,EPiServer.Web.IUrlSegmentGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Data.UniqueValueGenerator" /> class.
            </summary>
            <param name="catalogContext">The catalog context.</param>
            <param name="urlSegmentGenerator">The URL segment generator.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.UniqueValueGenerator.GenerateCode(System.String)">
            <summary>
            Generates a unique code for the specified <paramref name="name"/>.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.UniqueValueGenerator.CheckExistEntryNodeByCode(System.String)">
            <summary>
            Checks if it exists any entry or node with a given code
            </summary>
            <param name="code">the code</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.UniqueValueGenerator.GenerateSeoUri(System.String,System.String,System.Func{System.String,System.Boolean})">
            <summary>
            Generates a unique seo URI based on the specified <paramref name="name"/> and <paramref name="languageCode"/>.
            </summary>
            <param name="name">The name.</param>
            <param name="languageCode">The language code.</param>
            <param name="additionalValidator">If non null, the result will be validated with the function.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Data.UniqueValueGenerator.SuggestSeoUri(System.String,System.String,System.Int32,System.String)">
            <summary>
            Suggests an URL that will be validated for uniqueness.
            </summary>
            <param name="name">The name that can be used to create the url.</param>
            <param name="languageCode">The language code.</param>
            <param name="index">A number that will be incremented for each validation.</param>
            <param name="duplicateUrl">The previously validated uri that is confirmed to be a duplicate. Will be null on the first iteration.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.DefaultCatalogMetaObjectUpdateNotifier">
            <summary>
            Default implementation of <see cref="T:Mediachase.MetaDataPlus.Internal.ICatalogMetaObjectUpdateNotifier"/> which uses
            the notified node/entry ID:s to raise update events from <see cref="T:Mediachase.Commerce.Catalog.EventContext"/>
            and notify <see cref="T:Mediachase.Commerce.CatalogItemChangeManager"/>.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto.Items">
            <summary>
            Gets a key-value collection that can be used to attach data to the DTO
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto.AssociationTypeRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto.CatalogAssociationRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto.CatalogEntryAssociationRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto.CatalogAssociationDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto.CatalogEntryAssociationDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto.AssociationTypeDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto.CatalogAssociationRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto.CatalogEntryAssociationRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto.AssociationTypeRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogDto.CatalogDataTable">
            <summary>
            Partial class, adding missing methods for CatalogDataTable to avoid breaking changes.
            </summary>
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Dto.CatalogDto.Items">
            <summary>
            Gets a key-value collection that can be used to attach data to the DTO
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogDto.CatalogRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogDto.CatalogLanguageRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogDto.CatalogSecurityDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogDto.CatalogLanguageDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogDto.SiteCatalogDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogDto.CatalogSecurityRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogDto.SiteCatalogRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogDto.CatalogRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogDto.CatalogSecurityRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogDto.CatalogLanguageRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogDto.SiteCatalogRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
            <summary>
            Classes and properties for InventoryDataTable to avoid breaking changes.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.VariationDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
            <summary>
            Partial class, adding missing methods for VariationDataTable to avoid breaking changes.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemAssetDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.Items">
            <summary>
            Gets a key-value collection that can be used to attach data to the DTO
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryRow.ShallowCopy">
            <summary>
            Shallows the copy.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemSeoRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.VariationRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemAssetRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemSeoDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogAssociationDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.MerchantDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.SalePriceDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.NodeEntryRelationDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogAssociationRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.MerchantRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.SalePriceRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.NodeEntryRelationRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemSeoRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.VariationRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogAssociationRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.MerchantRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.SalePriceRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemAssetRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.NodeEntryRelationRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogLogDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogLogDto.CatalogLogDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogLogDto.CatalogLogRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogLogDto.CatalogLogRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.Items">
            <summary>
            Gets a key-value collection that can be used to attach data to the DTO
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogNodeRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogItemSeoRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogItemAssetRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogNodeDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogItemSeoDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogItemAssetDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogNodeRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogItemSeoRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogItemAssetRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogRelationDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.Items">
            <summary>
            Gets a key-value collection that can be used to attach data to the DTO
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.CatalogEntryRelationRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.CatalogNodeRelationRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.NodeEntryRelationRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.CatalogNodeRelationDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.NodeEntryRelationDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.CatalogEntryRelationDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.CatalogItemAssetDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.CatalogItemAssetRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.CatalogNodeRelationRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.NodeEntryRelationRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.CatalogEntryRelationRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.CatalogItemAssetRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogTaxDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogTaxDto.TaxCategoryDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogTaxDto.TaxCategoryRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CatalogTaxDto.TaxCategoryRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CurrencyDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CurrencyDto.CurrencyDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CurrencyDto.CurrencyRateDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CurrencyDto.CurrencyRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CurrencyDto.CurrencyRateRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CurrencyDto.CurrencyRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.CurrencyDto.CurrencyRateRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.WarehouseDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.WarehouseDto.WarehouseDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.WarehouseDto.WarehouseRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Dto.WarehouseDto.WarehouseRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.EntryIdentityResolver">
            <summary>
            Class to resolve catalog entry code-id map.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EntryIdentityResolver.#ctor(EPiServer.Framework.Cache.ISynchronizedObjectInstanceCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.EntryIdentityResolver"/> class.
            </summary>
            <param name="cache">The cache.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EntryIdentityResolver.#ctor(EPiServer.Framework.Cache.ISynchronizedObjectInstanceCache,Mediachase.Commerce.Catalog.CatalogOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.EntryIdentityResolver"/> class.
            </summary>
            <param name="cache">The cache.</param>
            <param name="catalogOptions">The catalog options.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EntryIdentityResolver.GetIds(System.Collections.Generic.IEnumerable{System.String})">
            <inheridoc/>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EntryIdentityResolver.GetCodes(System.Collections.Generic.IEnumerable{System.Int32})">
            <inheridoc/>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EntryIdentityResolver.GetCodes(System.Collections.Generic.IEnumerable{System.Guid})">
            <inheridoc/>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.EntryIdentityResolver.CachePrefix">
            <inheridoc/>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.EventContext">
            <summary>
            This class is reponsible for the following:
            1. Loading all the plugins.
            2. Binding those plugins to appropriate handlers
            3. Providing methods to generate events
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.EventContext.EntryEventHandler">
            <summary>
            Handles the entry event.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.EventContext.DeletedEntryEventHandler">
            <summary>
            Handles the entry deleted event.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.EventContext.NodeEventHandler">
            <summary>
            Handles the node event.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.EventContext.DeletedNodeEventHandler">
            <summary>
            Handles the node deleted event.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.EventContext.CatalogEventHandler">
            <summary>
            Handles the catalog event.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.EventContext.DeletedCatalogEventHandler">
            <summary>
            Handles the catalog deleted event.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.EventContext.CatalogLanguageEventHandler">
            <summary>
            Handles the catalog deleted event.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.EventContext.AssociationEventHandler">
            <summary>
            Handles the association event.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.EventContext.DeletedAssociationEventHandler">
            <summary>
            Handles the association deleted event.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.EventContext.RelationEventHandler">
            <summary>
            Handles the relation event.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.EventContext.DeletedRelationEventHandler">
            <summary>
            Handles the relation deleted event.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.EventContext.EntryUpdating">
            <summary>
            Occurs when a catalog entry is about to be updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.EventContext.EntryUpdated">
            <summary>
            Occurs when a catalog entry is updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.EventContext.EntryDeleted">
            <summary>
            Occurs when a catalog entry is deleted.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.EventContext.NodeUpdating">
            <summary>
            Occurs when a catalog node is about to be updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.EventContext.NodeUpdated">
            <summary>
            Occurs when a catalog node is updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.EventContext.NodeDeleted">
            <summary>
            Occurs when a catalog node is deleted;
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.EventContext.CatalogUpdating">
            <summary>
            Occurs when a catalog is about to be updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.EventContext.CatalogUpdated">
            <summary>
            Occurs when a catalog is updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.EventContext.CatalogDeleted">
            <summary>
            Occurs when a catalog is deleted.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.EventContext.CatalogLanguageUpdated">
            <summary>
            Occurs when a catalog is updated with a new language configuration
            (available or default languages).
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.EventContext.AssociationUpdating">
            <summary>
            Occurs when an association is about to be updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.EventContext.AssociationUpdated">
            <summary>
            Occurs when an association is updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.EventContext.AssociationDeleted">
            <summary>
            Occurs when an association is deleted.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.EventContext.RelationUpdating">
            <summary>
            Occurs when a relation is about to be updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.EventContext.RelationUpdated">
            <summary>
            Occurs when a relation is updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.EventContext.RelationDeleted">
            <summary>
            Occurs when a relation is deleted.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.EventContext.Instance">
            <summary>
            Returns an instance of event context class
            </summary>
            <value>The instance.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EventContext.RaiseEntryUpdatedEvent(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto,Mediachase.Commerce.Catalog.Events.EntryEventArgs)">
            <summary>
            Raises the entry updated event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.EntryEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EventContext.RaiseEntryDeletedEvent(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto,Mediachase.Commerce.Catalog.Events.DeletedEntryEventArgs)">
            <summary>
            Raises the entry updated event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.EntryEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EventContext.RaiseEntryUpdatingEvent(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto,Mediachase.Commerce.Catalog.Events.EntryEventArgs)">
            <summary>
            Raises the entry updating event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.EntryEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EventContext.RaiseNodeUpdatedEvent(Mediachase.Commerce.Catalog.Dto.CatalogNodeDto,Mediachase.Commerce.Catalog.Events.NodeEventArgs)">
            <summary>
            Raises the node updated event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.NodeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EventContext.RaiseNodeDeletedEvent(Mediachase.Commerce.Catalog.Dto.CatalogNodeDto,Mediachase.Commerce.Catalog.Events.DeletedNodeEventArgs)">
            <summary>
            Raises the node deleted event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.DeletedNodeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EventContext.RaiseNodeUpdatingEvent(Mediachase.Commerce.Catalog.Dto.CatalogNodeDto,Mediachase.Commerce.Catalog.Events.NodeEventArgs)">
            <summary>
            Raises the node updating event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.NodeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EventContext.RaiseCatalogUpdatedEvent(Mediachase.Commerce.Catalog.Dto.CatalogDto,Mediachase.Commerce.Catalog.Events.CatalogEventArgs)">
            <summary>
            Raises the catalog updated event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.CatalogEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EventContext.RaiseCatalogDeletedEvent(Mediachase.Commerce.Catalog.Dto.CatalogDto,Mediachase.Commerce.Catalog.Events.DeletedCatalogEventArgs)">
            <summary>
            Raises the catalog deleted event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.DeletedCatalogEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EventContext.RaiseCatalogLanguageUpdatedEvent(Mediachase.Commerce.Catalog.Dto.CatalogDto,Mediachase.Commerce.Catalog.Events.CatalogLanguageEventArgs)">
            <summary>
            Raises the catalog language updated event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.CatalogLanguageEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EventContext.RaiseCatalogUpdatingEvent(Mediachase.Commerce.Catalog.Dto.CatalogDto,Mediachase.Commerce.Catalog.Events.CatalogEventArgs)">
            <summary>
            Raises the catalog updating event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.CatalogEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EventContext.RaiseAssociationUpdatedEvent(Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto,Mediachase.Commerce.Catalog.Events.AssociationEventArgs)">
            <summary>
            Raises the association updated event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.AssociationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EventContext.RaiseAssociationDeletedEvent(Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto,Mediachase.Commerce.Catalog.Events.DeletedAssociationEventArgs)">
            <summary>
            Raises the association deleted event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.AssociationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EventContext.RaiseAssociationUpdatingEvent(Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto,Mediachase.Commerce.Catalog.Events.AssociationEventArgs)">
            <summary>
            Raises the association updating event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.AssociationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EventContext.RaiseRelationUpdatedEvent(Mediachase.Commerce.Catalog.Dto.CatalogRelationDto,Mediachase.Commerce.Catalog.Events.RelationEventArgs)">
            <summary>
            Raises the relation updated event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.RelationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EventContext.RaiseRelationDeletedEvent(Mediachase.Commerce.Catalog.Dto.CatalogRelationDto,Mediachase.Commerce.Catalog.Events.DeletedRelationEventArgs)">
            <summary>
            Raises the relation deleted event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.DeletedRelationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EventContext.RaiseRelationUpdatingEvent(Mediachase.Commerce.Catalog.Dto.CatalogRelationDto,Mediachase.Commerce.Catalog.Events.RelationEventArgs)">
            <summary>
            Raises the relation updating event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.RelationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EventContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EventContext"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EventContext.RegisterEventListenersFromContainer">
            <summary>
            Loads interface implementations from service locator and binds them to appropriate delegates
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.EventContextCreatedEventArgs">
            <summary>
            Event argument class used when a new <see cref="T:Mediachase.Commerce.Catalog.EventContext"/> instance is
            created (on a new thread or request).
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.EventContextCreatedEventArgs.#ctor(Mediachase.Commerce.Catalog.EventContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.EventContextCreatedEventArgs"/> class.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.EventContextCreatedEventArgs.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.AssociationChange">
            <summary>
            Describes a change made to an association.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.AssociationChange.#ctor(Mediachase.Commerce.Catalog.Events.ChangeType,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.AssociationChange"/> class.
            </summary>
            <param name="changeType">The type of change made to the association.</param>
            <param name="parentEntryId">The id of the parent entry in the changed association.</param>
            <param name="childEntryId">The id of the child entry in the changed association.</param>
            <param name="associationId">The id of the changed association.</param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.AssociationChange.ChangeType">
            <summary>
            The type of change made to the association.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.AssociationChange.ParentEntryId">
            <summary>
            The id of the parent entry in the changed association.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.AssociationChange.ChildEntryId">
            <summary>
            The id of the child entry in the changed association.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.AssociationChange.AssociationId">
            <summary>
            The id of the changed association.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.AssociationEventArgs">
            <summary>
            Represents the arguments of an association event.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.AssociationEventArgs.#ctor(System.String,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Events.AssociationChange})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.AssociationEventArgs"/> class.
            </summary>
            <param name="eventName">Name of the event.</param>
            <param name="changes">Describes what changes are made to associations.</param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.AssociationEventArgs.Changes">
            <summary>
            Describes what changes are made to associations.
            </summary>
            <remarks>
            This is only used in the <see cref="E:Mediachase.Commerce.Catalog.EventContext.AssociationUpdated"/> event when the changes are commited. 
            In the <see cref="E:Mediachase.Commerce.Catalog.EventContext.AssociationUpdated"/> event this collection will be empty.
            </remarks>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.CatalogChange">
            <summary>
            Describes a change made to a catalog.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogChange.#ctor(Mediachase.Commerce.Catalog.Events.ChangeType,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.CatalogChange"/> class.
            </summary>
            <param name="changeType">The type of change made to the catalog.</param>
            <param name="catalogId">The id of the catalog.</param>
            <param name="languageConfigurationChanged">Flag indicating whether the language configuration of the catalog was changed.</param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.CatalogChange.ChangeType">
            <summary>
            The type of change made to the catalog.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.CatalogChange.CatalogId">
            <summary>
            The id of the catalog.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.CatalogChange.LanguageConfigurationChanged">
            <summary>
            Flag indicating whether the language configuration of the catalog was changed.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.CatalogContentUpdateEventArgs">
            <summary>
            Event arguments for Catalog, Catalog node, Catalog entry changed events.
            </summary>       
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.CatalogContentUpdateEventArgs.EventType">
            <summary>
            Event type
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.CatalogContentUpdateEventArgs.CatalogIds">
            <summary>
            Gets or sets the list of catalog dto Id.
            </summary>
            <value>The list of catalog dto Id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.CatalogContentUpdateEventArgs.CatalogNodeIds">
            <summary>
            Gets or sets the list of catalog node dto Id.
            </summary>
            <value>The list of catalog node dto Id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.CatalogContentUpdateEventArgs.CatalogEntryIds">
            <summary>
            Gets or sets the list of catalog entry dto Id.
            </summary>
            <value>The list of catalog entry dto Id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.CatalogContentUpdateEventArgs.CatalogAssociationIds">
            <summary>
            Gets or sets the list of catalog association id.
            </summary>
            <value>The catalog association id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.CatalogContentUpdateEventArgs.HasChangedParent">
            <summary>
            Gets or sets a flag to indicate if one or more node has changed parent.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.CatalogContentUpdateEventArgs.PropertyNamesWithChanges">
            <summary>
            The names of properties which have changes
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.CatalogContentUpdateEventArgs.ApplicationHasContentModelTypes">
            <summary>
            Describes whether the application raising the event has content model types
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogContentUpdateEventArgs.ToString">
            <summary>
            Returns a string containing the <see cref="P:Mediachase.Commerce.Catalog.Events.CatalogContentUpdateEventArgs.EventType"/> as well as any
            ID:s contained in <see cref="P:Mediachase.Commerce.Catalog.Events.CatalogContentUpdateEventArgs.CatalogIds"/>, <see cref="P:Mediachase.Commerce.Catalog.Events.CatalogContentUpdateEventArgs.CatalogNodeIds"/>,
            <see cref="P:Mediachase.Commerce.Catalog.Events.CatalogContentUpdateEventArgs.CatalogEntryIds"/> and <see cref="P:Mediachase.Commerce.Catalog.Events.CatalogContentUpdateEventArgs.CatalogAssociationIds"/>.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.CatalogEventArgs">
            <summary>
            Implements operations for the catalog event arguments.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Events.CatalogEventArgs.NeedToSyncDraft">
            <remarks>When updating this, remember to update CatalogEventHandler.CatalogContentUpdateKey too.</remarks>
            Flag to indicate whether updating a DTO should sync draft to draft table.
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventArgs.#ctor(System.String,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Events.CatalogChange})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.CatalogEventArgs"/> class.
            </summary>
            <param name="eventName">Name of the event.</param>
            <param name="catalogChanges">Describes what changes are made to catalogs.</param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.CatalogEventArgs.CatalogChanges">
            <summary>
            Describes what changes are made to catalogs.
            </summary>
            <remarks>
            This is only used in the <see cref="E:Mediachase.Commerce.Catalog.EventContext.CatalogUpdating"/> event when the changes are commited. 
            In the <see cref="E:Mediachase.Commerce.Catalog.EventContext.CatalogUpdated"/> event this collection will be empty.
            </remarks>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster">
            <summary>
            Listens to catalog events and broadcasts remote events for certain event types.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.#ctor(Mediachase.Commerce.IApplicationContext,Mediachase.Commerce.Catalog.Events.ICatalogEvents)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster" /> class.
            </summary>
            <param name="applicationContext">The application context.</param>
            <param name="catalogEvents">Catalog event service.</param>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.LocalEntryUpdating">
            <summary>
            Occurs when a catalog entry is about to be updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.LocalEntryUpdated">
            <summary>
            Occurs when a catalog entry is updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.LocalEntryDeleted">
            <summary>
            Occurs when a catalog entry is deleted.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.LocalNodeUpdating">
            <summary>
            Occurs when a catalog node is about to be updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.LocalNodeUpdated">
            <summary>
            Occurs when a catalog node is updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.LocalNodeDeleted">
            <summary>
            Occurs when a catalog node is deleted;
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.LocalCatalogUpdating">
            <summary>
            Occurs when a catalog is about to be updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.LocalCatalogUpdated">
            <summary>
            Occurs when a catalog is updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.LocalCatalogDeleted">
            <summary>
            Occurs when a catalog is deleted.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.LocalCatalogLanguageUpdated">
            <summary>
            Occurs when a catalog is updated with a new language
            configuration (available or default languages)
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.LocalAssociationUpdating">
            <summary>
            Occurs when an association is about to be updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.LocalAssociationUpdated">
            <summary>
            Occurs when an association is updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.LocalAssociationDeleted">
            <summary>
            Occurs when an association is deleted.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.LocalRelationUpdating">
            <summary>
            Occurs when a relation is about to be updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.LocalRelationUpdated">
            <summary>
            Occurs when a relation is updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.LocalRelationDeleted">
            <summary>
            Occurs when a relation is deleted.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.RaiseEvent(Mediachase.Commerce.Catalog.Events.CatalogContentUpdateEventArgs)">
            <summary>
            Raise event when product is updated
            </summary>
            <param name="e"> Event arguments</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.EntryUpdated(System.Object,Mediachase.Commerce.Catalog.Events.EntryEventArgs)">
            <summary>
            Send remote event for entry update.
            </summary>
            <param name="source">The source.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.EntryEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.NodeUpdated(System.Object,Mediachase.Commerce.Catalog.Events.NodeEventArgs)">
            <summary>
            Send remote event for node update.
            </summary>
            <param name="source">The source.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.NodeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.CatalogUpdated(System.Object,Mediachase.Commerce.Catalog.Events.CatalogEventArgs)">
            <summary>
            Send remote event for catalog update.
            </summary>
            <param name="source">The source.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.CatalogEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.AssociationUpdated(System.Object,Mediachase.Commerce.Catalog.Events.AssociationEventArgs)">
            <summary>
            Send remote event for association update.
            </summary>
            <param name="source">The source.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.AssociationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventBroadcaster.RelationUpdated(System.Object,Mediachase.Commerce.Catalog.Events.RelationEventArgs)">
            <summary>
            Send remote event for relation update.
            </summary>
            <param name="source">The source.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.RelationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.CatalogEventListenerBase">
            <summary>
            Provides the methods necessary for the catalog event listener.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventListenerBase.EntryUpdating(System.Object,Mediachase.Commerce.Catalog.Events.EntryEventArgs)">
            <summary>
            Raised before saving a catalog entry DTO (which may may include multiple inserts, 
            updates, deletes, and/or unchanged rows). 
            </summary>
            <param name="source">The DTO that is about to be saved.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.EntryEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventListenerBase.EntryUpdated(System.Object,Mediachase.Commerce.Catalog.Events.EntryEventArgs)">
            <summary>
            Raised after a catalog entry DTO has been saved and committed.
            </summary>
            <param name="source">The DTO that was saved. All RowStates will be Unmodified.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.EntryEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventListenerBase.EntryDeleted(System.Object,Mediachase.Commerce.Catalog.Events.DeletedEntryEventArgs)">
            <summary>
            Raised after a catalog entry row has been deleted from the database and the operation 
            is committed.
            </summary>
            <param name="source">Always null.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.DeletedEntryEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventListenerBase.NodeUpdating(System.Object,Mediachase.Commerce.Catalog.Events.NodeEventArgs)">
            <summary>
            Raised before saving a catalog node DTO (which may may include multiple inserts, 
            updates, deletes, and/or unchanged rows). 
            </summary>
            <param name="source">The DTO that is about to be saved.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.NodeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventListenerBase.NodeUpdated(System.Object,Mediachase.Commerce.Catalog.Events.NodeEventArgs)">
            <summary>
            Raised after a catalog node DTO has been saved and committed.
            </summary>
            <param name="source">The DTO that was saved. All RowStates will be Unmodified.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.EntryEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventListenerBase.NodeDeleted(System.Object,Mediachase.Commerce.Catalog.Events.DeletedNodeEventArgs)">
            <summary>
            Raised after a catalog node row has been deleted from the database and the operation 
            is committed.
            </summary>
            <param name="source">Always null.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.DeletedEntryEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventListenerBase.CatalogUpdating(System.Object,Mediachase.Commerce.Catalog.Events.CatalogEventArgs)">
            <summary>
            Raised before saving a catalog DTO (which may may include multiple inserts, 
            updates, deletes, and/or unchanged rows). 
            </summary>
            <param name="source">The DTO that is about to be saved.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.EntryEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventListenerBase.CatalogUpdated(System.Object,Mediachase.Commerce.Catalog.Events.CatalogEventArgs)">
            <summary>
            Raised after a catalog DTO has been saved and committed.
            </summary>
            <param name="source">The DTO that was saved. All RowStates will be Unmodified.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.EntryEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventListenerBase.CatalogDeleted(System.Object,Mediachase.Commerce.Catalog.Events.DeletedCatalogEventArgs)">
            <summary>
            Raised after a catalog row has been deleted from the database and the operation is 
            committed.
            </summary>
            <param name="source">Always null.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.DeletedCatalogEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventListenerBase.CatalogLanguageUpdated(System.Object,Mediachase.Commerce.Catalog.Events.CatalogLanguageEventArgs)">
            <summary>
            Raised after a catalog has had a change in language configuration (available or
            default languages) and the change is committed.
            </summary>
            <param name="source">The DTO that was saved. All RowStates will be Unmodified.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.CatalogLanguageEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventListenerBase.AssociationUpdating(System.Object,Mediachase.Commerce.Catalog.Events.AssociationEventArgs)">
            <summary>
            Raised before saving a catalog association DTO (which may may include multiple inserts, 
            updates, deletes, and/or unchanged rows). 
            </summary>
            <param name="source">The DTO that is about to be saved.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.EntryEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventListenerBase.AssociationUpdated(System.Object,Mediachase.Commerce.Catalog.Events.AssociationEventArgs)">
            <summary>
            Raised after a catalog association DTO has been saved and committed.
            </summary>
            <param name="source">The DTO that was saved. All RowStates will be Unmodified.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.EntryEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventListenerBase.AssociationDeleted(System.Object,Mediachase.Commerce.Catalog.Events.DeletedAssociationEventArgs)">
            <summary>
            Raised after a catalog association row has been deleted from the database and the 
            operation is committed.
            </summary>
            <param name="source">Always null.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.DeletedCatalogEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventListenerBase.RelationUpdating(System.Object,Mediachase.Commerce.Catalog.Events.RelationEventArgs)">
            <summary>
            Raised before saving a catalog relation DTO (which may may include multiple inserts, 
            updates, deletes, and/or unchanged rows). 
            </summary>
            <param name="source">The DTO that is about to be saved.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.EntryEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventListenerBase.RelationUpdated(System.Object,Mediachase.Commerce.Catalog.Events.RelationEventArgs)">
            <summary>
            Raised after a catalog relation DTO has been saved and committed.
            </summary>
            <param name="source">The DTO that was saved. All RowStates will be Unmodified.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.EntryEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogEventListenerBase.RelationDeleted(System.Object,Mediachase.Commerce.Catalog.Events.DeletedRelationEventArgs)">
            <summary>
            Raised after a catalog relation row has been deleted from the database and the 
            operation is committed.
            </summary>
            <param name="source">Always null.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.DeletedCatalogEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.CatalogLanguageEventArgs">
            <summary>
            A event argument for catalog language configuration changes
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.CatalogLanguageEventArgs.CatalogId">
            <summary>
            Gets the catalog id.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogLanguageEventArgs.#ctor(System.String,Mediachase.Commerce.Catalog.Events.CatalogChange)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.CatalogLanguageEventArgs" /> class.
            </summary>
            <param name="eventName">Name of the event.</param>
            <param name="change">Describes what change is made to the catalog.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.CatalogSystemEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.CatalogSystemEventArgs"/> class.
            </summary>
            <param name="eventName">Name of the event.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.ChangeType">
            <summary>
            Describes a change made to an item.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Events.ChangeType.Added">
            <summary>
            A new item was added.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Events.ChangeType.Modified">
            <summary>
            An existing item was modified.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Events.ChangeType.Deleted">
            <summary>
            An existing item was deleted.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.DeletedAssociationEventArgs">
            <summary>
            A event argument for when an ssociation is deleted.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.DeletedAssociationEventArgs.AssociationId">
            <summary>
            Gets the association id of the deleted association.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.DeletedAssociationEventArgs.ParentEntryId">
            <summary>
            Gets the parent catalog entry id of the deleted association.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.DeletedAssociationEventArgs.ChildEntryId">
            <summary>
            Gets the child catalog entry id of the deleted association.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.DeletedCatalogEventArgs">
            <summary>
            A event argument for when a catalog is deleted.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.DeletedCatalogEventArgs.CatalogId">
            <summary>
            Gets the catalog id.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.DeletedCatalogEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.DeletedCatalogEventArgs"/> class.
            </summary>
            <param name="catalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.DeletedCatalogEventArgs.#ctor(Mediachase.Commerce.Catalog.Events.CatalogChange)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.DeletedEntryEventArgs"/> class.
            </summary>
            <param name="change">Describes a change made to a catalog.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.DeletedEntryEventArgs">
            <summary>
            A event argument for when an entry is deleted.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.DeletedEntryEventArgs.EntryId">
            <summary>
            Gets the entry id.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.DeletedEntryEventArgs.CatalogId">
            <summary>
            Gets the catalog id.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.DeletedEntryEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.DeletedEntryEventArgs"/> class.
            </summary>
            <param name="entryId">The entry id.</param>
            <param name="catalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.DeletedEntryEventArgs.#ctor(Mediachase.Commerce.Catalog.Events.EntryChange)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.DeletedEntryEventArgs"/> class.
            </summary>
            <param name="change">Describes a change made to an entry.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.DeletedEntryRelationEventArgs">
            <summary>
            A event argument for when an entry relation is deleted.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.DeletedEntryRelationEventArgs.ChildEntryId">
            <summary>
            Gets the child entry id.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.DeletedEntryRelationEventArgs.ParentEntryId">
            <summary>
            Gets the parent entry id.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.DeletedEntryRelationEventArgs.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.DeletedEntryRelationEventArgs" /> class.
            </summary>
            <param name="childEntryId">The child entry id.</param>
            <param name="parentEntryId">The parent entry id.</param>
            <param name="catalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.DeletedEntryRelationEventArgs.#ctor(Mediachase.Commerce.Catalog.Events.EntryRelationChange)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.DeletedEntryRelationEventArgs"/> class.
            </summary>
            <param name="entryRelationChange">Describes a change made to an entry relation.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.DeletedNodeEntryRelationEventArgs">
            <summary>
            A event argument for when a node-entry relation is deleted.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.DeletedNodeEntryRelationEventArgs.EntryId">
            <summary>
            Gets the entry id.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.DeletedNodeEntryRelationEventArgs.NodeId">
            <summary>
            Gets the node id.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.DeletedNodeEntryRelationEventArgs.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.DeletedNodeEntryRelationEventArgs" /> class.
            </summary>
            <param name="entryId">The entry id.</param>
            <param name="nodeId">The node id.</param>
            <param name="catalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.DeletedNodeEntryRelationEventArgs.#ctor(Mediachase.Commerce.Catalog.Events.NodeEntryRelationChange)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.DeletedNodeEntryRelationEventArgs"/> class.
            </summary>
            <param name="nodeEntryRelationChange">Describes a change made to a node-entry relation.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.DeletedNodeEventArgs">
            <summary>
            A event argument for when a catalog node is deleted.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.DeletedNodeEventArgs.NodeId">
            <summary>
            Gets the node id.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.DeletedNodeEventArgs.ParentNodeId">
            <summary>
            Gets the parent node id.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.DeletedNodeEventArgs.CatalogId">
            <summary>
            Gets the catalog id.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.DeletedNodeEventArgs.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.DeletedNodeEventArgs" /> class.
            </summary>
            <param name="nodeId">The node id.</param>
            <param name="parentNodeId">The parent node id.</param>
            <param name="catalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.DeletedNodeEventArgs.#ctor(Mediachase.Commerce.Catalog.Events.NodeChange)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.DeletedNodeEventArgs"/> class.
            </summary>
            <param name="change">Describes a change made to a node.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.DeletedNodeRelationEventArgs">
            <summary>
            A event argument for when a node relation is deleted.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.DeletedNodeRelationEventArgs.ChildNodeId">
            <summary>
            Gets the child node id.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.DeletedNodeRelationEventArgs.ParentNodeId">
            <summary>
            Gets the parent node id.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.DeletedNodeRelationEventArgs.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.DeletedNodeRelationEventArgs" /> class.
            </summary>
            <param name="childNodeId">The child node id.</param>
            <param name="parentNodeId">The parent node id.</param>
            <param name="catalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.DeletedNodeRelationEventArgs.#ctor(Mediachase.Commerce.Catalog.Events.NodeRelationChange)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.DeletedNodeRelationEventArgs"/> class.
            </summary>
            <param name="nodeRelationChange">Describes a change made to a node relation.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.DeletedRelationEventArgs">
            <summary>
            A event argument for when a relation is deleted.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.DeletedRelationEventArgs.CatalogId">
            <summary>
            Gets the catalog id.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.DeletedRelationEventArgs.#ctor(Mediachase.Commerce.Catalog.Events.NodeRelationChange,Mediachase.Commerce.Catalog.Events.NodeEntryRelationChange,Mediachase.Commerce.Catalog.Events.EntryRelationChange)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.RelationEventArgs"/> class.
            </summary>
            <param name="nodeRelationChange">Describes a change made to a node relation.</param>
            <param name="nodeEntryRelationChange">Describes a change made to a node-entry relation.</param>
            <param name="entryRelationChange">Describes a change made to an entry relation.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.EntryChange">
            <summary>
            Describes a change made to an entry.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.EntryChange.#ctor(Mediachase.Commerce.Catalog.Events.ChangeType,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.EntryChange"/> class.
            </summary>
            <param name="changeType">The type of change made to the entry.</param>
            <param name="entryId">The id of the entry.</param>
            <param name="catalogId">The id of the catalog the entry is in.</param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.EntryChange.ChangeType">
            <summary>
            The type of change made to the entry.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.EntryChange.EntryId">
            <summary>
            The id of the entry.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.EntryChange.CatalogId">
            <summary>
            The id of the catalog the entry is in.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.EntryEventArgs">
            <summary>
            Implements operations for the entry event arguments.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.EntryEventArgs.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.EntryEventArgs"/> class.
            </summary>
            <param name="eventName">Name of the event.</param>
            <param name="propertyNamesWithChanges">Name of properties that has been changed.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.EntryEventArgs.#ctor(System.String,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Events.EntryChange},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.EntryEventArgs"/> class.
            </summary>
            <param name="eventName">Name of the event.</param>
            <param name="changes">Describes what changes are made to catalog entries.</param>
            <param name="propertyNamesWithChanges">Name of properties that has been changed.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.EntryEventArgs.#ctor(System.String,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Events.EntryChange})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.EntryEventArgs"/> class.
            </summary>
            <param name="eventName">Name of the event.</param>
            <param name="changes">Describes what changes are made to catalog entries.</param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.EntryEventArgs.Changes">
            <summary>
            Describes what changes are made to catalog entries.
            </summary>
            <remarks>
            This is only used in the <see cref="E:Mediachase.Commerce.Catalog.EventContext.EntryUpdated"/> event when the changes are commited. 
            In the <see cref="E:Mediachase.Commerce.Catalog.EventContext.EntryUpdating"/> event this collection will be empty.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.EntryEventArgs.PropertyNamesWithChanges">
            <summary>
            The names of properties which have changes
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.EntryRelationChange">
            <summary>
            Describes a change made to an entry relation.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.EntryRelationChange.#ctor(Mediachase.Commerce.Catalog.Events.ChangeType,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.EntryRelationChange"/> class.
            </summary>
            <param name="changeType">The type of change made to the relation.</param>
            <param name="parentEntryId">The id of the parent entry in the relation.</param>
            <param name="childEntryId">The id of the child entry in the relation.</param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.EntryRelationChange.ChangeType">
            <summary>
            The type of change made to the relation.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.EntryRelationChange.ParentEntryId">
            <summary>
            The id of the parent entry in the relation.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.EntryRelationChange.ChildEntryId">
            <summary>
            The id of the child entry in the relation.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.ICatalogEvents">
            <summary>
            Exposes the same set of events as <see cref="T:Mediachase.Commerce.Catalog.EventContext"/>, but while EventContext has
            hybrid request/thread lifetime, the <see cref="T:Mediachase.Commerce.Catalog.Events.ICatalogEvents"/> implementation is supposed
            to have singleton lifetime so the events can be registered once at application startup rather
            than for each request.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.ICatalogEvents.EntryUpdating">
            <summary>
            Occurs when a catalog entry is about to be updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.ICatalogEvents.EntryUpdated">
            <summary>
            Occurs when a catalog entry is updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.ICatalogEvents.EntryDeleted">
            <summary>
            Occurs when a catalog entry is deleted.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.ICatalogEvents.NodeUpdating">
            <summary>
            Occurs when a catalog node is about to be updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.ICatalogEvents.NodeUpdated">
            <summary>
            Occurs when a catalog node is updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.ICatalogEvents.NodeDeleted">
            <summary>
            Occurs when a catalog node is deleted;
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.ICatalogEvents.CatalogUpdating">
            <summary>
            Occurs when a catalog is about to be updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.ICatalogEvents.CatalogUpdated">
            <summary>
            Occurs when a catalog is updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.ICatalogEvents.CatalogDeleted">
            <summary>
            Occurs when a catalog is deleted.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.ICatalogEvents.CatalogLanguageUpdated">
            <summary>
            Occurs when a catalog is updated with a new language
            configuration (available or default languages)
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.ICatalogEvents.AssociationUpdating">
            <summary>
            Occurs when an association is about to be updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.ICatalogEvents.AssociationUpdated">
            <summary>
            Occurs when an association is updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.ICatalogEvents.AssociationDeleted">
            <summary>
            Occurs when an association is deleted.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.ICatalogEvents.RelationUpdating">
            <summary>
            Occurs when a relation is about to be updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.ICatalogEvents.RelationUpdated">
            <summary>
            Occurs when a relation is updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.Events.ICatalogEvents.RelationDeleted">
            <summary>
            Occurs when a relation is deleted.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.NodeChange">
            <summary>
            Describes a change made to a node.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.NodeChange.#ctor(Mediachase.Commerce.Catalog.Events.ChangeType,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.NodeChange"/> class.
            </summary>
            <param name="changeType">The type of change made to the node.</param>
            <param name="nodeId">The id of the node.</param>
            <param name="parentNodeId">The id of the parent node.</param>
            <param name="catalogId">The id of the catalog the node is in.</param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.NodeChange.ChangeType">
            <summary>
            The type of change made to the node.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.NodeChange.NodeId">
            <summary>
            The id of the node.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.NodeChange.ParentNodeId">
            <summary>
            The id of the parent node.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.NodeChange.CatalogId">
            <summary>
            The id of the catalog the node is in.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.NodeEntryRelationChange">
            <summary>
            Describes a change made to a node-entry relation.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.NodeEntryRelationChange.#ctor(Mediachase.Commerce.Catalog.Events.ChangeType,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.NodeEntryRelationChange"/> class.
            </summary>
            <param name="changeType">The type of change made to the relation.</param>
            <param name="nodeId">The id of the node in the relation.</param>
            <param name="entryId">The id of the entry in the relation.</param>
            <param name="catalogId">The id of the catalog in the relation.</param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.NodeEntryRelationChange.ChangeType">
            <summary>
            The type of change made to the relation.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.NodeEntryRelationChange.NodeId">
            <summary>
            The id of the node in the relation.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.NodeEntryRelationChange.EntryId">
            <summary>
            The id of the entry in the relation.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.NodeEntryRelationChange.CatalogId">
            <summary>
            The id of the catalog in the relation.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.NodeEventArgs">
            <summary>
            Implements operations for the node event arguments.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.NodeEventArgs.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.NodeEventArgs"/> class.
            </summary>
            <param name="eventName">Name of the event.</param>
            <param name="propertyNamesWithChanges">Name of properties that has been changed.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.NodeEventArgs.#ctor(System.String,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Events.NodeChange},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.NodeEventArgs"/> class.
            </summary>
            <param name="eventName">Name of the event.</param>
            <param name="changes">Describes what changes are made to catalog nodes.</param>
            <param name="propertyNamesWithChanges">Name of properties that has been changed.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.NodeEventArgs.#ctor(System.String,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Events.NodeChange},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.NodeEventArgs"/> class.
            </summary>
            <param name="eventName">Name of the event.</param>
            <param name="changes">Describes what changes are made to catalog nodes.</param>
            <param name="hasChangedParent"><c>true</c> if one or more parent node id was changed, false otherwise.</param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.NodeEventArgs.Changes">
            <summary>
            Describes what changes are made to catalog nodes.
            </summary>
            <remarks>
            This is only used in the <see cref="E:Mediachase.Commerce.Catalog.EventContext.NodeUpdated"/> event when the changes are commited. 
            In the <see cref="E:Mediachase.Commerce.Catalog.EventContext.NodeUpdating"/> event this collection will be empty.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.NodeEventArgs.HasChangedParent">
            <summary>
            Gets or sets flag to indicate if one or more node has changed parent.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.NodeEventArgs.PropertyNamesWithChanges">
            <summary>
            The names of properties which have changes
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.NodeRelationChange">
            <summary>
            Describes a change made to a node relation.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.NodeRelationChange.#ctor(Mediachase.Commerce.Catalog.Events.ChangeType,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.NodeRelationChange"/> class.
            </summary>
            <param name="changeType">The type of change made to the relation.</param>
            <param name="parentNodeId">The id of the parent node in the relation.</param>
            <param name="childNodeId">The id of the child node in the relation.</param>
            <param name="catalogId">The id of the catalog in the relation.</param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.NodeRelationChange.ChangeType">
            <summary>
            The type of change made to the relation.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.NodeRelationChange.ParentNodeId">
            <summary>
            The id of the parent node in the relation.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.NodeRelationChange.ChildNodeId">
            <summary>
            The id of the child node in the relation.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.NodeRelationChange.CatalogId">
            <summary>
            The id of the catalog in the relation.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Events.RelationEventArgs">
            <summary>
            Implements operations for the relation event arguments.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Events.RelationEventArgs.#ctor(System.String,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Events.NodeRelationChange},System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Events.NodeEntryRelationChange},System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Events.EntryRelationChange})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Events.RelationEventArgs"/> class.
            </summary>
            <param name="nodeRelationChanges">Describes what changes are made to node relations.</param>
            <param name="nodeEntryRelationChanges">Describes what changes are made to node-entry relations.</param>
            <param name="entryRelationChanges">Describes what changes are made to entry relations.</param>
            <param name="eventName">Name of the event.</param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.RelationEventArgs.NodeRelationChanges">
            <summary>
            Describes what changes are made to node relations.
            </summary>
            <remarks>
            This is only used in the <see cref="E:Mediachase.Commerce.Catalog.EventContext.RelationUpdated"/> event when the changes are commited. 
            In the <see cref="E:Mediachase.Commerce.Catalog.EventContext.RelationUpdating"/> event this collection will be empty.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.RelationEventArgs.NodeEntryRelationChanges">
            <summary>
            Describes what changes are made to node-entry relations.
            </summary>
            <remarks>
            This is only used in the <see cref="E:Mediachase.Commerce.Catalog.EventContext.RelationUpdated"/> event when the changes are commited. 
            In the <see cref="E:Mediachase.Commerce.Catalog.EventContext.RelationUpdating"/> event this collection will be empty.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Events.RelationEventArgs.EntryRelationChanges">
            <summary>
            Describes what changes are made to entry relations.
            </summary>
            <remarks>
            This is only used in the <see cref="E:Mediachase.Commerce.Catalog.EventContext.RelationUpdated"/> event when the changes are commited. 
            In the <see cref="E:Mediachase.Commerce.Catalog.EventContext.RelationUpdating"/> event this collection will be empty.
            </remarks>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Exceptions.CatalogException">
            <summary>
            Implements operations for the catalog exception class. (Inherits <see cref="T:System.Exception"/>.)
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Exceptions.CatalogException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Exceptions.CatalogException"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Exceptions.CatalogException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Exceptions.CatalogException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Exceptions.CatalogException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Exceptions.CatalogException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Exceptions.CatalogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Exceptions.CatalogException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Exceptions.CircularDependencyException">
            <summary>
            Circular Dependency Exception.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Exceptions.CircularDependencyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Exceptions.CircularDependencyException"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Exceptions.CircularDependencyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Exceptions.CircularDependencyException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Exceptions.CircularDependencyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Exceptions.CircularDependencyException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Exceptions.CircularDependencyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Exceptions.CircularDependencyException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Exceptions.InvalidObjectException">
            <summary>
            Implements the exception handler for an InvalidObjectException. (Inherits <see cref="T:Mediachase.Commerce.Catalog.Exceptions.CatalogException"/>.)
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Exceptions.InvalidObjectException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Exceptions.InvalidObjectException"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Exceptions.InvalidObjectException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Exceptions.InvalidObjectException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Exceptions.InvalidObjectException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Exceptions.InvalidObjectException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Exceptions.InvalidObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Exceptions.InvalidObjectException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ExcludedCatalogEntryMarketsField.UpdateMarketsDictionary(Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Updates the dictionary associated with the metafield to have all market IDs.
            This does not delete any market IDs that are no longer active; delete functionality
            may be more difficult to maintain consistency with entries that may have a reference
            to the delete items.
            </summary>
            <param name="context">The meta data context to access the metadata system with.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ExcludedCatalogEntryMarketsField.IsValidForMarket(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryRow,Mediachase.Commerce.IMarket)">
            <summary>
            Determines whether or not the current catalog entry is available in a market
            </summary>
            <param name="row">The catalog entry row being evaluated.</param>
            <param name="market">The market that is being checked for validity for the field.</param>
            <returns>true if the catalog entry is available in the passed market, or false if is it unavailable</returns>
            <remarks>
            This method does not evaluate whether or not the IMarket is Active. We assume that if 
            an inactive IMarket is passed in then it is a deliberate choice or does not affect the 
            result that should be returned.
            Currently new entries are available in all markets by default.  If this changes 
            (e.g. via customization options) then this method may need to change as well.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ExcludedCatalogEntryMarketsField.SqlMetaWhereClause(System.Collections.Specialized.StringCollection)">
            <summary>
            Creates a SQL clause to filter entries by Market that is compatible with CatalogSearch.SearchEntries's implementation
            </summary>
            <param name="markets">The list of markets for which entries must be valid.</param>
            <returns>a formatted string that can be added to a CatalogSearchParameter's SqlMetaWhereClause to filter by market</returns>
            <remarks>
            A catalog entry must be available in every market in the provided collection to be included in the final search results.
            This string requires the specific CatalogContentProperty table join style used in the default implementations of [ecf_CatalogEntrySearch] and 
            [ecf_CatalogNodesList].
            </remarks>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ICatalogSystem">
            <summary>
            Provides the methods necessary for the ICatalogSystem.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogDto(System.Guid,Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup)">
            <summary>
            Gets the catalog dto.
            </summary>
            <param name="siteId">The site id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogDto(System.Guid)">
            <summary>
            Gets the catalog dto.
            </summary>
            <param name="siteId">The site id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogDto">
            <summary>
            Gets the catalog dto.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup)">
            <summary>
            Gets the catalog dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogDto(System.Int32)">
            <summary>
            Gets the catalog dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.SaveCatalog(Mediachase.Commerce.Catalog.Dto.CatalogDto)">
            <summary>
            Saves the catalog.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.DeleteCatalog(System.Int32)">
            <summary>
            Deletes the catalog.
            </summary>
            <param name="catalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.FindItemsDto(Mediachase.Commerce.Catalog.Search.CatalogSearchParameters,Mediachase.Commerce.Catalog.Search.CatalogSearchOptions,System.Int32@)">
            <summary>
            Finds the items dto.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="options">The search options.</param>
            <param name="recordsCount">Returns the records count.</param>
            <returns>
            The CatalogEntryDto
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.StartFindItemsForIndexing(System.Guid,System.Int32,System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a catalog search for indexing.
            </summary>
            <param name="searchSetId">The identifier for the current search set.  This will be passed back in to get results.</param>
            <param name="catalogId">The catalog ID to search.</param>
            <param name="isIncremental">if set to <c>true</c> [is incremental].</param>
            <param name="earliestModifiedDate">If non null, only entries with a modified date on or after this value will be included in the results.</param>
            <param name="latestModifiedDate">If non null, only entries with a modified date on or before this value will be included in the results.</param>
            <returns>
            A count of the number of items that will be returned in the result set.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.ContinueFindItemsForIndexing(System.Guid,System.Int32,System.Int32)">
            <summary>
            Gets a section of results from StartFindItemsForIndexing.
            </summary>
            <param name="searchSetId">The identifier for the search set.  The search set must be initialized with with StartFindItemsForIndexing.</param>
            <param name="firstResultIndex">The lowest result index to return.  Result indexes are 1-based.</param>
            <param name="maxResultCount">The maximum number of results to return.</param>
            <returns>A CatalogEntryDto containing the results.</returns>
            <remarks>
            Once a CatalogEntry is recieved from this call, it will not be returned again.
            Repeated calls with the same firstResultIndex and maxResultCount will result in empty data sets for all but the first such call.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.FindItemsDto(Mediachase.Commerce.Catalog.Search.CatalogSearchParameters,Mediachase.Commerce.Catalog.Search.CatalogSearchOptions,System.Int32@,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Finds the items dto.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="options">The options.</param>
            <param name="recordsCount">The records count.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.FindNodesDto(Mediachase.Commerce.Catalog.Search.CatalogSearchParameters,Mediachase.Commerce.Catalog.Search.CatalogSearchOptions,System.Int32@)">
            <summary>
            Finds the nodes dto.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="options">The options.</param>
            <param name="recordsCount">The records count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.FindNodesDto(Mediachase.Commerce.Catalog.Search.CatalogSearchParameters,Mediachase.Commerce.Catalog.Search.CatalogSearchOptions,System.Int32@,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Finds the nodes dto.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="options">The options.</param>
            <param name="recordsCount">The records count.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.FindCatalogItemsTable(Mediachase.Commerce.Catalog.Managers.ItemSearchParameters)">
            <summary>
            Finds the catalog items table.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.FindCatalogItemsTable(Mediachase.Commerce.Catalog.Managers.ItemSearchParameters,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Finds the catalog items table.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogNodesDto(System.Int32,System.Int32)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="parentNodeId">The parent node id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogNodesDto(System.Int32)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogNodesDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogNodesDto(System.String)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogNodesDto(System.String,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogNodeDto(System.Int32)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="catalogNodeId">The catalog node id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogNodeDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="catalogNodeId">The catalog node id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogNodeDto(System.String)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="code">The code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogNodeDto(System.String,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="code">The code.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogNodesDto(System.String,System.String)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="parentNodeCode">The parent node code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogNodesDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="parentNodeCode">The parent node code.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogNodeDto(System.String,System.String)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="uri">The URI.</param>
            <param name="languageCode">The language code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogNodeDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="uri">The URI.</param>
            <param name="languageCode">The language code.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.SaveCatalogNode(Mediachase.Commerce.Catalog.Dto.CatalogNodeDto)">
            <summary>
            Saves the catalog node.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.DeleteCatalogNode(System.Int32,System.Int32)">
            <summary>
            Deletes the catalog node.
            </summary>
            <param name="catalogNodeId">The catalog node id.</param>
            <param name="catalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.DeleteCatalogNode(System.Int32)">
            <summary>
            Deletes the catalog node by node id.
            </summary>
            <param name="catalogNodeId">The catalog node id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.DeleteCatalogNodeAndEntries(System.Int32)">
            <summary>
            Deletes the catalog node and all child nodes (not links) by node id, and deletes all
            entries that will no longer belong to any nodes.  Any or node entry that
            is under the node and is not deleted, including via links, will have their
            modified date updated to the current date and time.
            </summary>
            <param name="catalogNodeId">The ID of the catalog node to delete.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.DeleteCatalogNodesAndEntries(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Deletes the catalog nodes and all child nodes (not links), and deletes all
            entries that will no longer belong to any nodes.  Any or node entry that
            is under the node and is not deleted, including via links, will have their
            modified date updated to the current date and time.
            </summary>
            <param name="catalogNodeIds">The IDs of the catalog nodes to delete.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.DeleteCatalogNodeAndEntries(System.Int32,System.Int32)">
            <summary>
            Deletes the catalog node and all child nodes (not links), and deletes all
            entries that will no longer belong to any nodes.  Any or node entry that
            is under the node and is not deleted, including via links, will have their
            modified date updated to the current date and time.
            </summary>
            <param name="catalogNodeId">The ID of the catalog node to delete.</param>
            <param name="catalogId">The ID of the catalog to work within.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntriesDto(System.Int32,System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="parentNodeId">The parent node id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntriesDto(System.Int32,System.Int32)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="parentNodeId">The parent node id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntriesDto(System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntriesDto(System.String)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntriesDto(System.String,System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="parentNodeId">The parent node id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntriesDto(System.String,System.Int32)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="parentNodeId">The parent node id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntriesByNodeDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries by node dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="parentNodeCode">The parent node code.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntriesByNodeDto(System.String,System.String)">
            <summary>
            Gets the catalog entries by node dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="parentNodeCode">The parent node code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntriesDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntriesDto(System.Int32)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntriesDto(System.Int32,System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="parentEntryId">The parent entry id.</param>
            <param name="entryType">Type of the entry.</param>
            <param name="relationType">Type of the relation.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntriesDto(System.Int32,System.String,System.String)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="parentEntryId">The parent entry id.</param>
            <param name="entryType">Type of the entry.</param>
            <param name="relationType">Type of the relation.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntriesDto(System.String,System.String)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="name">The name.</param>
            <param name="entryType">Type of the entry.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntriesDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="name">The name.</param>
            <param name="entryType">Type of the entry.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntriesDto(System.Int32[],System.Boolean,System.TimeSpan)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogEntries">The catalog entries.</param>
            <param name="cacheResults">if set to <c>true</c> then fetch through cache, otherwise fetch
            fresh from db.</param>
            <param name="cacheTimeout">The cache timeout.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntriesDto(System.Int32[],System.Boolean,System.TimeSpan,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogEntries">The catalog entries.</param>
            <param name="cacheResults">If set to <c>true</c> then fetch through cache, otherwise fetch
            fresh from db.</param>
            <param name="cacheTimeout">The cache timeout.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntriesDto(System.Int32[])">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogEntries">The catalog entries.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntriesDto(System.Int32[],Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogEntries">The catalog entries.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetAssociatedCatalogEntriesDto(System.Int32,System.String)">
            <summary>
            Gets the associated catalog entries dto.
            </summary>
            <param name="parentEntryId">The parent entry id.</param>
            <param name="associationName">Name of the association.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetAssociatedCatalogEntriesDto(System.Int32,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the associated catalog entries dto.
            </summary>
            <param name="parentEntryId">The parent entry id.</param>
            <param name="associationName">Name of the association.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetAssociatedCatalogEntriesDto(System.String,System.String)">
            <summary>
            Gets the associated catalog entries dto.
            </summary>
            <param name="parentEntryCode">The parent entry code.</param>
            <param name="associationName">Name of the association.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetAssociatedCatalogEntriesDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the associated catalog entries dto.
            </summary>
            <param name="parentEntryCode">The parent entry code.</param>
            <param name="associationName">Name of the association.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntryDto(System.Int32)">
            <summary>
            Gets the catalog entry dto.
            </summary>
            <param name="catalogEntryId">The catalog entry id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntryDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entry dto.
            </summary>
            <param name="catalogEntryId">The catalog entry id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.SaveCatalogEntry(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto)">
            <summary>
            Saves the catalog entry.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.DeleteCatalogEntry(System.Int32,System.Boolean)">
            <summary>
            Deletes the entry.
            </summary>
            <param name="entryId">The entry id.</param>
            <param name="recursive">if set to <c>true</c> [recursive].</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.DeleteCatalogEntries(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Deletes multiple catalog entries.
            </summary>
            <param name="catalogEntryIds">The IDs of the entries to delete.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntryDto(System.String)">
            <summary>
            Gets the catalog entry dto.
            </summary>
            <param name="catalogEntryCode">The catalog entry code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntryDto(System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entry dto.
            </summary>
            <param name="catalogEntryCode">The catalog entry code.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntryByUriDto(System.String,System.String)">
            <summary>
            Gets the catalog entry by URI dto.
            </summary>
            <param name="uri">The URI.</param>
            <param name="languageCode">The language code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogEntryByUriDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entry by URI dto.
            </summary>
            <param name="uri">The URI.</param>
            <param name="languageCode">The language code.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogRelationDto(System.Int32,System.Int32,System.Int32,System.String,Mediachase.Commerce.Catalog.Managers.CatalogRelationResponseGroup)">
            <summary>
            Gets the catalog relation dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="catalogNodeId">The catalog node id.</param>
            <param name="catalogEntryId">The catalog entry id.</param>
            <param name="groupName">Name of the group.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogRelationDto(System.String)">
            <summary>
            Gets the catalog relation dto.
            </summary>
            <param name="assetKey">The asset key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogRelationDto(System.Int32)">
            <summary>
            Gets the catalog relation dto.
            </summary>
            <param name="childEntryId">The child entry id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.SaveCatalogRelationDto(Mediachase.Commerce.Catalog.Dto.CatalogRelationDto)">
            <summary>
            Saves the catalog relation dto.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogAssociationDto(System.Int32)">
            <summary>
            Gets the catalog association dto.
            </summary>
            <param name="catalogAssociationId">The catalog association id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogAssociationDto(System.String)">
            <summary>
            Gets the catalog association dto.
            </summary>
            <param name="catalogAssociationName">Name of the catalog association.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogAssociationDtoByEntryId(System.Int32)">
            <summary>
            Gets the catalog association dto by entry id.
            </summary>
            <param name="catalogEntryId">The catalog entry id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCatalogAssociationDtoByEntryCode(System.Int32,System.String)">
            <summary>
            Gets the catalog association dto by entry code.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="catalogEntryCode">The catalog entry code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.SaveCatalogAssociation(Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto)">
            <summary>
            Saves the catalog association.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.SaveAssociationType(Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto)">
            <summary>
            Saves the catalog association type.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetMerchantsDto">
            <summary>
            Gets the merchants.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.GetCurrencyDto">
            <summary>
            Gets the currency dto.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystem.SaveCurrency(Mediachase.Commerce.Catalog.Dto.CurrencyDto)">
            <summary>
            Saves the currency.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ICatalogSystemEx">
            <summary>
            Intended to be implemented on the same class as <see cref="T:Mediachase.Commerce.Catalog.ICatalogSystem"/> to allow extended capabilities
            using extension methods in <see cref="T:Mediachase.Commerce.Catalog.Internal.CatalogSystemExtensions"/> without breaking the interface itself.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ICatalogSystemEx.GetCatalogNodesDto(System.Int32[],Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogNodeIds">The catalog nodes.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.#ctor(Mediachase.Commerce.Inventory.IWarehouseRepository,Mediachase.Commerce.InventoryService.IInventoryService,Mediachase.Commerce.Catalog.LicenseValidator,Mediachase.Commerce.Catalog.DefaultCatalogMetaDataModule,Mediachase.Commerce.Catalog.CatalogOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.CatalogContext"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetReadMode">
            <summary>
            Returns the read mode of this instance. The default is to follow the IsEnabled attribute of the Cache element of the catalog configuration.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogDto(System.Guid,Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup)">
            <summary>
            Gets the catalog dto.
            </summary>
            <param name="siteId">The site id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogDto">
            <summary>
            Gets the catalog dto.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogDto(System.Guid)">
            <summary>
            Gets the catalog dto.
            </summary>
            <param name="siteId">The site id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup)">
            <summary>
            Gets the catalog dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogDto(System.Int32)">
            <summary>
            Gets the catalog dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.SaveCatalog(Mediachase.Commerce.Catalog.Dto.CatalogDto)">
            <summary>
            Saves the catalog.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.DeleteCatalog(System.Int32)">
            <summary>
            Deletes the catalog.
            </summary>
            <param name="catalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.FindItemsDto(Mediachase.Commerce.Catalog.Search.CatalogSearchParameters,Mediachase.Commerce.Catalog.Search.CatalogSearchOptions,System.Int32@,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Finds the items dto.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="options">The options.</param>
            <param name="recordsCount">The records count.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.FindItemsDto(Mediachase.Commerce.Catalog.Search.CatalogSearchParameters,Mediachase.Commerce.Catalog.Search.CatalogSearchOptions,System.Int32@)">
            <summary>
            Finds the items dto.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="options">The options.</param>
            <param name="recordsCount">The records count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.FindNodesDto(Mediachase.Commerce.Catalog.Search.CatalogSearchParameters,Mediachase.Commerce.Catalog.Search.CatalogSearchOptions,System.Int32@,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Finds the nodes dto.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="options">The options.</param>
            <param name="recordsCount">The records count.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.FindNodesDto(Mediachase.Commerce.Catalog.Search.CatalogSearchParameters,Mediachase.Commerce.Catalog.Search.CatalogSearchOptions,System.Int32@)">
            <summary>
            Finds the nodes dto.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="options">The options.</param>
            <param name="recordsCount">The records count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.FindCatalogItemsTable(Mediachase.Commerce.Catalog.Managers.ItemSearchParameters)">
            <summary>
            Finds the catalog items table.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.FindCatalogItemsTable(Mediachase.Commerce.Catalog.Managers.ItemSearchParameters,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Finds the catalog items table.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogNodesDto(System.Int32,System.Int32)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="parentNodeId">The parent node id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogNodesDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogNodesDto(System.Int32)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogNodesDto(System.String,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogNodesDto(System.String)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogNodesDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="parentNodeCode">The parent node code.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogNodesDto(System.String,System.String)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="parentNodeCode">The parent node code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogNodesDto(System.Int32[],Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogNodeIds">The catalog node ids.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogNodeDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="catalogNodeId">The catalog node id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogNodeDto(System.Int32)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="catalogNodeId">The catalog node id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogNodeDto(System.String,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="code">The code.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogNodeDto(System.String)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="code">The code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogNodeDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="uri">The URI.</param>
            <param name="languageCode">The language code.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogNodeDto(System.String,System.String)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="uri">The URI.</param>
            <param name="languageCode">The language code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.SaveCatalogNode(Mediachase.Commerce.Catalog.Dto.CatalogNodeDto)">
            <summary>
            Saves the catalog node.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.DeleteCatalogNode(System.Int32)">
            <summary>
            Deletes the catalog node.
            </summary>
            <param name="catalogNodeId">The catalog node id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.DeleteCatalogNode(System.Int32,System.Int32)">
            <summary>
            Deletes the catalog node.
            </summary>
            <param name="catalogNodeId">The catalog node id.</param>
            <param name="catalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.DeleteCatalogNodeAndEntries(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.DeleteCatalogNodesAndEntries(System.Collections.Generic.IEnumerable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.DeleteCatalogNodeAndEntries(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntriesDto(System.Int32,System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="parentNodeId">The parent node id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntriesDto(System.Int32,System.Int32)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="parentNodeId">The parent node id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntriesDto(System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntriesDto(System.String)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntriesDto(System.String,System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="parentNodeId">The parent node id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntriesDto(System.String,System.Int32)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="parentNodeId">The parent node id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntriesByNodeDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries by node dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="parentNodeCode">The parent node code.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntriesByNodeDto(System.String,System.String)">
            <summary>
            Gets the catalog entries by node dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="parentNodeCode">The parent node code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntriesDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntriesDto(System.Int32)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntriesDto(System.Int32,System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="parentEntryId">The parent entry id.</param>
            <param name="entryType">Type of the entry.</param>
            <param name="relationType">Type of the relation.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntriesDto(System.Int32,System.String,System.String)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="parentEntryId">The parent entry id.</param>
            <param name="entryType">Type of the entry.</param>
            <param name="relationType">Type of the relation.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntriesDto(System.String,System.String)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="name">The name.</param>
            <param name="entryType">Type of the entry.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntriesDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="name">The name.</param>
            <param name="entryType">Type of the entry.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetAssociatedCatalogEntriesDto(System.Int32,System.String)">
            <summary>
            Gets the associated catalog entries dto.
            </summary>
            <param name="parentEntryId">The parent entry id.</param>
            <param name="associationName">Name of the association.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetAssociatedCatalogEntriesDto(System.Int32,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the associated catalog entries dto.
            </summary>
            <param name="parentEntryId">The parent entry id.</param>
            <param name="associationName">Name of the association.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetAssociatedCatalogEntriesDto(System.String,System.String)">
            <summary>
            Gets the associated catalog entries dto.
            </summary>
            <param name="parentEntryCode">The parent entry code.</param>
            <param name="associationName">Name of the association.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetAssociatedCatalogEntriesDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the associated catalog entries dto.
            </summary>
            <param name="parentEntryCode">The parent entry code.</param>
            <param name="associationName">Name of the association.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntryDto(System.Int32)">
            <summary>
            Gets the catalog entry dto.
            </summary>
            <param name="catalogEntryId">The catalog entry id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntryDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entry dto.
            </summary>
            <param name="catalogEntryId">The catalog entry id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntryDto(System.String)">
            <summary>
            Gets the catalog entry dto.
            </summary>
            <param name="catalogEntryCode">The catalog entry code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntryDto(System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entry dto.
            </summary>
            <param name="catalogEntryCode">The catalog entry code.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntryByUriDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entry by URI dto.
            </summary>
            <param name="uri">The URI.</param>
            <param name="languageCode">The language code.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntryByUriDto(System.String,System.String)">
            <summary>
            Gets the catalog entry by URI dto.
            </summary>
            <param name="uri">The URI.</param>
            <param name="languageCode">The language code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.SaveCatalogEntry(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto)">
            <summary>
            Saves the catalog entry.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.DeleteCatalogEntry(System.Int32,System.Boolean)">
            <summary>
            Deletes the entry.
            </summary>
            <param name="entryId">The entry id.</param>
            <param name="recursive">if set to <c>true</c> [recursive].</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.DeleteCatalogEntries(System.Collections.Generic.IEnumerable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntriesDto(System.Int32[],System.Boolean,System.TimeSpan)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogEntries">The catalog entries.</param>
            <param name="cacheResults">If set to <c>true</c> then fetch through cache, otherwise fetch
            fresh from db.</param>
            <param name="cacheTimeout">The cache timeout.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntriesDto(System.Int32[],System.Boolean,System.TimeSpan,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogEntries">The catalog entries.</param>
            <param name="cacheResults">If set to <c>true</c> then fetch through cache, otherwise fetch
            fresh from db.</param>
            <param name="cacheTimeout">The cache timeout.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntriesDto(System.Int32[])">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogEntries">The catalog entries.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogEntriesDto(System.Int32[],Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogEntries">The catalog entries.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogRelationDto(System.Int32,System.Int32,System.Int32,System.String,Mediachase.Commerce.Catalog.Managers.CatalogRelationResponseGroup)">
            <summary>
            Gets the catalog relation dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="catalogNodeId">The catalog node id.</param>
            <param name="catalogEntryId">The catalog entry id.</param>
            <param name="groupName">Name of the group.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogRelationDto(System.Int32)">
            <summary>
            Gets the the CatalogRelationDto for response group CatalogEntryRelation, finds all the parent products, packages, etc that have a child entry id of the parameter supplied.
            </summary>
            <param name="childEntryId">The child entry id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.SaveCatalogRelationDto(Mediachase.Commerce.Catalog.Dto.CatalogRelationDto)">
            <summary>
            Saves the catalog relation dto.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogAssociationDto(System.Int32)">
            <summary>
            Gets the catalog association dto.
            </summary>
            <param name="catalogAssociationId">The catalog association id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogAssociationDto(System.String)">
            <summary>
            Gets the catalog association dto.
            </summary>
            <param name="catalogAssociationName">Name of the catalog association.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogAssociationDtoByEntryId(System.Int32)">
            <summary>
            Gets the catalog association dto by entry id.
            </summary>
            <param name="catalogEntryId">The catalog entry id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCatalogAssociationDtoByEntryCode(System.Int32,System.String)">
            <summary>
            Gets the catalog association dto by entry code.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="catalogEntryCode">The catalog entry code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.SaveCatalogAssociation(Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto)">
            <summary>
            Saves the catalog association.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.SaveAssociationType(Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto)">
            <summary>
            Saves the catalog association type.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.StartFindItemsForIndexing(System.Guid,System.Int32,System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a catalog search for indexing.
            </summary>
            <param name="searchSetId">The identifier for the current search set.  This will be passed back in to get results.</param>
            <param name="catalogId">The catalog ID to search.</param>
            <param name="isIncremental">if set to <c>true</c> [is incremental].</param>
            <param name="earliestModifiedDate">If non null, only entries with a modified date on or after this value will be included in the results.</param>
            <param name="latestModifiedDate">If non null, only entries with a modified date on or before this value will be included in the results.</param>
            <returns>
            A count of the number of items that will be returned in the result set.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.ContinueFindItemsForIndexing(System.Guid,System.Int32,System.Int32)">
            <summary>
            Gets a section of results from StartFindItemsForIndexing.
            </summary>
            <param name="searchSetId">The identifier for the search set.  The search set must be initialized with with StartFindItemsForIndexing.</param>
            <param name="firstResultIndex">The lowest result index to return.  Result indexes are 1-based.</param>
            <param name="maxResultCount">The maximum number of results to return.</param>
            <returns>A CatalogEntryDto containing the results.</returns>
            <remarks>
            Once a CatalogEntry is recieved from this call, it will not be returned again.
            Repeated calls with the same firstResultIndex and maxResultCount will result in empty data sets for all but the first such call.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetMerchantsDto">
            <summary>
            Gets merchants.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.GetCurrencyDto">
            <summary>
            Gets the currency dto.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextImpl.SaveCurrency(Mediachase.Commerce.Catalog.Dto.CurrencyDto)">
            <summary>
            Saves the currency.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl">
            <summary>
            Site Context Proxy class is used to call the methods on the remote web service.
            This is client implementation.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl"/> class.
            </summary>
            <param name="binding">The binding.</param>
            <param name="address">The address.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl"/> class.
            </summary>
            <param name="endPointConfigurationName">End name of the point configuration.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.#ctor(Mediachase.Commerce.Catalog.ICatalogSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogDto(System.Guid,Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup)">
            <summary>
            Gets the catalog dto.
            </summary>
            <param name="siteId">The site id.</param>
            <param name="responseGroup">The response group.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogDto(System.Guid)">
            <summary>
            Gets the catalog dto.
            </summary>
            <param name="siteId">The site id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup)">
            <summary>
            Gets the catalog dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogDto(System.Int32)">
            <summary>
            Gets the catalog dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.SaveCatalog(Mediachase.Commerce.Catalog.Dto.CatalogDto)">
            <summary>
            Saves the catalog.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.DeleteCatalogEntry(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto,Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryRow)">
            <summary>
            Deletes the catalog entry.
            </summary>
            <param name="dto">The dto.</param>
            <param name="cloneRow"></param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.DeleteCatalog(System.Int32)">
            <summary>
            Deletes the catalog.
            </summary>
            <param name="catalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogDto">
            <summary>
            Gets the catalog dto.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.FindItemsDto(Mediachase.Commerce.Catalog.Search.CatalogSearchParameters,Mediachase.Commerce.Catalog.Search.CatalogSearchOptions,System.Int32@)">
            <summary>
            Finds the items dto.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="options">The options.</param>
            <param name="recordsCount">The records count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.StartFindItemsForIndexing(System.Guid,System.Int32,System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a catalog search for indexing.
            </summary>
            <param name="searchSetId">The identifier for the current search set.  This will be passed back in to get results.</param>
            <param name="catalogId">The catalog ID to search.</param>
            <param name="isIncremental">if set to <c>true</c> [is incremental].</param>
            <param name="earliestModifiedDate">If non null, only entries with a modified date on or after this value will be included in the results.</param>
            <param name="latestModifiedDate">If non null, only entries with a modified date on or before this value will be included in the results.</param>
            <returns>
            A count of the number of items that will be returned in the result set.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.ContinueFindItemsForIndexing(System.Guid,System.Int32,System.Int32)">
            <summary>
            Gets a section of results from StartFindItemsForIndexing.
            </summary>
            <param name="searchSetId">The identifier for the search set.  The search set must be initialized with with StartFindItemsForIndexing.</param>
            <param name="firstResultIndex">The lowest result index to return.  Result indexes are 1-based.</param>
            <param name="maxResultCount">The maximum number of results to return.</param>
            <returns>A CatalogEntryDto containing the results.</returns>
            <remarks>
            Once a CatalogEntry is recieved from this call, it will not be returned again.
            Repeated calls with the same firstResultIndex and maxResultCount will result in empty data sets for all but the first such call.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.FindItemsDto(Mediachase.Commerce.Catalog.Search.CatalogSearchParameters,Mediachase.Commerce.Catalog.Search.CatalogSearchOptions,System.Int32@,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Finds the items dto.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="options">The options.</param>
            <param name="recordsCount">The records count.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.FindNodesDto(Mediachase.Commerce.Catalog.Search.CatalogSearchParameters,Mediachase.Commerce.Catalog.Search.CatalogSearchOptions,System.Int32@)">
            <summary>
            Finds the nodes dto.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="options">The options.</param>
            <param name="recordsCount">The records count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.FindNodesDto(Mediachase.Commerce.Catalog.Search.CatalogSearchParameters,Mediachase.Commerce.Catalog.Search.CatalogSearchOptions,System.Int32@,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Finds the nodes dto.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="options">The options.</param>
            <param name="recordsCount">The records count.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogNodesDto(System.Int32,System.Int32)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="parentNodeId">The parent node id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogNodesDto(System.Int32)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogNodesDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogNodesDto(System.String)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogNodesDto(System.String,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogNodesDto(System.String,System.String)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="catalogNodeCode">The catalog node code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogNodesDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="catalogNodeCode">The catalog node code.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogNodeDto(System.Int32)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="catalogNodeId">The catalog node id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogNodeDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="catalogNodeId">The catalog node id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogNodeDto(System.String)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="code">The code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogNodeDto(System.String,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="code">The code.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogNodeDto(System.String,System.String)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="uri">The URI.</param>
            <param name="languageCode">The language code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogNodeDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="uri">The URI.</param>
            <param name="languageCode">The language code.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.FindCatalogItemsTable(Mediachase.Commerce.Catalog.Managers.ItemSearchParameters)">
            <summary>
            Finds the catalog items table.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.FindCatalogItemsTable(Mediachase.Commerce.Catalog.Managers.ItemSearchParameters,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Finds the catalog items table.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.SaveCatalogNode(Mediachase.Commerce.Catalog.Dto.CatalogNodeDto)">
            <summary>
            Saves the catalog node.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.DeleteCatalogNode(System.Int32)">
            <summary>
            Deletes the catalog node.
            </summary>
            <param name="catalogNodeId">The catalog node id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.DeleteCatalogNode(System.Int32,System.Int32)">
            <summary>
            Deletes the catalog node.
            </summary>
            <param name="catalogNodeId">The catalog node id.</param>
            <param name="catalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.DeleteCatalogNodeAndEntries(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.DeleteCatalogNodesAndEntries(System.Collections.Generic.IEnumerable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.DeleteCatalogNodeAndEntries(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntriesDto(System.Int32,System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="parentNodeId">The parent node id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntriesDto(System.Int32,System.Int32)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="parentNodeId">The parent node id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntriesDto(System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntriesDto(System.String)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntriesDto(System.String,System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="parentNodeId">The parent node id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntriesDto(System.String,System.Int32)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="parentNodeId">The parent node id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntriesByNodeDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries by node dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="parentNodeCode">The parent node code.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntriesByNodeDto(System.String,System.String)">
            <summary>
            Gets the catalog entries by node dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="parentNodeCode">The parent node code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntriesDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntriesDto(System.Int32)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntriesDto(System.Int32,System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="parentEntryId">The parent entry id.</param>
            <param name="entryType">Type of the entry.</param>
            <param name="relationType">Type of the relation.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntriesDto(System.Int32,System.String,System.String)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="parentEntryId">The parent entry id.</param>
            <param name="entryType">Type of the entry.</param>
            <param name="relationType">Type of the relation.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntriesDto(System.String,System.String)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="name">The name.</param>
            <param name="entryType">Type of the entry.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntriesDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="name">The name.</param>
            <param name="entryType">Type of the entry.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetAssociatedCatalogEntriesDto(System.Int32,System.String)">
            <summary>
            Gets the associated catalog entries dto.
            </summary>
            <param name="parentEntryId">The parent entry id.</param>
            <param name="associationName">Name of the association.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetAssociatedCatalogEntriesDto(System.Int32,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the associated catalog entries dto.
            </summary>
            <param name="parentEntryId">The parent entry id.</param>
            <param name="associationName">Name of the association.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetAssociatedCatalogEntriesDto(System.String,System.String)">
            <summary>
            Gets the associated catalog entries dto.
            </summary>
            <param name="parentEntryCode">The parent entry code.</param>
            <param name="associationName">Name of the association.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetAssociatedCatalogEntriesDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the associated catalog entries dto.
            </summary>
            <param name="parentEntryCode">The parent entry code.</param>
            <param name="associationName">Name of the association.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntryDto(System.Int32)">
            <summary>
            Gets the catalog entry dto.
            </summary>
            <param name="catalogEntryId">The catalog entry id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntryDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entry dto.
            </summary>
            <param name="catalogEntryId">The catalog entry id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.SaveCatalogEntry(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto)">
            <summary>
            Saves the catalog entry.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.DeleteCatalogEntry(System.Int32,System.Boolean)">
            <summary>
            Deletes the entry.
            </summary>
            <param name="entryId">The entry id.</param>
            <param name="recursive">if set to <c>true</c> [recursive].</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.DeleteCatalogEntries(System.Collections.Generic.IEnumerable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntryDto(System.String)">
            <summary>
            Gets the catalog entry dto.
            </summary>
            <param name="catalogEntryCode">The catalog entry code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntryDto(System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entry dto.
            </summary>
            <param name="catalogEntryCode">The catalog entry code.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntriesDto(System.Int32[],System.Boolean,System.TimeSpan)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogEntries">The catalog entries.</param>
            <param name="cacheResults">if set to <c>true</c> [cache results].</param>
            <param name="cacheTimeout">The cache timeout.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntriesDto(System.Int32[],System.Boolean,System.TimeSpan,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogEntries">The catalog entries.</param>
            <param name="cacheResults">if set to <c>true</c> [cache results].</param>
            <param name="cacheTimeout">The cache timeout.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntriesDto(System.Int32[])">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogEntries">The catalog entries.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntriesDto(System.Int32[],Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogEntries">The catalog entries.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntryByUriDto(System.String,System.String)">
            <summary>
            Gets the catalog entry by URI dto.
            </summary>
            <param name="uri">The URI.</param>
            <param name="languageCode">The language code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogEntryByUriDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Gets the catalog entry by URI dto.
            </summary>
            <param name="uri">The URI.</param>
            <param name="languageCode">The language code.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetMerchantsDto">
            <summary>
            Gets merchants.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogRelationDto(System.Int32,System.Int32,System.Int32,System.String,Mediachase.Commerce.Catalog.Managers.CatalogRelationResponseGroup)">
            <summary>
            Gets the catalog relation dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="catalogNodeId">The catalog node id.</param>
            <param name="catalogEntryId">The catalog entry id.</param>
            <param name="groupName">Name of the group.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogRelationDto(System.String)">
            <summary>
            Gets the catalog relation dto.
            </summary>
            <param name="assetKey">The asset key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogRelationDto(System.Int32)">
            <summary>
            Gets the the CatalogRelationDto for response group CatalogEntryRelation, finds all the parent products, packages, etc that have a child entry id of the parameter supplied.
            </summary>
            <param name="childEntryId">The child entry id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.SaveCatalogRelationDto(Mediachase.Commerce.Catalog.Dto.CatalogRelationDto)">
            <summary>
            Saves the catalog relation dto.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogAssociationDto(System.Int32)">
            <summary>
            Gets the catalog association dto.
            </summary>
            <param name="catalogAssociationId">The catalog association id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogAssociationDto(System.String)">
            <summary>
            Gets the catalog association dto.
            </summary>
            <param name="catalogAssociationName">Name of the catalog association.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogAssociationDtoByEntryId(System.Int32)">
            <summary>
            Gets the catalog association dto by entry id.
            </summary>
            <param name="catalogEntryId">The catalog entry id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCatalogAssociationDtoByEntryCode(System.Int32,System.String)">
            <summary>
            Gets the catalog association dto by entry code.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="catalogEntryCode">The catalog entry code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.SaveCatalogAssociation(Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto)">
            <summary>
            Saves the catalog association.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.SaveAssociationType(Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto)">
            <summary>
            Saves the catalog association type.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.GetCurrencyDto">
            <summary>
            Gets the currency dto.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Impl.CatalogContextProxyImpl.SaveCurrency(Mediachase.Commerce.Catalog.Dto.CurrencyDto)">
            <summary>
            Saves the currency.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.ImportExportProgressMessageHandler">
            <summary>
            Handles the import/export progress message.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport">
            <summary>
            Implements operations for catalog import and export.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport.MetaDataContextClone">
            <summary>
            Gets the meta data context clone.
            </summary>
            <value>The meta data context clone.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport.IsModelsAvailable">
            <summary>
            Gets or sets a value indicating whether the strongly typed models are available in the current context.  
            The default value is true
            </summary>
            <value>
            <c>true</c> if this instance is models available; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport.#ctor(Mediachase.Commerce.Catalog.ICatalogSystem,Mediachase.Commerce.Pricing.IPriceService,Mediachase.Commerce.Inventory.IWarehouseRepository,Mediachase.Commerce.InventoryService.IInventoryService,Mediachase.Commerce.Assets.ImportExport.CatalogItemAssetImportExport,Mediachase.Commerce.Catalog.Data.UniqueSeoGenerator,Mediachase.Commerce.Catalog.Data.ContentGuidAdmin,Mediachase.Commerce.Catalog.EntryIdentityResolver,Mediachase.Commerce.Catalog.NodeIdentityResolver,Mediachase.Data.Provider.IConnectionStringHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport.#ctor(Mediachase.Commerce.Catalog.ICatalogSystem,Mediachase.Commerce.Pricing.IPriceService,Mediachase.Commerce.Inventory.IWarehouseRepository,Mediachase.Commerce.InventoryService.IInventoryService,Mediachase.Commerce.Assets.ImportExport.CatalogItemAssetImportExport,Mediachase.Commerce.Catalog.Data.UniqueSeoGenerator,Mediachase.Commerce.Catalog.Internal.ContentGuidAdmin,Mediachase.Commerce.Catalog.EntryIdentityResolver,Mediachase.Commerce.Catalog.NodeIdentityResolver,Mediachase.Data.Provider.IConnectionStringHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport"/> class.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport.ImportExportProgressMessage">
            <summary>
            Occurs when [import export progress message].
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport.OnImportExportProgressMessage(System.Object,Mediachase.Commerce.Catalog.ImportExport.ImportExportEventArgs)">
            <summary>
            Raises the <see cref="E:ImportExportProgressMessage"/> event.
            </summary>
            <param name="source">The source.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.ImportExport.ImportExportEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport.GetImportExportCulture">
            <summary>
            Returns culture used for importing/exporting (essential when parsing and writing decimal, and floating point values).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport.Export(System.String,System.IO.Stream,System.String)">
            <summary>
            Exports the specified catalog name.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="output">The output.</param>
            <param name="baseFilePath">The base file path.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport.WriteMetaData(System.Xml.XmlWriter,System.Int32,System.Int32,System.String[],System.String,System.String)">
            <summary>
            Writes the meta data.
            </summary>
            <param name="wr">The wr.</param>
            <param name="metaClassId">The meta class id.</param>
            <param name="metaObjectId">The meta object id.</param>
            <param name="languages">The languages.</param>
            <param name="baseFilePath">The base file path.</param>
            <param name="defaultLanguage">The default language of the exporting catalog.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport.WriteBinaryData(System.String,System.Byte[],System.Xml.XmlWriter)">
            <summary>
            Writes the binary data.
            </summary>
            <param name="baseFilePath">The base file path.</param>
            <param name="data">The data.</param>
            <param name="wr">The wr.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport.WriteMerchants(System.Xml.XmlWriter)">
            <summary>
            Writes Merchants dictionary.
            </summary>
            <param name="wr">The wr.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport.WritePackages(System.Xml.XmlWriter)">
            <summary>
            Writes Packages dictionary.
            </summary>
            <param name="wr">The wr.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport.WriteTaxCategories(System.Xml.XmlWriter)">
            <summary>
            Writes TaxCategories dictionary.
            </summary>
            <param name="wr">The wr.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport.WriteWarehouses(System.Xml.XmlWriter)">
            <summary>
            Writes Warehouses dictionary.
            </summary>
            <param name="wr">The wr.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport.WriteAssociationTypes(System.Xml.XmlWriter)">
            <summary>
            Writes AssociationType dictionary.
            </summary>
            <param name="wr">The wr.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport.Import(System.String,System.Boolean)">
            <summary>
            Imports one or many catalogs, metadata and dictionaries from an xml source.
            </summary>
            <param name="directoryPath">The directory of the extracted zip content.</param>
            <param name="overwrite">A flag to indicate whether or not existing items should be overwritten.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.CatalogImportExport.Import(System.IO.Stream,System.Boolean)">
            <summary>
            Imports one or many catalogs, metadata and dictionaries from an xml source.
            </summary>
            <param name="stream">The xml file stream from where xml data is read.</param>
            <param name="overwrite">A flag to indicate whether or not existing items should be overwritten.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Export.CatalogExporter">
            <summary>
            Encapsulates methods to write out XML data for newer data modules.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.ImportExportEventArgs">
            <summary>
            Represents the arguments for the import and export events. (Inherits <see cref="T:System.EventArgs"/>.)
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.ImportExport.ImportExportEventArgs.Message">
            <summary>
            Gets or sets the message.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.ImportExport.ImportExportEventArgs.CompletedPercentage">
            <summary>
            Gets or sets the completed percentage.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.ImportExportEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.ImportExport.ImportExportEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.ImportExportEventArgs.#ctor(System.String,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.ImportExport.ImportExportEventArgs"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="percentage">The percentage.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.ImportExportException">
            <summary>
            Handles exceptions for the catalog import and export operations and inherits the <see cref="T:System.Exception"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.ImportExportException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.ImportExport.ImportExportException"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.ImportExportException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.ImportExport.ImportExportException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.ImportExportException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.ImportExport.ImportExportException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.ImportExportException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.ImportExport.ImportExportException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.ImportExportMessageType">
            <summary>
            The ImportExportMessageType enumeration defines the import/export message type.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.ImportExport.ImportExportMessageType.Info">
            <summary>
            Represents the info message type.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.ImportExport.ImportExportMessageType.Warning">
            <summary>
            Represents the warning message type.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.ImportExportProgressManager">
            <summary>
            Used during import and export for logging progress and warnings.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.ImportJob">
            <summary>
            Job for importing catalogs
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.ImportJob.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.ImportExport.ImportJob"/> class.
            </summary>
            <param name="sourceZipFile">The source zip file.</param>
            <param name="overwriteDuplicates">if set to <c>true</c> [overwrite duplicates].</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.ImportJob.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.ImportExport.ImportJob"/> class.
            </summary>
            <param name="sourceZipFile">The source zip file.</param>
            <param name="sourceXmlInZip">The source XML in zip.</param>
            <param name="overwriteDuplicates">if set to <c>true</c> [overwrite duplicates].</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.ImportJob.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.ImportExport.ImportJob"/> class.
            </summary>
            <param name="sourceZipFile">The source zip file.</param>
            <param name="sourceXmlInZip">The source XML in zip.</param>
            <param name="overwriteDuplicates">if set to <c>true</c> [overwrite duplicates].</param>
            <param name="isModelsAvailable">Determines of the strongly typed models are available to allow asset linking.  
            The default value is true.  
            Set to false if you are importing in commerce manager or another context where the media models are not available
            </param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.AssociationsReader">
            <summary>
            Reads and imports CatalogAssociation elements defined in the Catalogs/Catalog/Associations section.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.AssociationTypesReader">
            <summary>
            Reads and imports AssociationType elements defined in the Catalogs/Dictionaries/AssociationTypes section.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.CatalogImportContext">
            <summary>
            Contains settings used during a catalog import.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.ImportExport.Import.CatalogImportContext.CatalogId">
            <summary>
            Gets the id of the catalog that is being imported or overwritten.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.ImportExport.Import.CatalogImportContext.Overwrite">
            <summary>
            Indicates whether or not the imported items should overwrite any existing items
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.ImportExport.Import.CatalogImportContext.SourceDirectory">
            <summary>
            Gets the directory of the extracted zip content.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.ImportExport.Import.CatalogImportContext.CatalogLanguages">
            <summary>
            Gets all catalog languages, inclusive the catalog's default language.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.Import.CatalogImportContext.StreamElements(System.String)">
            <summary>
            Streams all the elements inside the current node matcing the given element name. Skips any other elements.
            </summary>
            <param name="elementName">The name of the elements to stream.</param>
            <remarks> Avoid using this if the descendant tree of the parent element is too big, like for example <Catalog/>.</remarks>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.Import.CatalogImportContext.StreamPartialElements(System.String)">
            <summary>
            Streams elements matching the given eleement name from the current position. Exits when any other element name is encountered.
            </summary>
            <param name="elementName">The name of the elements to stream.</param>
            <remarks> Avoid using this if the descendant tree of the parent element is too big, like for example <Catalog/>.</remarks>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.CatalogItemAssetsReader">
            <summary>
            Reads and imports elements defined in the Catalogs/Catalog/CatalogItemAssetCollection section.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.CatalogReader">
            <summary>
            Reads and imports Catalog elements defined in the Catalogs/Catalog section. 
            It only handles catalog data and the rest is handled by other specialized readers.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.ContentGuidToContentIdMap">
            <summary>
            Map of content guids to content ids. 
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.DictionariesReader">
            <summary>
            Reads and imports elements defined in the Catalogs/Dictionaries section. 
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.EntriesCommitter">
            <summary>
            Handles saving of new or updated entries.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.EntriesReader">
            <summary>
            Reads and imports Entry elements defined in the Catalogs/Catalog/Entries section. 
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.EntryRelationsReader">
            <summary>
            Reads and imports EntryRelation elements defined in the Catalogs/Catalog/Relations section. 
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.EntrySaveInfo">
            <summary>
            Used as a temporary storage for entry related data that is created or updated during the import of entries.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.ImportExport.Import.EntrySaveInfo.MetaObjects">
            <summary>
            Gets a map of metaobjects to entry ids.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.ImportExport.Import.EntrySaveInfo.InventoryRecords">
            <summary>
            Gets a map of inventory records to catalog keys.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.ImportExport.Import.EntrySaveInfo.PriceGroups">
            <summary>
            Gets a map of prices to catalog keys.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.ImportExport.Import.EntrySaveInfo.Dto">
            <summary>
            Gets the dto containing the entries.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.EntrySeosReader">
            <summary>
            Reads and imports Seo elements defined in the Catalogs/Catalog/Entries/Entry/SeoInfo section. 
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.ExistingEntriesLoader">
            <summary>
            Loads existing catalog entries into a dto and provides methods for accessing data rows.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.Import.ExistingEntriesLoader.Load(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Loads existing catalog entries by catalog entry ids into a dto. 
            </summary>
            <param name="catalogEntryIds"></param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.ImportCatalogNodeCache">
            <summary>
            Caches node relations. It is used during the import of nodes and relations.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.Import.Importer.Import(System.IO.Stream,System.String,System.Boolean)">
            <summary>
            Imports one or many catalogs, metadata and dictionaries from an xml source.
            </summary>
            <param name="stream">The xml stream from where xml data is read.</param>
            <param name="sourceDirectory">The source directory to indicate where to read file data for meta fields of type file or image. This should rarely be used</param>
            <param name="overwrite">A flag to indicate whether or not existing items should be overwritten.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.MarketsReader">
            <summary>
            Reads and imports Market elements defined in the Catalogs/Dictionaries/Markets section. 
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.MerchantsReader">
            <summary>
            Reads and imports Merchant elements defined in the Catalog/Dictionaries/Merchants section.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.MetaDataReader">
            <summary>
            Reads and imports MetaData elements defined in the Catalogs/Catalog/Entries/Entry and Catalogs/Catalog/Nodes/Node sections. 
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.MetaDataSchemeReader">
            <summary>
            Reads and imports elements defined in the Catalog/MetaDataScheme section.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.MetaEntriesLoader">
            <summary>
            Loads meta info of entries that are being imported.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.MetaEntry">
            <summary>
             temporary storage for an entry's meta info that is being imported.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.ImportExport.Import.MetaEntry.Row">
            <summary>
            The data row that is being imported
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.ImportExport.Import.MetaEntry.XEntry">
            <summary>
            The xml data that contains entry data.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.ImportExport.Import.MetaEntry.ExistingCatalogEntryId">
            <summary>
            The catalog entry id of any existing entry with the same code or content guid, or zero if the entry doesn't exist.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.NodeEntryRelationsReader">
            <summary>
            Reads and imports NodeEntryRelation elements defined in the Catalogs/Catalog/Relations section. 
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.NodeRelationsReader">
            <summary>
            Reads and imports NodeRelation elements defined in the Catalogs/Catalog/Relations section. 
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.NodeSeosReader">
            <summary>
            Reads and imports Seo elements defined in the Catalogs/Catalog/Nodes/Node/SeoInfo section. 
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.NodesReader">
            <summary>
            Reads and imports Node elements defined in the Catalogs/Catalog/Nodes section. 
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.PackagesReader">
            <summary>
            Reads and imports Package elements defined in the Catalogs/Dictionaries/Packages section. 
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.PricesReader">
            <summary>
            Reads and imports Price elements defined in the Catalogs/Catalog/Entries/Entry/Prices section. 
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.RelationsReader">
            <summary>
            Reads and imports elements defined in the Catalogs/Catalog/Relations section. 
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ImportExport.Import.SalePricesReader.Read(System.Xml.Linq.XElement,Mediachase.Commerce.Catalog.CatalogKey)">
            <summary>
            Reads and imports SalePrice elements defined in the Catalogs/Catalog/Entries/Entry/SalePrices section. 
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.SeoItemId">
            <summary>
            A class to identify a SEO item.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.TaxCategoriesReader">
            <summary>
            Reads and imports TaxCategory elements defined in the Catalogs/Dictionaries/TaxCategories section. 
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.VariationsReader">
            <summary>
            Reads and imports Variation elements defined in the Catalogs/Catalog/Entries/Entry/VariationInfo section. 
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.WarehouseInventoriesReader">
            <summary>
            Reads and imports WarehouseInventory elements defined in the Catalogs/Catalog/Entries/Entry/WarehouseInventories section. 
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ImportExport.Import.WarehousesReader">
            <summary>
            Reads and imports Warehouse elements defined in the Catalogs/Dictionaries/Warehouses section. 
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Internal.CatalogDataHelper">
            <summary>
            Helper class for catalog data and data commands
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Internal.CatalogDataHelper.CreateDataCommand">
            <summary>
            Creates the data command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Internal.CatalogOptionsExtensions">
            <summary>
            <see cref="T:Mediachase.Commerce.Catalog.CatalogOptions"/> extensions methods. These methods can be removed when the legacy configuration system is removed.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Internal.CatalogSystemExtensions">
            <summary>
            This type/member supports the EPiServer infrastructure and is not intended to be
            used directly from your code.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Internal.CatalogSystemExtensions.GetCatalogNodesDto(Mediachase.Commerce.Catalog.ICatalogSystem,System.Int32[],Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogContext">The catalog context.</param>
            <param name="catalogNodeIds">The catalog node ids.</param>
            <param name="responseGroup">The response group.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Internal.ContentGuidAdmin">
            <summary>
            Represents the database access to get catalog content guid from database.
            
            This class supports the EPiServer Commerce infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Internal.ContentGuidAdmin.#ctor(Mediachase.Commerce.Catalog.ReferenceConverter)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Internal.ContentGuidAdmin" /> class.
            </summary>
            <param name="referenceConverter">The reference converter.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Internal.ContentGuidAdmin.ResolveContentLink(System.Guid)">
            <summary>
            Gets content link from <paramref name="contentGuid"/>.
            </summary>
            <param name="contentGuid">The content unique identifier.</param>
            <returns>Content link, or empty reference if the content link is not found</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Internal.ContentGuidAdmin.ResolveContentGuid(EPiServer.Core.ContentReference)">
            <summary>
            Gets content Guid from <paramref name="contentLink"/>.
            </summary>
            <param name="contentLink">The content link.</param>
            <returns>The Guid for the specifed content, or Guid.Empty if the content guid is not found</returns>
            <exception cref="T:System.ArgumentException">The input content link is not CatalogEntry, CatalogNode or Catalog.</exception>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Internal.ContentGuidAdmin.GetEntityIdByContentGuid(System.Guid)">
            <summary>
            Gets catalog content id by content guid. The catalog content might be catalog, node or entry
            </summary>
            <param name="contentGuid">the content guid</param>
            <returns>node id</returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Internal.ReducedCacheCatalogSystemAccessor">
            <summary>
            Delegate intended to hold a <see cref="T:Mediachase.Commerce.Catalog.ICatalogSystem"/> instance which is set to use
            <see cref="F:Mediachase.Data.Provider.ReadMode.CachedNoInsert"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Internal.UriSegmentConflict">
            <summary>
            Represents a conflict in UriSegment under the same parent in
            the same language, e.g. items that would have identical routes
            when using hierarchical routes.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Internal.UriSegmentConflict.#ctor(System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.Catalog.Internal.UriSegmentConflict"/>.
            </summary>
            <param name="uriSegment"><see cref="P:Mediachase.Commerce.Catalog.Internal.UriSegmentConflict.UriSegment"/>.</param>
            <param name="languageCode"><see cref="P:Mediachase.Commerce.Catalog.Internal.UriSegmentConflict.LanguageCode"/>.</param>
            <param name="parentNodeId"><see cref="P:Mediachase.Commerce.Catalog.Internal.UriSegmentConflict.ParentNodeId"/>.</param>
            <param name="catalogId"><see cref="P:Mediachase.Commerce.Catalog.Internal.UriSegmentConflict.CatalogId"/>.</param>
            <param name="entryIds"><see cref="P:Mediachase.Commerce.Catalog.Internal.UriSegmentConflict.EntryIds"/></param>
            <param name="nodeIds"><see cref="T:Mediachase.Commerce.Catalog.Internal.UriSegmentConflict"/></param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Internal.UriSegmentConflict.UriSegment">
            <summary>
            The uri segment that has conflicts.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Internal.UriSegmentConflict.LanguageCode">
            <summary>
            The language in which there is a conflict.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Internal.UriSegmentConflict.ParentNodeId">
            <summary>
            The ID of the node where there is a conflict. It will be 0 if the
            conflict is in the catalog itself.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Internal.UriSegmentConflict.CatalogId">
            <summary>
            The ID of the catalog where there is a conflict.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Internal.UriSegmentConflict.EntryIds">
            <summary>
            The IDs of the entries that are in conflict, with each
            other or with <see cref="P:Mediachase.Commerce.Catalog.Internal.UriSegmentConflict.NodeIds"/>.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Internal.UriSegmentConflict.NodeIds">
            <summary>
            The IDs of the nodes that are in conflict, with each
            other or with <see cref="P:Mediachase.Commerce.Catalog.Internal.UriSegmentConflict.EntryIds"/>.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Internal.UriSegmentConflictAnalyzer">
            <summary>
            Queries the database to get any existing conflicts in uri segments.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Internal.UriSegmentConflictAnalyzer.#ctor(Mediachase.Data.Provider.IConnectionStringHandler)">
            <summary>
            Creates a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Internal.UriSegmentConflictAnalyzer"/> class.
            </summary>
            <param name="connectionHandler">The connection string handler.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Internal.UriSegmentConflictAnalyzer.GetConflicts">
            <summary>
            Gets any existing conflics as <see cref="T:Mediachase.Commerce.Catalog.Internal.UriSegmentConflict"/> items.
            </summary>
            <returns>The conflicts.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Internal.UriValidationOptions">
            <summary>
            Contains options for catalog URI validation.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Internal.UriValidationOptions.UseLessStrictEntryUriSegmentValidation">
            <summary>
            Gets the value of the episerver:commerce.UseLessStrictEntryUriSegmentValidation AppSetting, indicating
            whether validation of entry uri segments should be strict or not. Strict validation means uri segments
            must be globally unique (for the language) to make sure all hierarchical routes to entries will work
            despite any crosslinking that happens after the uri segment has been saved. With less strict validation,
            the uri segment will still be validated for uniqueness against sibling items, but since this happens at
            the time of saving, crosslinking items can create collissions in hierarchical routes.
            </summary>
            <value>
            <c>true</c> to do less strict validation; <c>false</c> to ensure global uniqueness. The default is <c>false</c>.
            </value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Internal.LegacyConfiguration">
            <summary>
            These class can be removed when the legacy configuration system is removed.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.InventoryStatus">
            <summary>
            Represents inventory status.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.InventoryStatus.Disabled">
            <summary>
            When the Inventory Status is "Disabled", it behaves as if the store is selling digital goods. 
            Any amount can be sold, the requested quantities are updated, but the available counts do not change.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.InventoryStatus.Enabled">
            <summary>
            When the Inventory Status is "Enabled", it behaves as if we are tracking the inventory of physical goods, 
            which is a limited amount that can be sold. Stock will be required to be available to process orders, 
            and available counts will be decremented as orders are processed.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.IsPublishedField">
            <summary>
            Represents the Meta field to determine if the content language is published or not.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.IsPublishedField.UseStandardEditControl">
            <inheridoc />
        </member>
        <member name="M:Mediachase.Commerce.Catalog.IsPublishedField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.IsPublishedField"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.IsPublishedField.GetMetaField(Mediachase.MetaDataPlus.MetaDataContext)">
            <inheridoc />
        </member>
        <member name="F:Mediachase.Commerce.Catalog.LicenseValidator._timer">
            <summary>
            Represents the timer to reset the _licenseIsValid variable every hour.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Loggers.CatalogLogger">
            <summary>
            Represents catalog logger.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Loggers.CatalogLogger.EntryUpdating(System.Object,Mediachase.Commerce.Catalog.Events.EntryEventArgs)">
            <summary>
            Entries updating.
            </summary>
            <param name="source">The source.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.EntryEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Loggers.CatalogLogger.EntryUpdated(System.Object,Mediachase.Commerce.Catalog.Events.EntryEventArgs)">
            <summary>
            Entries updated.
            </summary>
            <param name="source">The source.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Catalog.Events.EntryEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Loggers.CatalogLogger.TakePendingInsertsFor(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto)">
            <summary>
            Takes the <see cref="T:Mediachase.Commerce.Catalog.Loggers.CatalogLogger.PendingInserts"/> object matching the previously registered object
            for this thread or HTTP request.
            </summary>
            <param name="source">
            The <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto"/> value that the <see cref="T:Mediachase.Commerce.Catalog.Loggers.CatalogLogger.PendingInserts"/> is
            expected to match.
            </param>
            <returns>
            The <see cref="T:Mediachase.Commerce.Catalog.Loggers.CatalogLogger.PendingInserts"/> object if matches, or null if it is not set or does not
            match. The <see cref="T:Mediachase.Commerce.Catalog.Loggers.CatalogLogger.PendingInserts"/> object for the current thread or HTTP request is
            cleared regardless of whether it matches.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Loggers.CatalogLogger.SetPendingInserts(Mediachase.Commerce.Catalog.Loggers.CatalogLogger.PendingInserts)">
            <summary>
            Sets the <see cref="T:Mediachase.Commerce.Catalog.Loggers.CatalogLogger.PendingInserts"/> object for the current thread or HTTP request.
            This object will be used to log creation events, since the newly created catalog entry
            IDs will not be available in the EntryUpdating event.
            </summary>
            <param name="value">
            The <see cref="T:Mediachase.Commerce.Catalog.Loggers.CatalogLogger.PendingInserts"/> value for the current operation.
            </param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.AssociationRowVersionInfo">
            <summary>
            Carries information about a version of a <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto.CatalogAssociationRow"/>.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.AssociationRowVersionInfo.ParentEntryId">
            <summary>
            Gets the parent entry ID of the evaluated DataRow.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.AssociationRowVersionInfo.GetChildEntryIds(System.Data.DataRowState)">
            <summary>
            Gets the child entry IDs (entry IDs in the child <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto.CatalogEntryAssociationRow"/>
            instances) of the evaluated DataRow that are in a specific state.
            </summary>
            <param name="state">The state to match.</param>
            <returns>The IDs of the child entries in the requested state.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.AssociationRowVersionInfo.Read(Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto.CatalogAssociationRow,System.Data.DataRowVersion)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.AssociationRowVersionInfo.EvaluateHasAssociatedChange(Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto.CatalogAssociationRow)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.AssociationRowVersionInfo.OnCommitNewRow(Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto.CatalogAssociationRow)">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.CatalogAssociationManager">
            <summary>
            Implements operations for the catalog association manager.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogAssociationManager.GetCatalogAssociationDto(System.Int32,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Finds the items dto.
            </summary>
            <param name="catalogAssociationId">The catalog association id.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogAssociationManager.GetCatalogAssociationDto(System.String,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog association dto.
            </summary>
            <param name="catalogAssociationName">Name of the catalog association.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogAssociationManager.GetCatalogAssociationDtoByEntryId(System.Int32,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog association dto by entry id.
            </summary>
            <param name="catalogEntryId">The catalog entry id.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogAssociationManager.GetCatalogAssociationDtoByEntryIds(System.Collections.Generic.IEnumerable{System.Int32},Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog association dto by entry id.
            </summary>
            <param name="catalogEntryIds">The catalog entry id.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogAssociationManager.GetCatalogAssociationDtoByEntryIdsNonCached(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets the catalog association dto by entry id.
            </summary>
            <param name="catalogEntryIds">The catalog entry id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogAssociationManager.GetCatalogAssociationDtoByEntryCode(System.Int32,System.String,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog association dto by entry code.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="catalogEntryCode">The catalog entry code.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogAssociationManager.GetCatalogAssociationDtoByCatalogId(System.Int32,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog association dto by catalog id.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogAssociationManager.SaveCatalogAssociation(Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto,System.Action{Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto})">
            <summary>
            Saves the catalog association.
            </summary>
            <param name="dataset">The dto.</param>
            <param name="savingAction">The saving action.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogAssociationManager.SaveCatalogAssociation(Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto)">
            <summary>
            Saves the catalog association.
            </summary>
            <param name="dataset">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogAssociationManager.SaveAssociationType(Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto)">
            <summary>
            Saves the catalog association type.
            </summary>
            <param name="dataset">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogAssociationManager.DeleteCatalogEntryAssociations(System.Collections.Generic.List{System.Int32})">
            <summary>
            Deletes the catalog entry associations.
            </summary>
            <param name="deletedEntries">The deleted entries.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.CatalogEntryManager">
            <summary>
            Contains functions that provide methods to manipulate catalog entries.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryManager.GetCatalogEntriesDto(System.Int32[],Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup,Mediachase.Data.Provider.ReadMode,System.TimeSpan)">
            <summary>
            Gets a data set containing catalog entries.
            </summary>
            <param name="catalogEntries">The catalog entries.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <param name="cacheTimeout">The cache timeout.</param>
            <returns>
            A data set containing the specified entries.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryManager.FindItemsDto(Mediachase.Commerce.Catalog.Search.CatalogSearch,System.Int32@,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup)">
            <summary>
            Finds catalog entries based on criteria in <paramref name="search"/>.
            </summary>
            <param name="search">The criteria for the search.</param>
            <param name="recordsCount">The records count.</param>
            <param name="responseGroup">This parameter is ignored.</param>
            <returns>A data set of entries matching the specified criteria.</returns>
            <remarks>
            In prior releases, this method did not return a valid record count if the data was being pulled from cached data rather than
            calling the database.  This has been corrected.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryManager.GetAssociatedCatalogEntriesDto(System.Int32,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the associated catalog entries dto.
            </summary>
            <param name="parentEntryId">The parent entry id.</param>
            <param name="associationName">Name of the association.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryManager.GetAssociatedCatalogEntriesDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the associated catalog entries dto.
            </summary>
            <param name="parentEntryCode">The parent entry code.</param>
            <param name="associationName">Name of the association.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryManager.GetCatalogEntryDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog entry dto.
            </summary>
            <param name="catalogEntryId">The catalog entry id.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryManager.GetCatalogEntryDto(System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog entry dto.
            </summary>
            <param name="catalogEntryCode">The catalog entry code.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryManager.GetCatalogEntryByUriDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog entry by URI dto.
            </summary>
            <param name="uri">The URI.</param>
            <param name="languageCode">The language code.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryManager.GetCatalogEntriesDto(System.Int32,System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="parentEntryId">The parent entry id.</param>
            <param name="entryType">Type of the entry.</param>
            <param name="relationType">Type of the relation.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryManager.GetCatalogEntriesDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="name">The name.</param>
            <param name="entryType">Type of the entry.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryManager.SaveCatalogEntry(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto)">
            <summary>
            Saves the catalog entry.
            </summary>
            <param name="dataset">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryManager.SaveCatalogEntry(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto,System.Action{Mediachase.Commerce.Catalog.Dto.CatalogEntryDto})">
            <summary>
            Saves the catalog entry.
            </summary>
            <param name="dataset">The dto.</param>
            <param name="saveAction">Save action with the data set</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryManager.DeleteCatalogEntry(Mediachase.Commerce.InventoryService.IInventoryService,System.Int32,System.Boolean)">
            <summary>
            Deletes the entry.
            </summary>
            <param name="inventoryService">The inventory service.</param>
            <param name="entryId">The entry id.</param>
            <param name="recursive">if set to <c>true</c> [recursive].</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryManager.DeleteCatalogEntries(Mediachase.Commerce.InventoryService.IInventoryService,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Deletes multiple catalog entries.
            </summary>
            <param name="inventoryService">The inventory service.</param>
            <param name="catalogEntryIds">The IDs of the entries to delete.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryManager.GetCatalogEntriesDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryManager.GetCatalogEntriesDto(System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryManager.GetCatalogEntriesDto(System.Int32,System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="parentNodeId">The parent node id.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryManager.GetCatalogEntriesDto(System.String,System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog entries dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="parentNodeId">The parent node id.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryManager.GetCatalogEntriesByCatalogDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog entries by catalog dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="parentNodeCode">The parent node code.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryManager.GetMerchants(Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog entries by catalog dto.
            </summary>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.CatalogItemRowVersionInfo`1">
            <summary>
            Base class that extends <see cref="T:Mediachase.Commerce.Catalog.Managers.RowVersionInfo`1"/> with properties common to
            catalog items (nodes, entries).
            </summary>
            <typeparam name="TRow">The type of the row.</typeparam>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.CatalogItemRowVersionInfo`1.CatalogId">
            <summary>
            Gets the Catalog ID of the entity in the evaluated DataRow.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.CatalogItemRowVersionInfo`1.Code">
            <summary>
            Gets the Code of the entity in the evaluated DataRow.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.CatalogItemRowVersionInfo`1.ContentGuid">
            <summary>
            Gets the content guid of the entity in the evaluated DataRow.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.CatalogLogManager">
            <summary>
            Represents catalog log manager.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogLogManager.GetCatalogLog(System.String,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets the catalog log.
            </summary>
            <param name="operation">The operation.</param>
            <param name="objectType">Type of the object.</param>
            <param name="created">The created.</param>
            <param name="startingRecord">The starting record.</param>
            <param name="numberOfRecords">The number of records.</param>
            <param name="totalRecords">The total records.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogLogManager.SaveLog(Mediachase.Commerce.Catalog.Dto.CatalogLogDto)">
            <summary>
            Saves the log.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.CatalogManager">
            <summary>
            Catalog manager is a proxy between methods that call data layer functions and the facade layer.
            The methods here check if the appropriate security is set and cache the data.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogManager.GetCatalogDto(Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog dto, checks permissions and caches results.
            </summary>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogManager.GetCatalogDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup)">
            <summary>
            Gets the catalog dto, checks permissions and caches results.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogManager.GetCatalogDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog dto, checks permissions and caches results.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogManager.SaveCatalog(Mediachase.Commerce.Catalog.Dto.CatalogDto)">
            <summary>
            Saves the catalog.
            </summary>
            <param name="dataset">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogManager.DeleteCatalog(System.Int32)">
            <summary>
            Deletes a catalog and everything it contains, except for things that are also associated
            with another catalog.
            </summary>
            <param name="catalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogManager.DeleteCatalog(Mediachase.Commerce.InventoryService.IInventoryService,System.Int32)">
            <summary>
            Deletes a catalog and everything it contains, except for things that are also associated
            with another catalog.
            </summary>
            <param name="inventoryService">The currently configured inventory service.</param>
            <param name="catalogId">The catalog id.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.CatalogNodeManager">
            <summary>
            Contains public functions to perform operations related to catalog nodes.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogNodeManager.FindNodesDto(Mediachase.Commerce.Catalog.Search.CatalogSearch,System.Int32@,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Finds the nodes dto.
            </summary>
            <param name="search">The search.</param>
            <param name="recordsCount">The records count.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogNodeManager.GetCatalogItemsTable(Mediachase.Commerce.Catalog.Managers.ItemSearchParameters,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Retrieves table containing nodes and entries from the specified catalog and category.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns>
            DataTable with the following fields:
            ID, Name, Type, Code, StartDate, EndDate, IsActive, SortOrder, RowNumber.
            If returnTotalCount is true, [RecordCount] is returned in the last column of the output table.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogNodeManager.GetCatalogNodesDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog dto, checks permissions and caches results.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogNodeManager.GetCatalogNodesDto(System.String,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogNodeManager.GetCatalogNodesDto(System.Int32,System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="parentNodeId">The parent node id.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogNodeManager.GetCatalogNodesDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="parentNodeCode">The parent node code.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogNodeManager.GetCatalogNodesDto(System.Int32[],Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup,Mediachase.Data.Provider.ReadMode,System.TimeSpan)">
            <summary>
            Gets a data set containing catalog nodes.
            </summary>
            <param name="catalogNodeIds">The catalog node ids.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <param name="cacheTimeout">The cache timeout.</param>
            <returns>
            A data set containing the specified nodes.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogNodeManager.GetCatalogNodeDto(System.Int32,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="catalogNodeId">The catalog node id.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogNodeManager.GetCatalogNodeDto(System.String,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="code">The code.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogNodeManager.GetCatalogNodeDto(System.String,System.String,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog node dto.
            </summary>
            <param name="uri">The URI.</param>
            <param name="languageCode">The language code.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogNodeManager.SaveCatalogNode(Mediachase.Commerce.Catalog.Dto.CatalogNodeDto)">
            <summary>
            Saves the catalog node.
            </summary>
            <param name="dataset">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogNodeManager.DeleteCatalogNode(System.Int32,System.Int32)">
            <summary>
            Deletes the catalog node.
            </summary>
            <param name="catalogNodeId">The catalog node id.</param>
            <param name="catalogId">The catalog id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogNodeManager.DeleteCatalogNode(System.Int32)">
            <summary>
            Deletes the catalog node.
            </summary>
            <param name="catalogNodeId">The catalog node id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogNodeManager.DeleteNodeRecursive(System.Int32,System.Int32,Mediachase.Commerce.Catalog.Dto.CatalogNodeDto@,Mediachase.Commerce.Catalog.Dto.CatalogRelationDto@)">
            <summary>
            Deletes the catalog node.
            </summary>
            <param name="catalogNodeId">The catalog node id.</param>
            <param name="catalogId">The catalog id.</param>
            <param name="catalogNodeDto">The catalog node Dto.</param>
            <param name="catalogRelationDto">The catalog relation dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogNodeManager.LoadNode(Mediachase.Commerce.Catalog.Data.CatalogNodeAdmin,Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogNodeRow,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Loads the node.
            </summary>
            <param name="admin">The admin.</param>
            <param name="row">The row.</param>
            <param name="responseGroup">The response group.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogNodeManager.FindNodesDtoWorker(Mediachase.Commerce.Catalog.Search.CatalogSearch,System.Int32@,Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup)">
            <summary>
            Finds the nodes dto2.
            </summary>
            <param name="search">The search.</param>
            <param name="recordsCount">The records count.</param>
            <param name="responseGroup">The response group.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogNodeManager.UpdateEntryModifiedDates(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.List{System.String},System.DateTime)">
            <summary>
            Updates the modified date of each entry in the list of catalog entry IDs to the specified date (typically UtcNow).
            </summary>
            <param name="catalogEntryIds">The IDs of the entries to update.</param>
            <param name="languages">The languages of the catalog to update.</param>
            <param name="now">The date and time to use as now.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.CatalogRelationManager">
            <summary>
            Implements operations for the catalog relation manager.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogRelationManager.GetNodeEntryRelations(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets the parent nodes for entries.
            </summary>
            <param name="catalogEntryIds">The catalog entry ids.</param>
            <returns>Entries (key) with it's parent nodes (value).</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogRelationManager.GetNodeEntryRelations(System.Collections.Generic.IEnumerable{System.Int32},Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the parent nodes for entries.
            </summary>
            <param name="catalogEntryIds">The catalog entry ids.</param>
            <param name="readMode">The read mode.</param>
            <returns>Entries (key) with it's parent nodes (value).</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogRelationManager.GetCatalogRelationDto(System.Int32,System.Int32,System.Int32,System.String,Mediachase.Commerce.Catalog.Managers.CatalogRelationResponseGroup,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="catalogId">The catalog id.</param>
            <param name="catalogNodeId">The catalog node id.</param>
            <param name="catalogEntryId">The catalog entry id.</param>
            <param name="groupName">Name of the group.</param>
            <param name="responseGroup">The response group.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogRelationManager.GetCatalogRelationDto(System.String,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the catalog nodes dto.
            </summary>
            <param name="assetKey">The asset key.</param>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogRelationManager.SaveCatalogRelation(Mediachase.Commerce.Catalog.Dto.CatalogRelationDto)">
            <summary>
            Saves the catalog relation.
            </summary>
            <param name="dataset">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogRelationManager.SaveCatalogRelation(Mediachase.Commerce.Catalog.Dto.CatalogRelationDto,System.Action{Mediachase.Commerce.Catalog.Dto.CatalogRelationDto})">
            <summary>
            Saves the catalog relation.
            </summary>
            <param name="dataset">The dto.</param>
            <param name="savingAction">The saving action</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogRelationManager.DeleteRelations(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Deletes relations referencign any of the specified catalog entry or catalog node ids.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.CatalogRowVersionInfo">
            <summary>
            Carries information about a version of a <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogDto.CatalogRow" />.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogRowVersionInfo.Read(Mediachase.Commerce.Catalog.Dto.CatalogDto.CatalogRow,System.Data.DataRowVersion)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogRowVersionInfo.EvaluateHasAssociatedChange(Mediachase.Commerce.Catalog.Dto.CatalogDto.CatalogRow)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogRowVersionInfo.OnCommitNewRow(Mediachase.Commerce.Catalog.Dto.CatalogDto.CatalogRow)">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.CatalogTaxManager">
            <summary>
            Implements operations for the tax manager.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogTaxManager.GetTaxCategories">
            <summary>
            Gets the taxes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogTaxManager.GetTaxCategoryByTaxCategoryId(System.Int32)">
            <summary>
            Gets the tax category by id.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogTaxManager.GetTaxCategoryByName(System.String)">
            <summary>
            Gets the tax category by name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogTaxManager.GetTaxCategoryNameById(System.Int32)">
            <summary>
            Gets the tax category name by id.
            </summary>
            <returns>TaxCategory name. If tax category is not found, returns empty string.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogTaxManager.CreateTaxCategory(System.String,System.Boolean)">
            <summary>
            Creates tax category with the specified name.
            </summary>
            <param name="name"></param>
            <param name="updateExisting">If true and tax category with the specified name already exists, it will be updated. Otherwise, a new category will be created.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogTaxManager.SaveTaxCategory(Mediachase.Commerce.Catalog.Dto.CatalogTaxDto)">
            <summary>
            Saves changes in TaxCategory table.
            </summary>
            <param name="dataset">The dto.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.CurrencyManager">
            <summary>
            Implements operations for the currency manager.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CurrencyManager.GetCurrencyDto">
            <summary>
            Gets the currency dto.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CurrencyManager.GetCurrencyDto(Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the currency dto.
            </summary>
            <param name="readMode">The read mode.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CurrencyManager.GetCurrencyByCurrencyId(System.Int32)">
            <summary>
            Gets the currency dto by currencyId.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CurrencyManager.GetCurrencyByCurrencyId(System.Int32,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the currency dto by currencyId.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CurrencyManager.GetCurrencyByCurrency(Mediachase.Commerce.Currency)">
            <summary>
            Gets the currency dto by currencyCode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CurrencyManager.GetCurrencyByCurrency(Mediachase.Commerce.Currency,Mediachase.Data.Provider.ReadMode)">
            <summary>
            Gets the currency dto by currencyCode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CurrencyManager.SaveCurrency(Mediachase.Commerce.Catalog.Dto.CurrencyDto)">
            <summary>
            Saves the currency.
            </summary>
            <param name="dataset">The dto.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.DtoToObjectMapper">
            <summary>
            Provides mapping between stateless objects and DTO objects
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.DtoToObjectMapper.CreateSiteCatalog(Mediachase.Commerce.Catalog.Dto.CatalogDto.CatalogRow)">
            <summary>
            Creates the site catalog object from the DTO CatalogRow.
            </summary>
            <param name="input">The input.</param>
            <returns>SiteCatalog instance</returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.EntryRelationRowVersionInfo">
            <summary>
            Carries information about a version of a <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.CatalogEntryRelationRow"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.EntryRelationRowVersionInfo.Read(Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.CatalogEntryRelationRow,System.Data.DataRowVersion)">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.EntryRowVersionInfo">
            <summary>
            Carries information about a version of a <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryRow"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.EntryRowVersionInfo.Read(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryRow,System.Data.DataRowVersion)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.EntryRowVersionInfo.EvaluateHasAssociatedChange(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryRow)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.EntryRowVersionInfo.OnCommitNewRow(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryRow)">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.ItemSearchParameters">
            <summary>
            Implements operations for and represents item search parameters.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.ItemSearchParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Managers.ItemSearchParameters"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.ItemSearchParameters.CatalogId">
            <summary>
            Gets or sets the catalog id.
            </summary>
            <value>The catalog id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.ItemSearchParameters.ParentNodeId">
            <summary>
            Gets or sets the parent node id.
            </summary>
            <value>The parent node id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.ItemSearchParameters.MarketId">
            <summary>
            Gets or sets the parent node id.
            </summary>
            <value>The parent node id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.ItemSearchParameters.OrderByClause">
            <summary>
            Gets or sets the order by clause.
            </summary>
            <value>The order by clause.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.ItemSearchParameters.StartingRecord">
            <summary>
            Starting number of record to return. Should be pageSize*(pageNumber-1)+1.
            </summary>
            <value>The starting record.</value>
            <remarks>
            Records numbering starts with 1.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.ItemSearchParameters.RecordsToRetrieve">
            <summary>
            Number of records to be retrieved.
            </summary>
            <value>The records to retrieve.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.ItemSearchParameters.ReturnTotalCount">
            <summary>
            If true, total records count will be returned
            </summary>
            <value><c>true</c> if [return total count]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.ItemSearchParameters.ReturnInactive">
            <summary>
            If true, inactive nodes/entries will be returned.
            </summary>
            <value><c>true</c> if [return inactive]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.NodeEntryRelationRowVersionInfo">
            <summary>
            Carries information about a version of a <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.NodeEntryRelationRow"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.NodeEntryRelationRowVersionInfo.Read(Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.NodeEntryRelationRow,System.Data.DataRowVersion)">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.NodeRelationRowVersionInfo">
            <summary>
            Carries information about a version of a <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.CatalogNodeRelationRow"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.NodeRelationRowVersionInfo.Read(Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.CatalogNodeRelationRow,System.Data.DataRowVersion)">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.NodeRowVersionInfo">
            <summary>
            Carries information about a version of a <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogNodeRow"/>.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.NodeRowVersionInfo.ParentNodeId">
            <summary>
            Gets the parent node ID of the entity in the evaluated DataRow.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.NodeRowVersionInfo.Read(Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogNodeRow,System.Data.DataRowVersion)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.NodeRowVersionInfo.EvaluateHasAssociatedChange(Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogNodeRow)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.NodeRowVersionInfo.OnCommitNewRow(Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogNodeRow)">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.ObjectHelper">
            <summary>
            Implements helper methods for catalog managers.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.ObjectHelper.CreateUnitsAttribute(System.String,System.String)">
            <summary>
            Creates <see cref="T:Mediachase.Commerce.Catalog.Objects.NonNegativeIntegerWithUnits"/> element.
            </summary>
            <param name="units">Name field value for ArgumentsArgument.</param>
            <param name="val">Value field value for ArgumentsArgument.</param>
            <returns>Returns new <see cref="T:Mediachase.Commerce.Catalog.Objects.NonNegativeIntegerWithUnits"/> element.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.ObjectHelper.CreatePrice(Mediachase.Commerce.Money)">
            <summary>
            Creates the price.
            </summary>
            <param name="money">The amount.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.ObjectHelper.CreateAttribute(System.String,System.String,System.String,System.String[])">
            <summary>
            Creates <see cref="T:Mediachase.Commerce.Catalog.Objects.ItemAttribute"/> element.
            </summary>
            <param name="name">Name field value for ItemAttribute.</param>
            <param name="friendlyname">FriendlyName field value for ItemAttribute.</param>
            <param name="type">Type field value for ItemAttribute.</param>
            <param name="val">Value field value for ItemAttribute.</param>
            <returns>Returns new <see cref="T:Mediachase.Commerce.Catalog.Objects.ItemAttribute"/> element.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.ObjectHelper.CreateAttribute(System.String,System.String,System.Type,System.Object)">
            <summary>
            Creates the attribute.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyname">The friendlyname.</param>
            <param name="type">The type.</param>
            <param name="val">The val.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.ObjectHelper.CreateFile(System.String,System.String,System.String[])">
            <summary>
            Creates <see cref="T:Mediachase.Commerce.Catalog.Objects.ItemFile"/> element.
            </summary>
            <param name="name">Name field value for ItemFile.</param>
            <param name="type">Type field value for ItemFile.</param>
            <param name="val">Value field value for ItemFile.</param>
            <returns>Returns new <see cref="T:Mediachase.Commerce.Catalog.Objects.ItemFile"/> element.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.ObjectHelper.CreateImage(System.String,System.String)">
            <summary>
            Creates <see cref="T:Mediachase.Commerce.Catalog.Objects.Image"/> element.
            </summary>
            <param name="name">Name field value for Image.</param>
            <param name="url">URL field value for Image.</param>
            <returns>Returns new <see cref="T:Mediachase.Commerce.Catalog.Objects.Image"/> element.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.ObjectHelper.CreateAttributes(Mediachase.Commerce.Catalog.Objects.ItemAttributes,System.Data.DataRow)">
            <summary>
            Creates the attributes.
            </summary>
            <param name="metaAttributes">The meta attributes.</param>
            <param name="row">The row.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.ObjectHelper.GetMetaFieldValues(System.Data.DataRow)">
            <summary>
            Gets the meta field values.
            </summary>
            <param name="row">The row.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.ObjectHelper.GetMetaFieldValues(System.Data.DataRow,Mediachase.MetaDataPlus.Configurator.MetaClass,Mediachase.Commerce.Catalog.Objects.ItemAttributes@,Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Gets the meta field values.
            </summary>
            <param name="row">The row.</param>
            <param name="metaClass">The meta class.</param>
            <param name="metaAttributes">The meta attributes.</param>
            <param name="context">The meta data context to access the database with.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.ObjectHelper.GetMetaFieldValues(System.Data.DataRow,Mediachase.MetaDataPlus.Configurator.MetaClass,Mediachase.Commerce.Catalog.Objects.ItemAttributes@)">
            <summary>
            Gets the meta field values.
            </summary>
            <param name="row">The row.</param>
            <param name="metaClass">The meta class.</param>
            <param name="metaAttributes">The meta attributes.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.OnCommitUpdatedRowVersionInfo`1">
            <summary>
            Base class that extends <see cref="T:Mediachase.Commerce.Catalog.Managers.RowVersionInfo`1"/> with event listeners to refresh
            the ID when an added row is committed.
            </summary>
            <typeparam name="TRow">The type of the row.</typeparam>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.OnCommitUpdatedRowVersionInfo`1.OnCommitNewRow(`0)">
            <summary>
            Called for instances that were created using a row with status <see cref="F:System.Data.DataRowState.Added"/>,
            when the row's parent table has been committed.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.RelationRowVersionInfo`1">
            <summary>
            Base class that extends <see cref="T:Mediachase.Commerce.Catalog.Managers.RowVersionInfo`1"/> with properties
            common to items in rows of the tables of <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogRelationDto"/>.
            </summary>
            <typeparam name="TRow">The type of the DataRow.</typeparam>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.RelationRowVersionInfo`1.ChildId">
            <summary>
            Gets the ID of the child entity in the evaluated relation DataRow.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.RelationRowVersionInfo`1.CatalogId">
            <summary>
            Gets the Catalog ID of the entity in the evaluated DataRow.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup">
            <summary>
            Implements operations for the catalog response group.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup.ResponseGroup">
            <summary>
            Defines and specifies the catalog response group type.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup.ResponseGroup.Request">
            <summary>
            Represents the request response group.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup.ResponseGroup.CatalogInfo">
            <summary>
            Public string literal for the catalog info response group.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup.ResponseGroup.CatalogFull">
            <summary>
            Public string literal for the catalog full response group.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup.ResponseGroup.Children">
            <summary>
            Public string literal for the children response group.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup.CacheKey">
            <summary>
            Gets the cache key.
            </summary>
            <value>The cache key.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup.ContainsGroup(Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup.ResponseGroup)">
            <summary>
            Determines whether the specified group contains group.
            </summary>
            <param name="group">The group.</param>
            <returns>
            	<c>true</c> if the specified group contains group; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup.#ctor(Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup.ResponseGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup"/> class.
            </summary>
            <param name="responseGroups">The response groups.</param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.CatalogResponseGroup.ResponseGroups">
            <summary>
            Gets or sets the response groups.
            </summary>
            <value>The response groups.</value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup">
            <summary>
            Implements operations for the catalog node response group.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup.ResponseGroup">
            <summary>
            The ResponseGroup enumeration defines and specifies the catalog node response groups.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup.ResponseGroup.Request">
            <summary>
            Represents the request response group.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup.ResponseGroup.CatalogNodeInfo">
            <summary>
            Represents the catalog node info response group.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup.ResponseGroup.CatalogNodeFull">
            <summary>
            Represents the catalog node full response group.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup.ResponseGroup.Children">
            <summary>
            Represents the children response group.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup.ResponseGroup.Ancestor">
            <summary>
            Represents the ancestor response group.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup.ResponseGroup.Assets">
            <summary>
            Represents the assets response group.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup.CacheKey">
            <summary>
            Gets the cache key.
            </summary>
            <value>The cache key.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup.ContainsGroup(Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup.ResponseGroup)">
            <summary>
            Determines whether the specified group contains group.
            </summary>
            <param name="group">The group.</param>
            <returns>
            	<c>true</c> if the specified group contains group; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup.#ctor(Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup.ResponseGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup"/> class.
            </summary>
            <param name="responseGroups">The response groups.</param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.CatalogNodeResponseGroup.ResponseGroups">
            <summary>
            Gets or sets the response groups.
            </summary>
            <value>The response groups.</value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup">
            <summary>
            Implements operations for the catalog entry response group.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup">
            <summary>
            The ResponseGroup enumeration defines and specifies the catalog entry response group.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup.Request">
            <summary>
            Represents the request response group.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup.CatalogEntryInfo">
            <summary>
            Represents the catalog entry info response group.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup.CatalogEntryFull">
            <summary>
            Represents the catalog entry full response group.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup.Associations">
            <summary>
            Includes the immediate associations in the response.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup.Children">
            <summary>
            Represents the children response group.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup.Assets">
            <summary>
            Represents the assets response group.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup.Nodes">
            <summary>
            Represents the nodes response group.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup.Variations">
            <summary>
            Includes variations in the response.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup.Inventory">
            <summary>
            Includes inventory in the response.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup.RecursiveAssociations">
            <summary>
            Includes recursively loaded associations in the response.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.CacheKey">
            <summary>
            Gets the cache key.
            </summary>
            <value>The cache key.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ContainsGroup(Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup)">
            <summary>
            Determines whether the specified group contains group.
            </summary>
            <param name="group">The group.</param>
            <returns>
            	<c>true</c> if the specified group contains group; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.#ctor(Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup"/> class.
            </summary>
            <param name="responseGroups">The response groups.</param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup.ResponseGroups">
            <summary>
            Gets or sets the response groups.
            </summary>
            <value>The response groups.</value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.CatalogRelationResponseGroup">
            <summary>
            Implements operations for the catalog relation response group.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.CatalogRelationResponseGroup.ResponseGroup">
            <summary>
            The ResponseGroup enumeration defines and specifies the catalog relation response group.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogRelationResponseGroup.ResponseGroup.CatalogNode">
            <summary>
            Represents the catalog node response group.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogRelationResponseGroup.ResponseGroup.CatalogEntry">
            <summary>
            Represents the catalog entry response group.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Managers.CatalogRelationResponseGroup.ResponseGroup.NodeEntry">
            <summary>
            Represents the node entry response group.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.CatalogRelationResponseGroup.CacheKey">
            <summary>
            Gets the cache key.
            </summary>
            <value>The cache key.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogRelationResponseGroup.ContainsGroup(Mediachase.Commerce.Catalog.Managers.CatalogRelationResponseGroup.ResponseGroup)">
            <summary>
            Determines whether the specified group contains group.
            </summary>
            <param name="group">The group.</param>
            <returns>
            	<c>true</c> if the specified group contains group; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogRelationResponseGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Managers.CatalogRelationResponseGroup"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.CatalogRelationResponseGroup.#ctor(Mediachase.Commerce.Catalog.Managers.CatalogRelationResponseGroup.ResponseGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Managers.CatalogRelationResponseGroup"/> class.
            </summary>
            <param name="responseGroups">The response groups.</param>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.CatalogRelationResponseGroup.ResponseGroups">
            <summary>
            Gets or sets the response groups.
            </summary>
            <value>The response groups.</value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.RowInfo`2">
            <summary>
            Class for carrying extracted information about the state of a DataRow,
            intended for the typed DataRows in DTOs used by <see cref="T:Mediachase.Commerce.Catalog.ICatalogSystem"/>
            </summary>
            <typeparam name="TInfo">The <see cref="T:Mediachase.Commerce.Catalog.Managers.RowVersionInfo`1"/> implementation used to carry version information.</typeparam>
            <typeparam name="TRow">The type of the DataRow.</typeparam>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.RowInfo`2.HasAssociatedChange">
            <summary>
            Gets a value indicating whether the evaluated DataRow, or an associated row, has a change.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.RowInfo`2.State">
            <summary>
            Gets the state of the evaluated DataRow.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.RowInfo`2.Current">
            <summary>
            Gets the <see cref="T:Mediachase.Commerce.Catalog.Managers.RowVersionInfo`1"/> describing the current version of the row.
            </summary>
            <remarks>If <see cref="P:Mediachase.Commerce.Catalog.Managers.RowInfo`2.State"/> is <see cref="F:System.Data.DataRowState.Deleted"/> this will be equal to <see cref="P:Mediachase.Commerce.Catalog.Managers.RowInfo`2.Original"/> because there is no current version.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.RowInfo`2.Original">
            <summary>
            Gets the <see cref="T:Mediachase.Commerce.Catalog.Managers.RowVersionInfo`1"/> describing the original version of the row.
            </summary>
            <remarks>If <see cref="P:Mediachase.Commerce.Catalog.Managers.RowInfo`2.State"/> is <see cref="F:System.Data.DataRowState.Added"/> this will be equal to <see cref="P:Mediachase.Commerce.Catalog.Managers.RowInfo`2.Current"/> because there is no original version.</remarks>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.RowInfo`2.#ctor(`1)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Managers.RowInfo`2"/> class.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.RowInfo`2.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.RowInfo`2.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.RowInfoCollection`2">
            <summary>
            Disposable collection of row info instances.
            </summary>
            <typeparam name="TInfo">The type of row info.</typeparam>
            <typeparam name="TRow">The type of data row.</typeparam>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.RowInfoCollection`2.CreateFrom(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Creates a collection of row info instances from the input data rows.
            </summary>
            <param name="rows">The data rows.</param>
            <returns>A collection of row info instances created from the input data rows.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.RowInfoExtensions">
            <summary>
            Extension methods for instances or collections of <see cref="T:Mediachase.Commerce.Catalog.Managers.RowInfo`2"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.RowInfoExtensions.IdsWithChanges``2(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Managers.RowInfo{``0,``1}})">
            <summary>
            Gets the ID property of all <see cref="T:Mediachase.Commerce.Catalog.Managers.RowInfo`2"/> where the HasAssociatedChange property is true.
            </summary>
            <typeparam name="TInfo">The type of <see cref="T:Mediachase.Commerce.Catalog.Managers.RowInfo`2"/> implementation.</typeparam>
            <typeparam name="TRow">The type of the DataRow.</typeparam>
            <param name="rowInfos">The row info items.</param>
            <returns>The matching ids.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.RowInfoExtensions.GetAdded``2(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Managers.RowInfo{``0,``1}})">
            <summary>
            Gets the items where State is <see cref="F:System.Data.DataRowState.Added"/>.
            </summary>
            <typeparam name="TInfo">The type of <see cref="T:Mediachase.Commerce.Catalog.Managers.RowInfo`2"/> implementation.</typeparam>
            <typeparam name="TRow">The type of the DataRow.</typeparam>
            <param name="rowInfos">The row info items.</param>
            <returns>The matching row info items.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.RowInfoExtensions.GetDeleted``2(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Managers.RowInfo{``0,``1}})">
            <summary>
            Gets the items where State is <see cref="F:System.Data.DataRowState.Deleted"/>.
            </summary>
            <typeparam name="TInfo">The type of <see cref="T:Mediachase.Commerce.Catalog.Managers.RowInfo`2"/> implementation.</typeparam>
            <typeparam name="TRow">The type of the DataRow.</typeparam>
            <param name="rowInfos">The row info items.</param>
            <returns>The matching row info items.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.RowInfoExtensions.GetModified``2(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Managers.RowInfo{``0,``1}})">
            <summary>
            Gets the items where State is <see cref="F:System.Data.DataRowState.Modified"/>.
            </summary>
            <typeparam name="TInfo">The type of <see cref="T:Mediachase.Commerce.Catalog.Managers.RowInfo`2"/> implementation.</typeparam>
            <typeparam name="TRow">The type of the DataRow.</typeparam>
            <param name="rowInfos">The row info items.</param>
            <returns>The matching row info items.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.RowInfoExtensions.ToChanges(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Managers.RowInfo{Mediachase.Commerce.Catalog.Managers.EntryRowVersionInfo,Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryRow}})">
            <summary>
            Converts entry row info items to <see cref="T:Mediachase.Commerce.Catalog.Events.EntryChange"/> items.
            </summary>
            <param name="rowInfos">The row info items</param>
            <returns><see cref="T:Mediachase.Commerce.Catalog.Events.EntryChange"/> instances corresponding to the row info items.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.RowInfoExtensions.ToChanges(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Managers.RowInfo{Mediachase.Commerce.Catalog.Managers.NodeRowVersionInfo,Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogNodeRow}})">
            <summary>
            Converts node row info items to <see cref="T:Mediachase.Commerce.Catalog.Events.NodeChange"/> items.
            </summary>
            <param name="rowInfos">The row info items</param>
            <returns><see cref="T:Mediachase.Commerce.Catalog.Events.NodeChange"/> instances corresponding to the row info items.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.RowInfoExtensions.ToChanges(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Managers.RowInfo{Mediachase.Commerce.Catalog.Managers.CatalogRowVersionInfo,Mediachase.Commerce.Catalog.Dto.CatalogDto.CatalogRow}})">
            <summary>
            Converts catalog row info items to <see cref="T:Mediachase.Commerce.Catalog.Events.CatalogChange"/> items.
            </summary>
            <param name="rowInfos">The row info items</param>
            <returns><see cref="T:Mediachase.Commerce.Catalog.Events.CatalogChange"/> instances corresponding to the row info items.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.RowInfoExtensions.ToChanges(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Managers.RowInfo{Mediachase.Commerce.Catalog.Managers.NodeRelationRowVersionInfo,Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.CatalogNodeRelationRow}})">
            <summary>
            Converts node relation row info items to <see cref="T:Mediachase.Commerce.Catalog.Events.NodeRelationChange"/> items.
            </summary>
            <param name="rowInfos">The row info items</param>
            <returns><see cref="T:Mediachase.Commerce.Catalog.Events.NodeRelationChange"/> instances corresponding to the row info items.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.RowInfoExtensions.ToChanges(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Managers.RowInfo{Mediachase.Commerce.Catalog.Managers.NodeEntryRelationRowVersionInfo,Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.NodeEntryRelationRow}})">
            <summary>
            Converts node entry relation row info items to <see cref="T:Mediachase.Commerce.Catalog.Events.NodeRelationChange"/> items.
            </summary>
            <param name="rowInfos">The row info items</param>
            <returns><see cref="T:Mediachase.Commerce.Catalog.Events.NodeRelationChange"/> instances corresponding to the row info items.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.RowInfoExtensions.ToChanges(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Managers.RowInfo{Mediachase.Commerce.Catalog.Managers.EntryRelationRowVersionInfo,Mediachase.Commerce.Catalog.Dto.CatalogRelationDto.CatalogEntryRelationRow}})">
            <summary>
            Converts entry relation row info items to <see cref="T:Mediachase.Commerce.Catalog.Events.EntryRelationChange"/> items.
            </summary>
            <param name="rowInfos">The row info items</param>
            <returns><see cref="T:Mediachase.Commerce.Catalog.Events.EntryRelationChange"/> instances corresponding to the row info items.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.RowInfoExtensions.ToChanges(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.Managers.RowInfo{Mediachase.Commerce.Catalog.Managers.AssociationRowVersionInfo,Mediachase.Commerce.Catalog.Dto.CatalogAssociationDto.CatalogAssociationRow}})">
            <summary>
            Converts association row info items to <see cref="T:Mediachase.Commerce.Catalog.Events.AssociationChange"/> items.
            </summary>
            <param name="rowInfos">The row info items</param>
            <returns><see cref="T:Mediachase.Commerce.Catalog.Events.AssociationChange"/> instances corresponding to the row info items.</returns>
            <remarks>Multiple instances may be yielded for each input, if there are multiple associated items.</remarks>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Managers.RowVersionInfo`1">
            <summary>
            Base class for carrying extracted information about a version of a DataRow,
            intended for the typed DataRows in DTOs used by <see cref="T:Mediachase.Commerce.Catalog.ICatalogSystem"/>
            </summary>
            <typeparam name="TRow">The type of the DataRow.</typeparam>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.RowVersionInfo`1.State">
            <summary>
            Gets the state of the evaluated DataRow.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.RowVersionInfo`1.HasAssociatedChange">
            <summary>
            Gets a value indicating whether the evaluated DataRow, or an associated row, has a change.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Managers.RowVersionInfo`1.Id">
            <summary>
            Gets the ID of the entity in the evaluated DataRow.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.RowVersionInfo`1.Read(`0,System.Data.DataRowVersion)">
            <summary>
            Reads the specified row.
            </summary>
            <param name="row">The row.</param>
            <param name="dataVersion">The data version.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Managers.RowVersionInfo`1.EvaluateHasAssociatedChange(`0)">
            <summary>
            Evaluates if the row iteself or one of its associated rows has a change.
            </summary>
            <param name="row">The row.</param>
            <returns>
            <c>true</c> if the row or one of its associated rows has a change; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.NodeIdentityResolver">
            <summary>
            Class to resolve catalog node code-id map.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.NodeIdentityResolver.#ctor(EPiServer.Framework.Cache.ISynchronizedObjectInstanceCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.NodeIdentityResolver"/> class.
            </summary>
            <param name="cache">The cache.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.NodeIdentityResolver.#ctor(EPiServer.Framework.Cache.ISynchronizedObjectInstanceCache,Mediachase.Commerce.Catalog.CatalogOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.NodeIdentityResolver"/> class.
            </summary>
            <param name="cache">The cache.</param>
            <param name="catalogOptions">The catalog options.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.NodeIdentityResolver.GetIds(System.Collections.Generic.IEnumerable{System.String})">
            <inheridoc/>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.NodeIdentityResolver.GetCodes(System.Collections.Generic.IEnumerable{System.Int32})">
            <inheridoc/>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.NodeIdentityResolver.CachePrefix">
            <inheridoc/>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Objects.RelationInfo">
            <summary>
            Contains relation information about the entry that is a related entry.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.RelationInfo.SortOrder">
            <summary>
            Gets or sets the sort order.
            </summary>
            <value>The sort order.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.RelationInfo.Quantity">
            <summary>
            Gets or sets the quantity.
            </summary>
            <value>The quantity.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.RelationInfo.RelationType">
            <summary>
            Gets or sets the type of the relation.
            </summary>
            <value>The type of the relation.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.RelationInfo.GroupName">
            <summary>
            Gets or sets the name of the group.
            </summary>
            <value>The name of the group.</value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Objects.EntryRelationType">
            <summary>
            Represents the catalog entry relation types.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Objects.EntryRelationType.ProductVariation">
            <summary>
            Public string literal for the product variation relation type.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Objects.EntryRelationType.PackageEntry">
            <summary>
            Public string literal for the package entry relation type.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Objects.EntryRelationType.BundleEntry">
            <summary>
            Public string literal for the bundle entry relation type.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Objects.EntryType">
            <summary>
            Represents the catalog entry types.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Objects.EntryType.Product">
            <summary>
            Public string literal for the product entry type.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Objects.EntryType.Variation">
            <summary>
            Public string literal for the variation entry type.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Objects.EntryType.Package">
            <summary>
            Public string literal for the package entry type.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Objects.EntryType.Bundle">
            <summary>
            Public string literal for the bundle entry type.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Objects.EntryType.DynamicPackage">
            <summary>
            Public string literal for the dynamic package entry type.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Objects.FindItemsDtoResults">
            <summary>
            Contains a <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto"/> returned by CatalogEntryManager.FindItemsDto(CatalogSearch, ref int, CatalogEntryResponseGroup)"/> 
            and its additional result set information.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.FindItemsDtoResults.TotalRecordsCount">
            <summary>
            Gets or sets the total number of matches in the database for the combined criteria sent to FindItemsDto.  
            This may exceed the actual number of records in the DTO due to paging settings in the CatalogSearch options sent to FindItemsDto.
            </summary>
            <value>The total results matching the Find request criteria.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.FindItemsDtoResults.ResultDto">
            <summary>
            Gets or sets the DTO of the actual results returned by FindItemsDto.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Objects.Image">
            <summary>
            Contains information about an image.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.Image.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.Image.Url">
            <summary>
            Gets or sets the URL.
            </summary>
            <value>The URL.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.Image.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.Image.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.Image.ThumbnailUrl">
            <summary>
            Gets or sets the thumbnail URL.
            </summary>
            <value>The thumbnail URL.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.Image.ThumbnailHeight">
            <summary>
            Gets or sets the height of the thumbnail.
            </summary>
            <value>The height of the thumbnail.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.Image.ThumbnailWidth">
            <summary>
            Gets or sets the width of the thumbnail.
            </summary>
            <value>The width of the thumbnail.</value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Objects.Images">
            <summary>
            Contains collection of images.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.Images.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.Images.Item(System.String)">
            <summary>
            Gets the <see cref="T:Mediachase.Commerce.Catalog.Objects.Image"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Objects.ItemAsset">
            <summary>
            External Asset
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemAsset.AssetKey">
            <summary>
            Gets or sets the asset key.
            </summary>
            <value>The asset key.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemAsset.AssetType">
            <summary>
            Gets or sets the type of the asset.
            </summary>
            <value>The type of the asset.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemAsset.GroupName">
            <summary>
            Gets or sets the name of the group.
            </summary>
            <value>The name of the group.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemAsset.SortOrder">
            <summary>
            Gets or sets the sort order.
            </summary>
            <value>The sort order.</value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Objects.ItemAttribute">
            <summary>
            Contains information about item's attribute.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemAttribute.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemAttribute.FriendlyName">
            <summary>
            Gets or sets the name of the friendly.
            </summary>
            <value>The name of the friendly.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemAttribute.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemAttribute.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Objects.ItemAttribute.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Objects.ItemAttributes">
            <summary>
            Contains collection of item attributes with their weights and images.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemAttributes.Attribute">
            <summary>
            Gets or sets the attribute.
            </summary>
            <value>The attribute.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemAttributes.Images">
            <summary>
            Gets or sets the images.
            </summary>
            <value>The images.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemAttributes.Files">
            <summary>
            Gets or sets the files.
            </summary>
            <value>The files.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemAttributes.Weight">
            <summary>
            Gets or sets the weight.
            </summary>
            <value>The weight.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemAttributes.Item(System.String)">
            <summary>
            Gets the <see cref="T:Mediachase.Commerce.Catalog.Objects.ItemAttribute"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemAttributes.MinQuantity">
            <summary>
            Gets or sets the min quantity.
            </summary>
            <value>The min quantity.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemAttributes.MaxQuantity">
            <summary>
            Gets or sets the max quantity.
            </summary>
            <value>The max quantity.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemAttributes.CreatedDate">
            <summary>
            Gets or sets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemAttributes.CreatedBy">
            <summary>
            Gets or sets the created by.
            </summary>
            <value>The created by.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemAttributes.ModifiedBy">
            <summary>
            Gets or sets the modified by.
            </summary>
            <value>The modified by.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemAttributes.ModifiedDate">
            <summary>
            Gets or sets the modified date.
            </summary>
            <value>The modified date.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemAttributes.TaxCategory">
            <summary>
            Gets or sets the tax category.
            </summary>
            <value>
            The tax category.
            </value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Objects.ItemFile">
            <summary>
            Contains information about file item.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemFile.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemFile.FriendlyName">
            <summary>
            Gets or sets the name of the friendly.
            </summary>
            <value>The name of the friendly.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemFile.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemFile.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemFile.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemFile.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemFile.FileContents">
            <summary>
            Gets or sets the file contents.
            </summary>
            <value>The file contents.</value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Objects.ItemFiles">
            <summary>
            Contains collection of item file.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemFiles.File">
            <summary>
            Gets or sets the file.
            </summary>
            <value>The file.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.ItemFiles.Item(System.String)">
            <summary>
            Gets the <see cref="T:Mediachase.Commerce.Catalog.Objects.ItemFile"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Objects.ItemType">
            <summary>
            The ItemType enumeration defines the catalog object item types.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Objects.ItemType.Product">
            <summary>
            Represents the product type.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Objects.ItemType.Variation">
            <summary>
            Represents the variation type.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Objects.ItemType.Package">
            <summary>
            Represents the package type.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Objects.ItemType.Bundle">
            <summary>
            Represents the bundle type.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Objects.ItemType.DynamicPackage">
            <summary>
            Represents the dynamic package type.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Objects.ItemType.Custom1">
            <summary>
            Represents the user-defined type Custom1.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Objects.ItemType.Custom2">
            <summary>
            Represents the user-defined type Custom2.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.Objects.ItemType.Custom3">
            <summary>
            Represents the user-defined type Custom3.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Objects.NonNegativeIntegerWithUnits">
            <summary>
            Represents non-negative integer with units of measurement.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.NonNegativeIntegerWithUnits.Units">
            <summary>
            Gets or sets the units.
            </summary>
            <value>The units.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.NonNegativeIntegerWithUnits.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Objects.Price">
            <summary>
            Represents the catalog object price.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.Price.Money">
            <summary>
            The price's Money representation.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.PriceValues.PriceValue">
            <summary>
            The collection of price values.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Objects.Seo">
            <summary>
            Implements operations for and represents the catalog object Seo.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.Seo.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.Seo.Uri">
            <summary>
            Gets or sets the URI.
            </summary>
            <value>The URI.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.Seo.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.Seo.Keywords">
            <summary>
            Gets or sets the keywords.
            </summary>
            <value>The keywords.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.Seo.LanguageCode">
            <summary>
            Gets or sets the language code.
            </summary>
            <value>The language code.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.Seo.UriSegment">
            <summary>
            Gets or sets the URI segment.
            </summary>
            <value>
            The URI segment.
            </value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Objects.SiteCatalog">
            <summary>
            Represents the site catalog.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.SiteCatalog.CatalogId">
            <summary>
            Represents the catalog ID.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.SiteCatalog.Name">
            <summary>
            Represents the catalog name.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Objects.SiteCatalogs">
            <summary>
            Represents the site catalogs.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Objects.SiteCatalogs.Catalog">
            <summary>
            Represents the collection of <see cref="T:Mediachase.Commerce.Catalog.Objects.SiteCatalog"/> objects.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ReferenceConverter">
            <summary>
            Converts between catalog object ID:s and types and <see cref="T:EPiServer.Core.ContentReference" />s.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.ReferenceConverter.InformationBitCount">
            <summary>
            ID of IContent is a 32 bits int. 
            We use 30 bits to store commerce object ID (CatalogId, CatalogNodeId, CatalogEntryId).
            Two most significant bits are used for determine commerce object type (Catalog, CatalogNode or CatalogEntry)
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.ReferenceConverter.RootId">
            <summary>
            The ID of the virtual root content node.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Catalog.ReferenceConverter.CatalogProviderKey">
            <summary>
            Default key of the CatalogContentProvider, used in the automatic registration of the
            content provider and in in creating <see cref="T:EPiServer.Core.ContentReference"/>s to catalog content in it.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ReferenceConverter.#ctor(Mediachase.Commerce.Catalog.EntryIdentityResolver,Mediachase.Commerce.Catalog.NodeIdentityResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.ReferenceConverter"/> class.
            </summary>
            <param name="entryIdentityResolver">The Entry identity resolver.</param>
            <param name="nodeIdentityResolver">The Node identity resolver.</param>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ReferenceConverter.GetRootLink">
            <summary>
            Returns the <see cref="T:EPiServer.Core.ContentReference"/> to the root content of the CatalogContentProvider.
            </summary>
            <returns>The root link.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ReferenceConverter.GetContentLink(System.Int32,Mediachase.Commerce.Catalog.CatalogContentType,System.Int32)">
            <summary>
            Gets a <see cref="T:EPiServer.Core.ContentReference"/> instance with the specified commerce object ID and type
            encoded in the content ID.
            </summary>
            <param name="objectId">The ID of the commerce object.</param>
            <param name="contentType">Type of the commerce object.</param>
            <param name="versionId">The version ID to set in the <see cref="T:EPiServer.Core.ContentReference"/> instance.</param>
            <returns>The content link.</returns>
            <remarks>The content ID will contain the content type information in two most significant bits.</remarks>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ReferenceConverter.GetObjectId(EPiServer.Core.ContentReference)">
            <summary>
            Gets the actual id of commerce object.
            </summary>
            <param name="contentLink">The content link.</param>
            <returns>The ID of the commerce object.</returns>
            <remarks>Clears the two most significant bits (for CatalogContentType) of the content ID.</remarks>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Catalog/Provider/ReferenceConverterSample.cs" region="ReferenceConverterSample" lang="cs" />
            </example>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ReferenceConverter.GetContentType(EPiServer.Core.ContentReference)">
            <summary>
            Gets the type of the commerce object. Parse the content ID to take two most significant bits to
            determine CatalogContentType.
            </summary>
            <param name="contentLink">The content link.</param>
            <returns>The type of commerce object.</returns>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Catalog/Provider/ReferenceConverterSample.cs" region="ReferenceConverterSample" lang="cs" />
            </example>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ReferenceConverter.GetContentLink(System.String)">
            <summary>
            Gets a <see cref="T:EPiServer.Core.ContentReference"/> for the entry or node with the specified code.
            </summary>
            <param name="code">The code.</param>
            <returns>The content link.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ReferenceConverter.GetCodes(System.Collections.Generic.IEnumerable{EPiServer.Core.ContentReference},Mediachase.Commerce.Catalog.CatalogContentType)">
            <summary>
            Gets list of code for the entries or nodes with the specified list of <see cref="T:EPiServer.Core.ContentReference"/>.
            </summary>
            <param name="contentLinks">The content links.</param>
            <param name="catalogContentType">The catalog content type.</param>
            <returns>The dictionary maps between the <see cref="T:EPiServer.Core.ContentReference"/>(s) and the codes.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ReferenceConverter.GetContentLink(System.String,Mediachase.Commerce.Catalog.CatalogContentType)">
            <summary>
            Gets a <see cref="T:EPiServer.Core.ContentReference"/> for the content with the specified code
            and type.
            </summary>
            <param name="code">The code.</param>
            <param name="type">The type of content (entry or node) which has the code.</param>
            <returns>The content link.</returns>
            <exception cref="T:System.ArgumentException">Thrown if a type other than entry or node is specified.</exception>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ReferenceConverter.GetContentLinks(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets list of <see cref="T:EPiServer.Core.ContentReference"/> for the contents with the specified codes
            </summary>
            <param name="codes">The list of catalog content code.</param>        
            <returns>The list of content link.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ReferenceConverter.GetContentLinks(System.Collections.Generic.IEnumerable{System.String},Mediachase.Commerce.Catalog.CatalogContentType)">
            <summary>
            Gets list of <see cref="T:EPiServer.Core.ContentReference"/> for the contents with the specified codes
            and type.
            </summary>
            <param name="codes">The list of catalog content code.</param>        
            <param name="type">The type of content (entry or node) which has the code.</param>
            <returns>The list of content link.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ReferenceConverter.GetCode(EPiServer.Core.ContentReference)">
            <summary>
            Gets the code for an entry/node <see cref="T:EPiServer.Core.ContentReference"/>.
            </summary>
            <param name="contentLink">The content link.</param>
            <returns>The code, or null if the <paramref name="contentLink"/> does not reference an existing entry/node.</returns>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="contentLink"/> is for an object other than than an entry or a node.</exception>
            <remarks>
            Codes used on specific versions of content are not taken into account,
            i.e. only the code which the node/entry was last published (or created) with will be a match.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ReferenceConverter.GetCodes(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Gets the entry codes from the content guids
            </summary>
            <param name="contentGuids">The content guids.</param>
            <returns>The entry codes, or empty list.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Search.CatalogSearch">
            <summary>
            Implements operations for and represents the catalog search.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Search.CatalogSearch.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Search.CatalogSearch"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Search.CatalogSearch.SearchEntries(System.Guid)">
            <summary>
            Searches the entries.
            </summary>
            <param name="searchGuid">The search GUID.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Search.CatalogSearch.SearchNodes(System.Guid)">
            <summary>
            Searches the nodes.
            </summary>
            <param name="searchGuid">The search GUID.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Search.CatalogSearch.SearchOptions">
            <summary>
            Gets or sets the search options.
            </summary>
            <value>The search options.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Search.CatalogSearch.SearchParameters">
            <summary>
            Gets or sets the search parameters.
            </summary>
            <value>The search parameters.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Search.CatalogSearch.CacheKey">
            <summary>
            Gets the cache key.
            </summary>
            <value>The cache key.</value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Search.CatalogSearchOptions">
            <summary>
            Implements operations for the catalog search options. (Inherits <see cref="T:Mediachase.Commerce.Shared.SearchOptions"/>.)
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Search.CatalogSearchOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Search.CatalogSearchOptions"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Search.CatalogSearchOptions.#ctor(Mediachase.Commerce.Catalog.Search.CatalogSearchOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Search.CatalogSearchOptions"/> class.
            </summary>
            <param name="searchOptions">The search options.</param>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.Search.CatalogSearchParameters">
            <summary>
            Implements operations for and represents the catalog search paramters. (Inherits <see cref="T:Mediachase.Commerce.Shared.SearchParameters"/>.)
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.Search.CatalogSearchParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.Search.CatalogSearchParameters"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Search.CatalogSearchParameters.CatalogNames">
            <summary>
            Gets the catalog names.
            </summary>
            <remarks>
            CatalogNames cannot be set directly.  This search filter is set by accessing the property and 
            using the <see cref="T:System.Collections.Specialized.StringCollection"/> class members to edit the included catalog names.
            </remarks>
            <value>The catalog names.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Search.CatalogSearchParameters.CatalogNodes">
            <summary>
            Gets the catalog nodes.
            </summary>
            <remarks>
            CatalogNodes cannot be set directly.  This search filter is set by accessing the property and 
            using the <see cref="T:System.Collections.Specialized.StringCollection"/> class members to edit the included catalog nodes.
            </remarks>
            <value>The catalog nodes.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Search.CatalogSearchParameters.Markets">
            <summary>
            Gets or sets the set of Markets on which to filter searches.
            </summary>
            <value>The set of valid Markets.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Search.CatalogSearchParameters.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>The language.</value>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.Search.CatalogSearchParameters.CacheKey">
            <summary>
            Gets the cache key. Used to generate hash that will be used to store data in memory if needed.
            </summary>
            <value>The cache key.</value>
        </member>
        <member name="T:Mediachase.Commerce.Catalog.StartPublishField">
            <summary>
            Represents the Meta field to determine if the content is start in a language.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.StartPublishField.UseStandardEditControl">
            <inheridoc />
        </member>
        <member name="M:Mediachase.Commerce.Catalog.StartPublishField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.StartPublishField"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.StartPublishField.GetMetaField(Mediachase.MetaDataPlus.MetaDataContext)">
            <inheridoc />
        </member>
        <member name="T:Mediachase.Commerce.Catalog.StopPublishField">
            <summary>
            Represents the Meta field to determine if the content is expired in a language.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Catalog.StopPublishField.UseStandardEditControl">
            <inheridoc />
        </member>
        <member name="M:Mediachase.Commerce.Catalog.StopPublishField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Catalog.StopPublishField"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.StopPublishField.GetMetaField(Mediachase.MetaDataPlus.MetaDataContext)">
            <inheridoc />
        </member>
        <member name="T:Mediachase.Commerce.Catalog.ReferenceConverterExtensions">
            <summary>
            Extensions for <see cref="T:Mediachase.Commerce.Catalog.ReferenceConverter"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ReferenceConverterExtensions.GetEntryContentLink(Mediachase.Commerce.Catalog.ReferenceConverter,System.Int32)">
            <summary>
            Get the <see cref="T:EPiServer.Core.ContentReference"/> of an entry by specified entry id.
            </summary>
            <param name="referenceConverter">The reference converter.</param>
            <param name="objectId">The id of the entry object.</param>
            <returns>The content link.</returns>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Catalog/Provider/ReferenceConverterSample.cs" region="ReferenceConverterSample" lang="cs" />
            </example>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ReferenceConverterExtensions.GetEntryContentLink(Mediachase.Commerce.Catalog.ReferenceConverter,System.Int32,System.Int32)">
            <summary>
            Get the <see cref="T:EPiServer.Core.ContentReference"/> of an entry by specified entry id and version id.
            </summary>
            <param name="referenceConverter">The reference converter.</param>
            <param name="objectId">The id of the entry object.</param>
            <param name="versionId">The version ID to set in the <see cref="T:EPiServer.Core.ContentReference"/> instance.</param>
            <returns>The content link.</returns>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Catalog/Provider/ReferenceConverterSample.cs" region="ReferenceConverterSample" lang="cs" />
            </example>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ReferenceConverterExtensions.GetNodeContentLink(Mediachase.Commerce.Catalog.ReferenceConverter,System.Int32)">
            <summary>
            Get the <see cref="T:EPiServer.Core.ContentReference"/> of a node by specified node id.
            </summary>
            <param name="referenceConverter">The reference converter.</param>
            <param name="objectId">The id of the node object.</param>
            <returns>The content link.</returns>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Catalog/Provider/ReferenceConverterSample.cs" region="ReferenceConverterSample" lang="cs" />
            </example>
        </member>
        <member name="M:Mediachase.Commerce.Catalog.ReferenceConverterExtensions.GetNodeContentLink(Mediachase.Commerce.Catalog.ReferenceConverter,System.Int32,System.Int32)">
            <summary>
            Get the <see cref="T:EPiServer.Core.ContentReference"/> of node by specified node id and version id.
            </summary>
            <param name="referenceConverter">The reference converter.</param>
            <param name="objectId">The id of the node object.</param>
            <param name="versionId">The version ID to set in the <see cref="T:EPiServer.Core.ContentReference"/> instance.</param>
            <returns>The content link.</returns>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Catalog/Provider/ReferenceConverterSample.cs" region="ReferenceConverterSample" lang="cs" />
            </example>
        </member>
        <member name="T:Mediachase.Commerce.ClassInfo">
            <summary>
            Implements operations for and represents commerce class information.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.ClassInfo.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Mediachase.Commerce.ClassInfo.DefaultConstructor">
            <summary>
            Gets the default constructor.
            </summary>
            <value>The default constructor.</value>
        </member>
        <member name="M:Mediachase.Commerce.ClassInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.ClassInfo"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mediachase.Commerce.ClassInfo.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.ClassInfo"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mediachase.Commerce.ClassInfo.CreateInstance">
            <summary>
            Creates the instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.ClassInfo.GetActivator(System.Reflection.ConstructorInfo)">
            <summary>
            Creates a complied lamba expression to speed up creating new objects from constructor.
            </summary>
            <param name="ctor"></param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.CommerceContext.CommerceContextImpl">
            <summary>
            The default implementation for <see cref="T:Mediachase.Commerce.ICommerceContext"/>
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.CommerceContext.CommerceContextImpl.#ctor(Mediachase.Data.Provider.IConnectionStringHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.CommerceContext.CommerceContextImpl"/> class.
            </summary>
            <param name="connectionHandler">The connection handler.</param>
        </member>
        <member name="T:Mediachase.Commerce.Core.AppContext">
            <summary>
            Implements methods for the application context.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.AppContext.ApplicationName">
            <summary>
            Gets the application name.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.AppContext.AzureCompatible">
            <summary>
            Gets the flag to indicate whether this Commerce application is azure compatible or not.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.AppContext.GetAzureCompatible">
            <summary>
            Returns the flag to indicate whether this Commerce application is azure compatible or not.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.AppContext.GetProductName">
            <summary>
            Returns product name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.AppContext.GetProductVersion">
            <summary>
            Returns product version.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Core.CleanupBridgeElementPlugin">
            <summary>
            Represents cleanup bridge element plugin.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.CleanupBridgeElementPlugin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Core.CleanupBridgeElementPlugin"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.CleanupBridgeElementPlugin.Mediachase#BusinessFoundation#Data#Business#IPlugin#Execute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Mediachase.Commerce.Core.Common.Pair`2">
            <summary>
            A generic pair class.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="P:Mediachase.Commerce.Core.Common.Pair`2.Key">
            <summary>
            The key.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.Common.Pair`2.Value">
            <summary>
            The value.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Common.Pair`2.#ctor(Mediachase.Commerce.Core.Common.Pair{`0,`1})">
            <summary>
            Constructor
            </summary>
            <param name="pair"></param>
        </member>
        <member name="M:Mediachase.Commerce.Core.Common.Pair`2.#ctor(`0,`1)">
            <summary>
            Constructor
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.Commerce.Core.Common.Pair`2.Equals(Mediachase.Commerce.Core.Common.Pair{`0,`1})">
            <summary>
            Indicates whether the current object is equal to 
            another object of the same type.
            </summary>
            <param name="pair">The pair to compare.</param>
            <returns>True if the key and value identities are the same.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.Common.Pair`2.HasSameKey(Mediachase.Commerce.Core.Common.Pair{`0,`1})">
            <summary>
            Indicates whether the current object share its
            key with another object of the same type.
            </summary>
            <param name="pair">The pair with the key to compare.</param>
            <returns>True if the key identities are the same.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.Common.Pair`2.HasSameValue(Mediachase.Commerce.Core.Common.Pair{`0,`1})">
            <summary>
            Indicates whether the current object share its
            value with another object of the same type.
            </summary>
            <param name="pair">The pair with the value to compare.</param>
            <returns>True if the value identities are the same.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.Common.Pair`2.ToString">
            <summary>
            Converts the key of the current pair to its 
            equivalent <see cref="T:System.String"/> representation.
            </summary>
            <returns>A String representation.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Core.CoreConfiguration">
            <summary>
            Implemented as a thread-safe singleton class
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.CoreConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Core.CoreConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.CoreConfiguration.Instance">
            <summary>
            Singleton instance
            </summary>
            <value>The instance.</value>
        </member>
        <member name="P:Mediachase.Commerce.Core.CoreConfiguration.DefaultApplicationName">
            <summary>
            Root configuration attribute which defines default value used for application name
            </summary>
            <value>The default name of the application.</value>
        </member>
        <member name="P:Mediachase.Commerce.Core.CoreConfiguration.Connection">
            <summary>
            Configuration element which contains database connection string name
            </summary>
            <value>The connection.</value>
        </member>
        <member name="P:Mediachase.Commerce.Core.CoreConfiguration.CacheConfig">
            <summary>
            Configuration element which contains cache enable settings.
            </summary>
            <value>The cache config.</value>
        </member>
        <member name="M:Mediachase.Commerce.Core.CoreConfiguration.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Mediachase.Commerce.Core.CoreConfiguration.Roles">
            <summary>
            Configuration element defines the mapping of mapped types to type names specified
            in configuration file
            </summary>
            <value>The mapped types.</value>
        </member>
        <member name="M:Mediachase.Commerce.Core.CoreConfiguration.GetRole(System.String)">
            <summary>
            Returns class names mapped to the event key (name)
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Core.CoreConfiguration.Languages">
            <summary>
            Gets the languages.
            </summary>
            <value>The languages.</value>
        </member>
        <member name="P:Mediachase.Commerce.Core.CoreConfiguration.Features">
            <summary>
            Gets the features.
            </summary>
            <value>
            The features.
            </value>
        </member>
        <member name="M:Mediachase.Commerce.Core.CoreConfiguration.GetLanguage(System.String)">
            <summary>
            Gets the language.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.CoreConfiguration.GetFeature(System.String)">
            <summary>
            Gets the feature.
            </summary>
            <param name="feature">The feature.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Core.CoreConnection">
            <summary>
            Configuration element containing the connection string name for the application.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.CoreConnection.ConnectionStringName">
            <summary>
            Retrieves logical name of connection string in CommerceFramework Application hierarchy
            </summary>
            <value>The connection string name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Core.CoreConnection.AppDatabase">
            <summary>
            Uses ConnectionStringName property to retrieve connection string from
            ConnectionStrings portion of app/web.config file
            </summary>
            <value>The app database.</value>
        </member>
        <member name="T:Mediachase.Commerce.Core.CacheConfiguration">
            <summary>
            Configuration element used to define cache properties.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.CacheConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Core.CacheConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.CacheConfiguration.IsEnabled">
            <summary>
            Attribute determines whether in-memory caching is enabled or not.
            </summary>
            <value>
            	<c>true</c> if this instance is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Core.CacheConfiguration.AppCollectionTimeout">
            <summary>
            Gets or sets the app collection timeout.
            </summary>
            <value>The app collection timeout.</value>
        </member>
        <member name="T:Mediachase.Commerce.Core.RoleCollection">
            <summary>
            Collection of RoleDefinition objects
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.RoleCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Mediachase.Commerce.Security.Configuration.RoleDefinitionElement"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.Commerce.Core.RoleCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.RoleCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Core.RoleDefinition">
            <summary>
            Definition of single role element in web.config file
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.RoleDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Core.RoleDefinition"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.RoleDefinition.Name">
            <summary>
            Gets the system name (the predefined key for the role type).
            </summary>
            <value>The system name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Core.RoleDefinition.Value">
            <summary>
            Gets the configured role name.
            </summary>
            <value>The configured role name.</value>
        </member>
        <member name="T:Mediachase.Commerce.Core.AppRoles">
            <summary>
            Represents the application roles.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.AppRoles.AdminRole">
            <summary>
            Public string literal for the admininstrators role.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.AppRoles.ManagerUserRole">
            <summary>
            Public string literal for the management users role.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.AppRoles.EveryoneRole">
            <summary>
            Public string literal for the role for everyone.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.AppRoles.RegisteredRole">
            <summary>
            Public string literal for the registered users role.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.LanguageCollection">
            <summary>
            Collection of LanguageDefinition objects
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.LanguageCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Mediachase.Commerce.Core.LanguageDefinition"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.Commerce.Core.LanguageCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.LanguageCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"/> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"/> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Core.LanguageDefinition">
            <summary>
            Definition of single language element in an ecf.app.config file
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.LanguageDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Core.LanguageDefinition"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.LanguageDefinition.Key">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Core.LanguageDefinition.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Mediachase.Commerce.Core.FeaturesCollection">
            <summary>
            Collection of feature definitions
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.FeaturesCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Mediachase.Commerce.Core.LanguageDefinition"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.Commerce.Core.FeaturesCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.FeaturesCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"/> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"/> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Core.FeaturesDefinition">
            <summary>
            Represents a feature and whether or not it is active or not
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.FeaturesDefinition.Feature">
            <summary>
            Gets the feature.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Core.FeaturesDefinition.State">
            <summary>
            Gets the state.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Mediachase.Commerce.Core.FeaturesDefinition.Type">
            <summary>
            Gets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="T:Mediachase.Commerce.Core.CorePermissions">
            <summary>
            Permissions for Core subsytem
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.CorePermissions.Search">
            <summary>
            Gets the search permission.
            </summary>
            <value>
            The core search PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Core.CorePermissions.Licensing">
            <summary>
            Gets the licensing permission.
            </summary>
            <value>
            The core licensing PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Core.CorePermissions.BusinessFoundation">
            <summary>
            Gets the business foundation permission.
            </summary>
            <value>
            The core business foundation PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Core.CorePermissions.Settings">
            <summary>
            Gets the settings permission.
            </summary>
            <value>
            The core settings PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Core.CorePermissions.SyslogView">
            <summary>
            Gets the syslog view permission.
            </summary>
            <value>
            The core system logg view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Core.CorePermissions.SyslogDelete">
            <summary>
            Gets the syslog permission.
            </summary>
            <value>
            The core system log PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Core.CorePermissions.ApplogView">
            <summary>
            Gets the applog view permission.
            </summary>
            <value>
            The core application log view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Core.CorePermissions.ApplogDelete">
            <summary>
            Gets the applog delete permission.
            </summary>
            <value>
            The core application log delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Core.CorePermissions.Login">
            <summary>
            Gets the login permission.
            </summary>
            <value>
            The core login PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Core.CorePermissions.LeftMenu">
            <summary>
            Gets the left menu permission.
            </summary>
            <value>
            The left menu PermissionType.
            </value>
        </member>
        <member name="T:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource">
            <summary>
            Represent application log source to data-bound controls.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.Options">
            <summary>
            Gets or sets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.DataMode">
            <summary>
            Gets or sets the data mode.
            </summary>
            <value>The data mode.</value>
        </member>
        <member name="M:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.GetView(System.String)">
            <summary>
            Gets the named data source view associated with the data source control.
            </summary>
            <param name="viewName">The name of the view to retrieve.</param>
            <returns>
            Returns the named <see cref="T:System.Web.UI.DataSourceView"/> associated with the <see cref="T:System.Web.UI.IDataSource"/>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.GetViewNames">
            <summary>
            Gets a collection of names representing the list of view objects associated with the <see cref="T:System.Web.UI.IDataSource"/> interface.
            </summary>
            <returns>
            An <see cref="T:System.Collections.ICollection"/> that contains the names of the views associated with the <see cref="T:System.Web.UI.IDataSource"/>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.ApplicationLogDataMode">
            <summary>
            Defines the application log data mode.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.ApplicationLogDataMode.SystemLog">
            <summary>
            Represents the System log mode
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.ApplicationLogDataMode.ApplicationLog">
            <summary>
            Represents the Application log mode
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.ApplicationLogDataSourceView">
            <summary>
            Represents the catalog search data source view.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.ApplicationLogDataSourceView.DefaultViewName">
            <summary>
            Represents the default catalog search view name
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.ApplicationLogDataSourceView.#ctor(System.Web.UI.IDataSource,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.ApplicationLogDataSourceView"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="name">The name.</param>
        </member>
        <member name="P:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.ApplicationLogDataSourceView.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.ApplicationLogDataSourceView.Options">
            <summary>
            Gets or sets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.ApplicationLogDataSourceView.DataMode">
            <summary>
            Gets or sets the data mode.
            </summary>
            <value>The data mode.</value>
        </member>
        <member name="M:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.ApplicationLogDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
            <summary>
            Gets a list of data from the underlying data storage.
            </summary>
            <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments"/> that is used to request operations on the data beyond basic data retrieval.</param>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> list of data from the underlying data storage.
            </returns>
        </member>
        <member name="P:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.ApplicationLogDataSourceView.CanRetrieveTotalRowCount">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports retrieving the total number of data rows, instead of the data.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.ApplicationLogDataSourceView.CanPage">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports paging through the data retrieved by the <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)"/> method.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.ApplicationLogDataSourceView.CanDelete">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)"/> operation.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.ApplicationLogDataSourceView.CanInsert">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)"/> operation.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Core.DataSources.ApplicationLogDataSource.ApplicationLogDataSourceView.CanUpdate">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)"/> operation.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The default implementation returns false.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Core.Data.AppAdmin">
            <summary>
            Implements the methods for and represents the application administrator.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Data.AppAdmin.LoadApplicationDto(System.String,System.Nullable{System.Boolean})">
            <summary>
            Loads applications matching all of the specified parameters.
            </summary>
            <param name="applicationName">If not null, only applications matching this name will be returned; if null, no effect.</param>
            <param name="isActive">If not null, only applications whose active state matches the value will be returned; if null, no effect.</param>
        </member>
        <member name="T:Mediachase.Commerce.Core.Data.CommonSettingsAdmin">
            <summary>
            Implements the methods for and represents the settings administrator.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.Data.CommonSettingsAdmin.CurrentDto">
            <summary>
            Gets the current dto.
            </summary>
            <value>The current dto.</value>
        </member>
        <member name="M:Mediachase.Commerce.Core.Data.CommonSettingsAdmin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Core.Data.CommonSettingsAdmin"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Data.CommonSettingsAdmin.#ctor(Mediachase.Commerce.Core.Dto.SettingsDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Core.Data.CommonSettingsAdmin"/> class.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Core.Data.CommonSettingsAdmin.Load">
            <summary>
            Loads the settings.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Data.CommonSettingsAdmin.LoadBySettingId(System.Int32)">
            <summary>
            Loads by the setting id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Core.Data.CommonSettingsAdmin.LoadBySettingName(System.String)">
            <summary>
            Loads by the application name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.Commerce.Core.Data.CommonSettingsAdmin.Save">
            <summary>
            Updates the CommonSettings.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.Data.CoreDataHelper">
            <summary>
            Implements core data helper method.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Data.CoreDataHelper.CreateDataCommand">
            <summary>
            Creates the data command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Core.Data.LogAdmin">
            <summary>
            Implements administrative functions for the log
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.Data.LogAdmin.CurrentDto">
            <summary>
            Gets the current dto.
            </summary>
            <value>The current dto.</value>
        </member>
        <member name="M:Mediachase.Commerce.Core.Data.LogAdmin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Core.Data.LogAdmin"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Data.LogAdmin.#ctor(Mediachase.Commerce.Core.Dto.LogDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Core.Data.LogAdmin"/> class.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Core.Data.LogAdmin.Load(System.Boolean,System.String,System.String,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Loads the specified operation.
            </summary>
            <param name="isSystemLog">if set to <c>true</c> [is system log].</param>
            <param name="source">Is system log.</param>
            <param name="operation">The operation.</param>
            <param name="objectType">Type of the object.</param>
            <param name="created">The created.</param>
            <param name="startingRecord">The starting record.</param>
            <param name="numberOfRecords">The number of records.</param>
            <param name="totalRecords">The total records.</param>
        </member>
        <member name="M:Mediachase.Commerce.Core.Data.LogAdmin.Load(System.Int32)">
            <summary>
            Load the log by id.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Data.LogAdmin.Save">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.DefaultSiteContext">
            <summary>
            Implementation of SiteContext that depends on current market for currency settings.
            </summary>
            <remarks>
            This is the default SiteContext implementation that will be used unless the container is re-configured.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.Core.DefaultSiteContext.AppPath">
            <summary>
            Gets or sets the application path.
            </summary>
            <value>
            The application path.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Core.DefaultSiteContext.Currency">
            <summary>
            Gets or sets the currency.
            </summary>
            <value>
            The currency.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Core.DefaultSiteContext.LanguageName">
            <summary>
            Gets or sets the language name.
            </summary>
            <value>
            The language name.
            </value>
        </member>
        <member name="T:Mediachase.Commerce.Core.Dto.AppDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.Dto.AppDto.ApplicationDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.Dto.AppDto.ApplicationRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.Dto.AppDto.ApplicationRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.Dto.LogDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.Dto.LogDto.ApplicationLogDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.Dto.LogDto.ApplicationLogRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.Dto.LogDto.ApplicationLogRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.Dto.SettingsDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.Dto.SettingsDto.CommonSettingsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.Dto.SettingsDto.CommonSettingsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.Dto.SettingsDto.CommonSettingsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.Features.DefaultFeatureSwitch">
            <summary>
            Used for handling beta features.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Features.DefaultFeatureSwitch.#ctor(Mediachase.Commerce.Core.Features.FeatureFactory)">
            <summary>
            Creates an instance of the <see cref="T:Mediachase.Commerce.Core.Features.DefaultFeatureSwitch"/>
            </summary>
            <param name="featureFactory">The feature factory.</param>
        </member>
        <member name="P:Mediachase.Commerce.Core.Features.DefaultFeatureSwitch.Features">
            <summary>
            The features.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Features.DefaultFeatureSwitch.InitializeFeatures">
            <summary>
            Initializes the features.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Features.DefaultFeatureSwitch.EnableFeature(System.String)">
            <summary>
            Enables the feature.
            </summary>
            <param name="feature">The feature name.</param>
        </member>
        <member name="M:Mediachase.Commerce.Core.Features.DefaultFeatureSwitch.DisableFeature(System.String)">
            <summary>
            Disables the feature.
            </summary>
            <param name="feature">The feature name.</param>
        </member>
        <member name="M:Mediachase.Commerce.Core.Features.DefaultFeatureSwitch.GetFeatureState(System.String)">
            <summary>
            Gets the state of the feature.
            </summary>
            <param name="feature">The feature name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.Features.DefaultFeatureSwitch.AddFeature(Mediachase.Commerce.Core.Features.IFeature)">
            <summary>
            Adds the feature.
            </summary>
            <param name="feature">The feature name.</param>
        </member>
        <member name="T:Mediachase.Commerce.Core.Features.FeatureState">
            <summary>
            Whether a feature state is enabled or disabled
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Core.Features.FeatureState.Enabled">
            <summary>
            Enabled by default
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Core.Features.FeatureState.Disabled">
            <summary>
            Feature disabled
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.Features.IFeature">
            <summary>
            Represents a beta feature that can be enabled or disabled.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.Features.IFeature.Name">
            <summary>
            The name of the feature
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.Features.IFeature.State">
            <summary>
            The state.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Features.IFeature.EnableFeature">
            <summary>
            Enables the feature.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Features.IFeature.DisableFeature">
            <summary>
            Disables the feature.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.Features.IFeatureSwitch">
            <summary>
            Used for handling beta features.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.Features.IFeatureSwitch.Features">
            <summary>
            Features that can be enabled or disabled.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Features.IFeatureSwitch.InitializeFeatures">
            <summary>
            Initializes the features in the <see cref="P:Mediachase.Commerce.Core.Features.IFeatureSwitch.Features"/> collection.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Features.IFeatureSwitch.EnableFeature(System.String)">
            <summary>
            Enables a specific feature
            </summary>
            <param name="feature">The <see cref="P:Mediachase.Commerce.Core.Features.IFeature.Name"/> of the feature</param>
        </member>
        <member name="M:Mediachase.Commerce.Core.Features.IFeatureSwitch.DisableFeature(System.String)">
            <summary>
            Disables a specific feature
            </summary>
            <param name="feature">The <see cref="P:Mediachase.Commerce.Core.Features.IFeature.Name"/> of the feature</param>
        </member>
        <member name="M:Mediachase.Commerce.Core.Features.IFeatureSwitch.GetFeatureState(System.String)">
            <summary>
            Gets the state for the feature
            </summary>
            <param name="feature">The <see cref="P:Mediachase.Commerce.Core.Features.IFeature.Name"/> of the feature</param>
            <returns>The state.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.Features.IFeatureSwitch.AddFeature(Mediachase.Commerce.Core.Features.IFeature)">
            <summary>
            Adds a feature to the <see cref="P:Mediachase.Commerce.Core.Features.IFeatureSwitch.Features"/> collection.
            </summary>
            <param name="feature">The feature to add</param>
        </member>
        <member name="T:Mediachase.Commerce.Core.Features.SerializedCarts">
            <summary>
            Feature allows working on the serializable cart system.
            This feature is used to replace the legacy cart system.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Core.Features.SerializedCarts.FeatureSerializedCarts">
            <summary>
            The feature new cart system.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.Features.SerializedCarts.Name">
            <summary>
            Gets the name of the feature.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.Features.SerializedCarts.State">
            <summary>
            Gets or sets the state of the feature.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Features.SerializedCarts.EnableFeature">
            <summary>
            Enables the feature.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Features.SerializedCarts.DisableFeature">
            <summary>
            Disables the feature.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.Features.WorkflowsVNext">
            <summary>
            Feature allows the vnext version of workflows to be run
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Core.Features.WorkflowsVNext.FeatureWorkflowsVNext">
            <summary>
            The feature workflows v next
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.Features.WorkflowsVNext.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Core.Features.WorkflowsVNext.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="M:Mediachase.Commerce.Core.Features.WorkflowsVNext.EnableFeature">
            <summary>
            Enables the feature.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Features.WorkflowsVNext.DisableFeature">
            <summary>
            Disables the feature.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.InMemoryFilterElementEvaluator">
            <summary>
            Represents in memory filter element evaluator.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.InMemoryFilterElementEvaluator.Eval(Mediachase.BusinessFoundation.Data.Business.EntityObject,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Evals the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="elements">The elements.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.InMemoryFilterElementEvaluator.Eval(Mediachase.BusinessFoundation.Data.Business.EntityObject,Mediachase.BusinessFoundation.Data.FilterElement)">
            <summary>
            Evals the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.InMemoryFilterElementEvaluator.Compare(System.Object,System.Object)">
            <summary>
            Compares the specified x and y. Value Less than zero X instance is less than Y. (X &lt; Y)
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>	A 32-bit signed integer that indicates the relative order of the objects
            being compared. The return value has these meanings: 
            Value Meaning Less than zero X instance is less than Y. (X &lt; Y)
            Zero X is equal to Y. (X == Y)
            Greater than zero X is greater than Y. (X &gt; Y) </returns> 
        </member>
        <member name="M:Mediachase.Commerce.Core.InMemoryFilterElementEvaluator.GetPropertyValue(Mediachase.BusinessFoundation.Data.Business.EntityObject,System.String)">
            <summary>
            Gets the property value.
            </summary>
            <param name="obj">The obj.</param>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Core.LocalDiskEntityObjectPlugin">
            <summary>
            Represents local disk entity object plugin.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.LocalDiskEntityObjectPlugin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Core.LocalDiskEntityObjectPlugin"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.LocalDiskEntityObjectPlugin.LoadEntityObjects(System.String)">
            <summary>
            Loads the entity objects.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.LocalDiskEntityObjectPlugin.LoadEntityObjects(System.String,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Loads the entity objects from disk.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.LocalDiskEntityObjectPlugin.LoadEntityObject(System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Loads the entity object from disk.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.LocalDiskEntityObjectPlugin.Execute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Mediachase.Commerce.Core.Log.ApplicationLog">
            <summary>
            Implements operations for the profile search.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.Log.ApplicationLog.LogOptions">
            <summary>
            Gets or sets the search options.
            </summary>
            <value>The search options.</value>
        </member>
        <member name="P:Mediachase.Commerce.Core.Log.ApplicationLog.LogParameters">
            <summary>
            Gets or sets the search parameters.
            </summary>
            <value>The search parameters.</value>
        </member>
        <member name="T:Mediachase.Commerce.Core.Log.ApplicationLogOptions">
            <summary>
            Implements operations for the profile search options. (Inherits <see cref="T:Mediachase.Commerce.Shared.SearchOptions"/>.)
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Log.ApplicationLogOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Core.Log.ApplicationLogOptions"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Log.ApplicationLogOptions.#ctor(Mediachase.Commerce.Core.Log.ApplicationLogOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Core.Log.ApplicationLogOptions"/> class.
            </summary>
            <param name="searchOptions">The search options.</param>
        </member>
        <member name="T:Mediachase.Commerce.Core.Log.ApplicationLogParameters">
            <summary>
            Represents the profile search parameters. (Inherits <see cref="T:Mediachase.Commerce.Shared.SearchParameters"/>.)
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Log.ApplicationLogParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Core.Log.ApplicationLogParameters"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Core.Log.ApplicationLogParameters.SourceKey">
            <summary>
            Gets or sets the source key.
            </summary>
            <value>The source key.</value>
        </member>
        <member name="P:Mediachase.Commerce.Core.Log.ApplicationLogParameters.Operation">
            <summary>
            Gets or sets the operation.
            </summary>
            <value>The operation.</value>
        </member>
        <member name="P:Mediachase.Commerce.Core.Log.ApplicationLogParameters.ObjectType">
            <summary>
            Gets or sets the object type.
            </summary>
            <value>Type of the object.</value>
        </member>
        <member name="P:Mediachase.Commerce.Core.Log.ApplicationLogParameters.Created">
            <summary>
            Gets or sets the date created.
            </summary>
            <value>The date created.</value>
        </member>
        <member name="P:Mediachase.Commerce.Core.Log.ApplicationLogParameters.CacheKey">
            <summary>
            Gets the cache key. Used to generate hash that will be used to store data in memory if needed.
            </summary>
            <value>The cache key.</value>
        </member>
        <member name="T:Mediachase.Commerce.Core.Managers.AppManager">
            <summary>
            Implements operations for the application manager.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Managers.AppManager.GetApplicationDto">
            <summary>
            Gets an application DTO with all rows.
            </summary>
            <returns>An application DTO with all rows.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.Managers.AppManager.GetApplicationDto(System.String)">
            <summary>
            Gets an application DTO filtered by name.
            </summary>
            <param name="name">The name.</param>
            <returns>An application DTO with all rows matching <paramref name="name"/>.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.Managers.AppManager.SaveApplication(Mediachase.Commerce.Core.Dto.AppDto)">
            <summary>
            Saves the application.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="T:Mediachase.Commerce.Core.Managers.CommonSettingsManager">
            <summary>
            Implements operations for the settings manager.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Core.Managers.CommonSettingsManager.SettingsNames">
            <summary>
            Represents Settings Names
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Core.Managers.CommonSettingsManager.SettingsNames.DefaultLanguage">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Core.Managers.CommonSettingsManager.SettingsNames.DefaultCurrency">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Core.Managers.CommonSettingsManager.SettingsNames.DefaultWeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Core.Managers.CommonSettingsManager.SettingsNames.DefaultLength">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Core.Managers.CommonSettingsManager.SettingsNames.DefaultCustomer">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Core.Managers.CommonSettingsManager.SettingsNames.DefaultCatalog">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Managers.CommonSettingsManager.GetSettingsDto">
            <summary>
            Gets the settings dto.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.Managers.CommonSettingsManager.GetSettingById(System.Int32)">
            <summary>
            Gets the setting by id.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.Managers.CommonSettingsManager.GetSettingByName(Mediachase.Commerce.Core.Managers.CommonSettingsManager.SettingsNames)">
            <summary>
            Gets the setting by name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.Managers.CommonSettingsManager.GetDefaultLanguage">
            <summary>
            Gets the default language.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.Managers.CommonSettingsManager.GetDefaultCurrency">
            <summary>
            Gets the default currency.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.Managers.CommonSettingsManager.GetDefaultWeight">
            <summary>
            Gets the default weight.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.Managers.CommonSettingsManager.GetDefaultLength">
            <summary>
            Gets the default length.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.Managers.CommonSettingsManager.SaveSettings(Mediachase.Commerce.Core.Dto.SettingsDto)">
            <summary>
            Saves the settings.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="T:Mediachase.Commerce.Core.Managers.LogManager">
            <summary>
            Represents log manager.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Managers.LogManager.GetSystemLog(System.String,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets the system log.
            </summary>
            <param name="operation">The operation.</param>
            <param name="objectType">Type of the object.</param>
            <param name="created">The created.</param>
            <param name="startingRecord">The starting record.</param>
            <param name="numberOfRecords">The number of records.</param>
            <param name="totalRecords">The total records.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.Managers.LogManager.GetAppLog(System.String,System.String,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets the application log.
            </summary>
            <param name="source">The source.</param>
            <param name="operation">The operation.</param>
            <param name="objectType">Type of the object.</param>
            <param name="created">The created.</param>
            <param name="startingRecord">The starting record.</param>
            <param name="numberOfRecords">The number of records.</param>
            <param name="totalRecords">The total records.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.Managers.LogManager.GetAppLog(System.Int32)">
            <summary>
            Gets the log by id.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.Managers.LogManager.WriteLog(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Writes the log.
            </summary>
            <param name="operation">The operation.</param>
            <param name="key">The key.</param>
            <param name="type">The type.</param>
            <param name="source">The source.</param>
            <param name="notes">The notes.</param>
            <param name="succeeded">if set to <c>true</c> [succeeded].</param>
        </member>
        <member name="M:Mediachase.Commerce.Core.Managers.LogManager.WriteLog(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Writes the log, truncates the strings to the maximum allowed length.
            </summary>
            <param name="operation">The operation.</param>
            <param name="userName">Name of the user.</param>
            <param name="key">The key.</param>
            <param name="type">The type.</param>
            <param name="source">The source.</param>
            <param name="notes">The notes.</param>
            <param name="succeeded">if set to <c>true</c> [succeeded].</param>
        </member>
        <member name="M:Mediachase.Commerce.Core.Managers.LogManager.GetIPAddress">
            <summary>
            Gets the IP address.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.Managers.LogManager.GetUsername">
            <summary>
            Gets the username.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.Managers.LogManager.SaveAppLog(Mediachase.Commerce.Core.Dto.LogDto)">
            <summary>
            Saves the log.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="T:Mediachase.Commerce.Core.Modules.BusinessFoundationInitializeModule">
            <summary>
            Represents business foundation initialize module.
            
            You will need to configure this module in the web.config file of your
            web and register it with IIS before being able to use it. For more information
            see the following link: http://go.microsoft.com/?linkid=8101007
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Modules.BusinessFoundationInitializeModule.Dispose">
            <summary>
            Disposes of the resources (other than memory) used by the module that implements <see cref="T:System.Web.IHttpModule"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.Modules.BusinessFoundationInitializeModule.Init(System.Web.HttpApplication)">
            <summary>
            Initializes a module and prepares it to handle requests.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpApplication"/> that provides access to the methods, properties, and events common to all application objects within an ASP.NET application</param>
        </member>
        <member name="T:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceCleanupPlugin">
            <summary>
            Represents recent reference cleanup plugin.
            </summary>
            <remarks>
            Connects to all meta class and delete method, pre delete in transaction
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceCleanupPlugin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceCleanupPlugin"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceCleanupPlugin.Mediachase#BusinessFoundation#Data#Business#IPlugin#Execute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceDetectPlugin">
            <summary>
            Represents recent reference plugin.
            </summary>
            <remarks>
            Connects to all meta class and create, update methods, pre method in transaction
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceDetectPlugin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceDetectPlugin"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceDetectPlugin.SaveSelectedReference(System.String,System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Saves the selected reference.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="referenceName">Name of the reference.</param>
            <param name="referenceValue">The reference value.</param>
        </member>
        <member name="M:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceDetectPlugin.SaveSelectedReference(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Saves the selected reference.
            </summary>
            <param name="reference">The reference.</param>
            <param name="referenceValue">The reference value.</param>
        </member>
        <member name="M:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceDetectPlugin.GetOriginalReferenceValue(Mediachase.BusinessFoundation.Data.Business.BusinessContext,System.String)">
            <summary>
            Gets the original reference value.
            </summary>
            <param name="context">The context.</param>
            <param name="referenceFieldName">Name of the reference field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceDetectPlugin.LoadOrCreateUserRecentReference(System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyId,System.Object)">
            <summary>
            Loads the or create user recent reference.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceManager">
            <summary>
            Represents recent reference manager.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceManager.CreateModuleManifest">
            <summary>
            Creates the module manifest.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceManager.CreateObjectFilter(Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Creates the object filter.
            </summary>
            <param name="pk">The pk.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceManager.CreateObjectFilter(System.Object)">
            <summary>
            Creates the object filter.
            </summary>
            <param name="pk">The pk.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceManager.CreateUserFilter(System.Object)">
            <summary>
            Creates the user filter.
            </summary>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceManager.CreateCurrentUserFilter">
            <summary>
            Creates the current user filter.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceModuleConfigurator">
            <summary>
            Represents recent reference module configurator.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceModuleConfigurator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceModuleConfigurator"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Core.RecentReferenceHistory.RecentReferenceModuleConfigurator.Mediachase#BusinessFoundation#Data#Modules#IModuleConfigurator#Install(Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection)">
            <summary>
            Installs this instance.
            </summary>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="T:Mediachase.Commerce.Core.SiteContext">
            <summary>
            Supports backwards compatibility for removed Mediachase.Commerce.Website.SiteContext.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Currency">
            <summary>
            Currency is an immutable struct type that encapsulates a type of currency.
            </summary>
            <remarks>
            The currency code may be no longer than 8 characters, and may not contain any digits.
            </remarks>    
        </member>
        <member name="F:Mediachase.Commerce.Currency.FallbackFormatCode">
            <summary>
            If we have a currency that does not have a matching Format, use the format associated with this currency code.
            </summary>
            <remarks>
            Formatting information can be added and modified by calling SetFormat(string currencyCode, NumberFormatInfo format).
            </remarks>
        </member>
        <member name="F:Mediachase.Commerce.Currency.MaxCurrencyCodeLength">
            <summary>
            Max length of the currency code when you create a new currency struct.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Currency.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Currency"/> struct.
            </summary>
            <param name="currencyCode">The currency code.</param>
        </member>
        <member name="M:Mediachase.Commerce.Currency.#ctor(System.String,System.Globalization.NumberFormatInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Currency" /> struct.
            </summary>
            <param name="currencyCode">The currency code.</param>
            <param name="format">The NumberFormatInfo instance that describes how to format this currency.</param>
            <exception cref="T:System.ArgumentNullException">currencyCode</exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="P:Mediachase.Commerce.Currency.CurrencyCode">
            <summary>
            Gets the currency code.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Currency.Format">
            <summary>
            Gets the currency format.
            </summary>
            <remarks>
            Used to get a NumberFormatInfo for formatting currency values.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.Currency.LowestDenomination">
            <summary>
            Gets the lowest denomination for the currency.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Currency.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value>
              <c>true</c> if this instance is empty; otherwise, <c>false</c>.
            </value>
            <remarks>
            If we initialize a Currency with an empty string (or it gets created by default constructor) this
            property will return true, indicating that we do not have a proper CurrencyCode set.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Currency.SetFormat(System.String,System.Globalization.NumberFormatInfo)">
            <summary>
            Sets a currency format.
            </summary>
            <param name="currencyCode">The currency code.</param>
            <param name="format">The format to use for this currency.</param>
            <remarks>
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Currency.CompareTo(Mediachase.Commerce.Currency)">
            <summary>
            Compares currency instances for ordering purposes.
            </summary>
            <param name="other">The other currency to compare against.</param>
            <returns>
            A value that indicates the relative order of the objects being compared.
                The return value has the following meanings: Value Meaning Less than zero
                This object is less than the other parameter.Zero This object is equal to
                other. Greater than zero This object is greater than other.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Currency.System#IComparable#CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj"/>. Zero This instance is equal to <paramref name="obj"/>. Greater than zero This instance is greater than <paramref name="obj"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
              <paramref name="obj"/> is not the same type as this instance. </exception>
        </member>
        <member name="M:Mediachase.Commerce.Currency.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Currency.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Currency.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Currency.Round(System.Decimal)">
            <summary>
            Rounds a decimal value, following a specific currency's format.
            </summary>
            <param name="amount">A decimal number to be rounded.</param>
            <returns>
            Rounded amount following the standard currency decimal digits format.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Currency.Round(System.Decimal,System.Int32)">
            <summary>
            Rounds a decimal value to a specified number of fractional digits.
            </summary>
            <param name="amount">A decimal number to be rounded.</param>
            <param name="decimalDigits">The number of decimal places to use in return value.</param>
            <returns>The rounded amount base on decimal digits to be used.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Currency.Percentage(System.Decimal,System.Double)">
            <summary>
            Get percentage of amount, following its currency's format.
            </summary>
            <param name="amount">A decimal number to be percentage.</param>
            <param name="percentage">The percentage number.</param>
            <returns>
            The rounded amount after calculate percentage following currency's format.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Currency.Percentage(System.Decimal,System.Decimal)">
            <summary>
            Get percentage of amount, following its currency's format.
            </summary>
            <param name="amount">A decimal number to be percentage.</param>
            <param name="percentage">The percentage number.</param>
            <returns>
            The rounded amount after calculate percentage following currency's format.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Common.IFactoryMethod`1">
            <summary>
            interface IFactoryMethod&lt;T&gt;
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Common.IFactoryMethod`1.Create(System.Object)">
            <summary>
            Creates the specified obj.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Common.IAbstractFactory">
            <summary>
            interface IAbstractFactory
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Common.IAbstractFactory.Create``1(System.Object)">
            <summary>
            Creates the specified obj.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Common.IAbstractFactory.IsProduct``1">
            <summary>
            Determines whether this instance is product.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>
            	<c>true</c> if this instance is product; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Common.AbstractFactory">
            <summary>
            AbstractFactory
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Common.AbstractFactory.Create``1(System.Object)">
            <summary>
            Creates the specified obj.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Common.AbstractFactory.IsProduct``1">
            <summary>
            Determines whether this instance is product.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>
            	<c>true</c> if this instance is product; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Configuration.CustomerCacheElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customers.Configuration.CustomerCacheElement"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Configuration.CustomerCacheElement.IsEnabled">
            <summary>
            Attribute determines whether in-memory caching is enabled or not.
            </summary>
            <value>
            	<c>true</c> if this instance is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Configuration.CustomerCacheElement.ContactCollectionTimeout">
            <summary>
            Gets or sets the contact collection timeout.
            </summary>
            <value>The contact collection timeout.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Configuration.CustomerCacheElement.ContactTimeout">
            <summary>
            Gets or sets the contact timeout.
            </summary>
            <value>The contact timeout.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Configuration.CustomerCacheElement.AddressCollectionTimeout">
            <summary>
            Gets or sets the address collection timeout.
            </summary>
            <value>The address collection timeout.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Configuration.CustomerCacheElement.AddressTimeout">
            <summary>
            Gets or sets the address timeout.
            </summary>
            <value>The address timeout.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Configuration.CustomerCacheElement.CreditCardCollectionTimeout">
            <summary>
            Gets or sets the credit card collection timeout.
            </summary>
            <value>The credit card collection timeout.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Configuration.CustomerCacheElement.CreditCardTimeout">
            <summary>
            Gets or sets the credit card timeout.
            </summary>
            <value>The credit card timeout.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Configuration.CustomerCacheElement.OrganizationCollectionTimeout">
            <summary>
            Gets or sets the organization collection timeout.
            </summary>
            <value>The organization collection timeout.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Configuration.CustomerCacheElement.OrganizationTimeout">
            <summary>
            Gets or sets the organization timeout.
            </summary>
            <value>The organization timeout.</value>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Configuration.CustomerCacheElement.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Configuration.CustomerConfiguration">
            <summary>
            Customer Configuration
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Configuration.CustomerConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customers.Configuration.CustomerConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Configuration.CustomerConfiguration.Instance">
            <summary>
            Singleton instance
            </summary>
            <value>The instance.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Configuration.CustomerConfiguration.Connection">
            <summary>
            Gets the connection.
            </summary>
            <value>The connection.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Configuration.CustomerConfiguration.Roles">
            <summary>
            Configuration element defines the mapping of mapped types to type names specified
            in configuration file
            </summary>
            <value>The mapped types.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Configuration.CustomerConfiguration.AutoInstall">
            <summary>
            Gets a value indicating whether to automatically install metadata definitions for entities related to customers/contacts.
            </summary>
            <value><c>true</c> if automatic install should happen; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Configuration.CustomerConfiguration.DemoInstall">
            <summary>
            Gets a value indicating whether to automatically install sample customers in the system.
            </summary>
            <value><c>true</c> if customers should be created; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Configuration.CustomerConfiguration.Cache">
            <summary>
            Config settings which define where caching is enabled and timeouts related to it.
            </summary>
            <value>The cache.</value>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Configuration.CustomerConfiguration.GetRole(System.String)">
            <summary>
            Returns class names mapped to the event key (name)
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Configuration.CustomerConnectionElement">
            <summary>
            Implements operations for and represents the customer connection. (Inherits <see cref="T:System.Configuration.ConfigurationElement"/>.)
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Configuration.CustomerConnectionElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customers.Configuration.CustomerConnectionElement"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Configuration.CustomerConnectionElement.ConnectionStringName">
            <summary>
            Retrieves logical name of connection string in CommerceFramework Application hierarchy
            </summary>
            <value>The connection string name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Configuration.CustomerConnectionElement.MainDatabase">
            <summary>
            Gets the customer database.
            </summary>
            <value>The customer database.</value>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Configuration.CustomerConnectionElement.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Customers.ConvertBinaryUserKey">
            <summary>
            Supports membership providers with binary (<see cref="T:System.Array" /> of <see cref="T:System.Byte" />) values for ProviderUserKey.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.ConvertBinaryUserKey.ConvertToString(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Customers.ConvertBinaryUserKey.ConvertToUserKey(System.String)">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Customers.ConvertBinaryUserKey.ForType">
            <summary>
            Returns the <see cref="T:System.Type"/> for <see cref="T:System.Array" /> of <see cref="T:System.Byte" />.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Customers.ConvertGuidUserKey">
            <summary>
            Supports membership providers with <see cref="T:System.Guid"/> values for ProviderUserKey.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.ConvertGuidUserKey.ConvertToString(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Customers.ConvertGuidUserKey.ConvertToUserKey(System.String)">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Customers.ConvertGuidUserKey.ForType">
            <summary>
            Returns the <see cref="T:System.Type"/> for <see cref="T:System.Guid" />.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Customers.ConvertIntUserKey">
            <summary>
            Supports membership providers with <see cref="T:System.Int32"/> values for ProviderUserKey.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.ConvertIntUserKey.ConvertToString(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Customers.ConvertIntUserKey.ConvertToUserKey(System.String)">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Customers.ConvertIntUserKey.ForType">
            <summary>
            Returns the <see cref="T:System.Type"/> for <see cref="T:System.Int32" />
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Customers.ConvertSidUserKey">
            <summary>
            Supports membership providers with <see cref="T:System.Security.Principal.SecurityIdentifier"/> values for ProviderUserKey.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.ConvertSidUserKey.ConvertToString(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Customers.ConvertSidUserKey.ConvertToUserKey(System.String)">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Customers.ConvertSidUserKey.ForType">
            <summary>
            Returns the <see cref="T:System.Type"/> for <see cref="T:System.Security.Principal.SecurityIdentifier" />.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Customers.ConvertStringUserKey">
            <summary>
            Supports membership providers with <see cref="T:System.String"/> values for ProviderUserKey.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.ConvertStringUserKey.ConvertToString(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Customers.ConvertStringUserKey.ConvertToUserKey(System.String)">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Customers.ConvertStringUserKey.ForType">
            <summary>
            Returns the <see cref="T:System.Type"/> for <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Customers.CreditCard">
            <summary>
            CreditCard
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customers.CreditCard.eCreditCardType.Visa">
            <summary>
            Visa
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customers.CreditCard.eCreditCardType.MasterCard">
            <summary>
            MasterCard
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customers.CreditCard.eCreditCardType.AmericanExpress">
            <summary>
            American Express
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customers.CreditCard.eCreditCardType.Discover">
            <summary>
            Discover
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CreditCard.CreditCardTypeFriendlyName">
            <summary>
            Gets the name of the credit card type friendly.
            </summary>
            <value>The name of the credit card type friendly.</value>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CreditCard.CreateInstance">
            <summary>
            Creates the instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CreditCard.Delete(Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Deletes the credit card.
            </summary>
            <param name="creditCardId">The credit card id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CreditCard.Delete">
            <summary>
            Deletes this instance.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Customers.CustomerAddress">
            <summary>
            CustomerAddress
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerAddress.CreateInstance">
            <summary>
            Creates the instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerAddress.AddressId">
            <summary>
            Gets or sets the address id.
            </summary>
            <value>The address id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerAddress.AddressType">
            <summary>
            Gets or sets the type of the customer address.
            </summary>
            <value>The type of the customer address.</value>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerAddress.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is not null and equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerAddress.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerAddress.CreateForApplication">
            <summary>
            Creates the customer address for application.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerAddress.Delete(Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Deletes the customer address.
            </summary>
            <param name="addressId">The address id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerAddress.Delete">
            <summary>
            Deletes this instance.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerAddress.GetAddressString">
            <summary>
            Gets the address string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerAddress.CopyCustomerAddressToOrderAddress(Mediachase.Commerce.Customers.AddressEntity,Mediachase.Commerce.Orders.OrderAddress)">
            <summary>
            Copies the fields from an instance of a CustomerAddress object to an instance of an OrderAddress object.
            </summary>
            <param name="customerAddress"></param>
            <param name="orderAddress"></param>
        </member>
        <member name="T:Mediachase.Commerce.Customers.CustomerAddressHelper">
            <summary>
            Helper class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerAddressHelper.GetAddressString(Mediachase.Commerce.Customers.CustomerAddress)">
            <summary>
            Converts address to a string (in HTML format) without phone numbers.
            </summary>
            <param name="address"></param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerAddressHelper.GetAddressString(Mediachase.Commerce.Customers.CustomerAddress,System.Boolean)">
            <summary>
            Converts address to a string (in HTML format).
            </summary>
            <param name="address"></param>
            <param name="includePhones"></param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerAddressHelper.IsAddressInCollection(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Customers.CustomerAddress},Mediachase.Commerce.Customers.CustomerAddress)">
            <summary>
            Checks if customer address collection already contains the specified address.
            </summary>
            <param name="collection">Customer addresses collection (Profile.Account.Addresses).</param>
            <param name="address">Address to check.</param>
            <returns>True, if address is already in the collection.</returns>
            <remarks>Only address' properties are checked (like first, last name, city, state,...). Address name and addressId are ignored.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerAddressHelper.CheckAddressesEquality(Mediachase.Commerce.Customers.CustomerAddress,Mediachase.Commerce.Customers.CustomerAddress)">
            <summary>
            Checks if 2 customer addresses are the same (have same first, last names, city, state,...).
            Address ids and names are ignored.
            </summary>
            <param name="address1"></param>
            <param name="address2"></param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Customers.CustomerAddressTypeEnum">
            <summary>
            Represent posible customer address types
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customers.CustomerAddressTypeEnum.Public">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customers.CustomerAddressTypeEnum.Shipping">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customers.CustomerAddressTypeEnum.Billing">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Customers.CustomerContact">
            <summary>
            Contact class
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customers.CustomerContact.eContactGroup.Customer">
            <summary>
            Customer
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customers.CustomerContact.eContactGroup.Partner">
            <summary>
            Partner
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customers.CustomerContact.eContactGroup.Distributor">
            <summary>
            Distributor
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContact.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customers.CustomerContact"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContact.CreateInstance">
            <summary>
            Creates the instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContact.CreateInstance(System.Web.Security.MembershipUser)">
            <summary>
            Creates the instance.
            </summary>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerContact.CustomerGroup">
            <summary>
            Gets or sets the customer group.
            </summary>
            <value>The customer group.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerContact.ContactCreditCards">
            <summary>
            Gets the contact credit cards.
            </summary>
            <value>The contact credit cards.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerContact.ContactAddresses">
            <summary>
            Gets the contact addresses.
            </summary>
            <value>The contact addresses.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerContact.ContactOrganization">
            <summary>
            Gets the contact organization.
            </summary>
            <value>The contact organization.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerContact.AddressChanges">
            <summary>
            Gets the address changes.
            </summary>
            <value>The address changes.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerContact.CreditCardChanges">
            <summary>
            Gets the credit card changes.
            </summary>
            <value>The credit card changes.</value>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContact.UpdateContactAddress(Mediachase.Commerce.Customers.CustomerAddress)">
            <summary>
            Updates the contact address.
            </summary>
            <param name="address">The address.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContact.AddContactAddress(Mediachase.Commerce.Customers.CustomerAddress)">
            <summary>
            Adds the contact address.
            </summary>
            <param name="address">The address.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContact.DeleteContactAddress(Mediachase.Commerce.Customers.CustomerAddress)">
            <summary>
            Deletes the contact address.
            </summary>
            <param name="address">The address.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContact.UpdateCreditCard(Mediachase.Commerce.Customers.CreditCard)">
            <summary>
            Updates the credit card.
            </summary>
            <param name="creditCard">The credit card.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContact.AddCreditCard(Mediachase.Commerce.Customers.CreditCard)">
            <summary>
            Adds the credit card.
            </summary>
            <param name="creditCard">The credit card.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContact.DeleteCreditCard(Mediachase.Commerce.Customers.CreditCard)">
            <summary>
            Deletes the credit card.
            </summary>
            <param name="creditCard">The credit card.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContact.SaveChanges">
            <summary>
            Saves the changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContact.DeleteWithAllDependents">
            <summary>
            Deletes the customer contact with all depends.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContact.DeleteCustomerContactOnly">
            <summary>
            Deletes the  customer contact only.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContact.DeleteCustomerContact(Mediachase.BusinessFoundation.Data.PrimaryKeyId,Mediachase.Commerce.Customers.Request.eRelatedEntityDeleteMode)">
            <summary>
            Deletes the customer contact.
            </summary>
            <param name="custId">The contact id.</param>
            <param name="deleteMode">The delete mode.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContact.GetMembershipEmail(System.Security.Principal.IPrincipal)">
            <summary>
            Gets the membership email.
            </summary>
            <param name="principal">The principal.</param>
            <returns>The membership email.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Customers.CustomerContext">
            <summary>
            The CustomerContext class is used to access the functions of the Customer Management System.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customers.CustomerContext"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.#ctor(Mediachase.Commerce.Customers.CustomerOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customers.CustomerContext"/> class.
            </summary>
            <param name="customerOptions">The options</param>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerContext.Current">
            <summary>
            Gets the current context.
            </summary>
            <value>The current.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerContext.CurrentContact">
            <summary>
            Gets the current contact.
            </summary>
            <value>The current contact.</value>
            <remarks>
            If there is no contact associated with the current user, then such a contact will be created automatically.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerContext.CurrentContactName">
            <summary>
            Gets the name of the current contact.
            </summary>
            <value>The name of the current contact.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerContext.CurrentContactId">
            <summary>
            Gets the current contact's id.
            </summary>
            <value>The current contact's id.</value>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.GetOrganizations">
            <summary>
            Gets the organizations.
            </summary>
            <remarks>This method retrieves up to the number of items defined in "maxListObjects". It's possible to configure the maximum number of organisations that can be retrieved, by setting 'maxListObjects' in baf.data.metaobjects.config.</remarks>
            <returns>Organisations. Maximum number of items that will be retrieved can be configured in 'baf.data.metaobjects.config'.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.InnerGetAllOrganization">
            <summary>
            Inners the get all organization.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.GetCustomerContactsInOrganization(Mediachase.Commerce.Customers.Organization)">
            <summary>
            Gets customer contacts in an organisation.
            </summary>
            <param name="organisation">The organisation</param>
            <remarks>This method retrieves up to the number of items defined in "maxListObjects". It's possible to configure the maximum number of items that can be retrieved, by setting 'maxListObjects' in baf.data.metaobjects.config.</remarks>
            <returns>Customer contacts. Maximum number of items that will be retrieved can be configured in 'baf.data.metaobjects.config'.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.InnerGetAllCustomerContactsInOrganization(Mediachase.Commerce.Customers.Organization)">
            <summary>
            Inners the get all customer contacts in organization.
            </summary>
            <param name="org">The org.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.GetAddressesInOrganization(Mediachase.Commerce.Customers.Organization)">
            <summary>
            Gets customer addresses in an organisation.
            </summary>
            <param name="organization">The organization.</param>
            <remarks>This method retrieves up to the number of items defined in "maxListObjects". It's possible to configure the maximum number of items that can be retrieved, by setting 'maxListObjects' in baf.data.metaobjects.config.</remarks>
            <returns>Customer addresses. Maximum number of items that will be retrieved can be configured in 'baf.data.metaobjects.config'.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.InnerGetAllAddressesInOrganization(Mediachase.Commerce.Customers.Organization)">
            <summary>
            Inners the get all addresses in organization.
            </summary>
            <param name="org">The org.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.GetOrganizationCreditCards(Mediachase.Commerce.Customers.Organization)">
            <summary>
            Gets credit cards for an organisation.
            </summary>
            <param name="organization">The organization.</param>
            <remarks>This method retrieves up to the number of items defined in "maxListObjects". It's possible to configure the maximum number of items that can be retrieved, by setting 'maxListObjects' in baf.data.metaobjects.config.</remarks>
            <returns>Organisations. Maximum number of items that will be retrieved can be configured in 'baf.data.metaobjects.config'.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.InnerGetAllOrganizationCreditCards(Mediachase.Commerce.Customers.Organization)">
            <summary>
            Inners the get all organization credit cards.
            </summary>
            <param name="org">The org.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.GetOrganizationById(System.String)">
            <summary>
            Gets the organization by id.
            </summary>
            <param name="orgId">The org id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.GetOrganizationById(Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Gets the organization by id.
            </summary>
            <param name="orgId">The org id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.InnerGetOrganizationById(Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Inners the get organization by id.
            </summary>
            <param name="orgId">The org id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.GetOrganizationsByPattern(System.String)">
            <summary>
            Gets the organizations by pattern.
            </summary>
            <param name="pattern">The pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.InnerGetOrganizationsByPattern(System.String)">
            <summary>
            Inners the get organizations by pattern.
            </summary>
            <param name="pattern">The pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.GetContacts">
            <summary>
            Gets the customer contacts.
            </summary>
            <remarks>This method retrieves up to the number of items defined in "maxListObjects". It's possible to configure the maximum number of items that can be retrieved, by setting 'maxListObjects' in baf.data.metaobjects.config.</remarks>
            <returns>Organisations. Maximum number of items that will be retrieved can be configured in 'baf.data.metaobjects.config'.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.GetContacts(System.Int32,System.Int32)">
            <summary>
            Gets the customer contacts, by paging.
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="recordsToRetrieve">Number of contacts to get.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.GetAllContactsInternal">
            <summary>
            Gets all contacts.
            </summary>
            <returns>All contacts, limited by setting in maxListObjects</returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.GetContactsByPagingInternal(System.Int32,System.Int32)">
            <summary>
            Gets customer contacts by paging.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.GetContactsByPattern(System.String)">
            <summary>
            Gets the contacts by pattern.
            </summary>
            <param name="pattern">The pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.InnerGetContactsByPattern(System.String)">
            <summary>
            Inners the get contacts by pattern.
            </summary>
            <param name="pattern">The pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.GetContactById(System.Guid)">
            <summary>
            Gets the contact by id.
            </summary>
            <param name="contactId">The contact id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.InnerGetContactById(System.Guid)">
            <summary>
            Gets the contact by id.
            </summary>
            <param name="contactId">The contact id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.GetContactByUserId(System.String)">
            <summary>
            Gets the contact by id.
            </summary>
            <param name="userId">The contact id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.InnerGetContactByUserId(System.String)">
            <summary>
            Gets the contact by id.
            </summary>
            <param name="userId">The contact id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.GetContactForUser(System.Web.Security.MembershipUser)">
            <summary>
            Gets the contact for user.
            </summary>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.GetUserForContact(Mediachase.Commerce.Customers.ContactEntity)">
            <summary>
            Gets the user for contact.
            </summary>
            <param name="customerContact">The customer contact.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.GetUserForContactId(Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Gets the user for contact id.
            </summary>
            <param name="customerContactId">The customer contact id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.GetContactAddresses(Mediachase.Commerce.Customers.CustomerContact)">
            <summary>
            Gets customer addresses for an customer contact.
            </summary>
            <param name="contact">The customer contact.</param>
            <remarks>This method retrieves up to the number of items defined in "maxListObjects". It's possible to configure the maximum number of items that can be retrieved, by setting 'maxListObjects' in baf.data.metaobjects.config.</remarks>
            <returns>Customer addresses. Maximum number of items that will be retrieved can be configured in 'baf.data.metaobjects.config'.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.InnerGetAllContactAddresses(Mediachase.Commerce.Customers.CustomerContact)">
            <summary>
            Inners the get all contact addresses.
            </summary>
            <param name="contact">The contact.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.GetContactCreditCards(Mediachase.Commerce.Customers.CustomerContact)">
            <summary>
            Gets credit cards for an customer contact.
            </summary>
            <param name="contact">The customer contact.</param>
            <remarks>This method retrieves up to the number of items defined in "maxListObjects". It's possible to configure the maximum number of items that can be retrieved, by setting 'maxListObjects' in baf.data.metaobjects.config.</remarks>
            <returns>Customer addresses. Maximum number of items that will be retrieved can be configured in 'baf.data.metaobjects.config'.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.InnerGetAllContactCreditCards(Mediachase.Commerce.Customers.CustomerContact)">
            <summary>
            Inners the get all contact credit cards.
            </summary>
            <param name="contact">The contact.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerContext.IsAdminContact(Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Determines whether [is admin contact] [the specified contact pk].
            </summary>
            <param name="contactPk">The contact pk.</param>
            <returns>
            	<c>true</c> if [is admin contact] [the specified contact pk]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Customers.CustomerEntityFactory">
            <summary>
            Repesents factory for creation typed entity object by class name and primary key id
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerEntityFactory.Mediachase#Commerce#Customers#Common#IFactoryMethod{Mediachase#BusinessFoundation#Data#Business#EntityObject}#Create(System.Object)">
            <summary>
            Creates the specified obj.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Customers.CustomerOptions">
            <summary>
            Contains options that for the customer system.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerOptions.UseCache">
            <summary>
            Gets or sets if the cache is enabled.
            </summary>
            <remarks>Default value is true.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerOptions.ContactCollectionCacheExpiration">
            <summary>
            Gets or sets the contact collection expiration time.
            </summary>
            <remarks>Default value is 1 minute.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerOptions.ContactCacheExpiration">
            <summary>
            Gets or sets the contact expiration time.
            </summary>
            <remarks>Default value is 1 minute.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerOptions.AddressCollectionCacheExpiration">
            <summary>
            Gets or sets the address collection expiration time.
            </summary>
            <remarks>Default value is 1 minute.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerOptions.AddressCacheExpiration">
            <summary>
            Gets or sets the address expiration time.
            </summary>
            <remarks>Default value is 1 minute.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerOptions.CreditCardCollectionCacheExpiration">
            <summary>
            Gets or sets the credit card collection expiration time.
            </summary>
            <remarks>Default value is 1 minute.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerOptions.CreditCardCacheExpiration">
            <summary>
            Gets or sets the credit card expiration time.
            </summary>
            <remarks>Default value is 1 minute.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerOptions.OrganizationCollectionCacheExpiration">
            <summary>
            Gets or sets the organization collection expiration time.
            </summary>
            <remarks>Default value is 1 minute.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomerOptions.OrganizationCacheExpiration">
            <summary>
            Gets or sets the organization expiration time.
            </summary>
            <remarks>Default value is 1 minute.</remarks>
        </member>
        <member name="T:Mediachase.Commerce.Customers.CustomersCache">
            <summary>
            Implements cache operations for customer data.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomersCache.CreateCacheKey(System.String,System.String,System.String,System.String)">
            <summary>
            Creates the cache key.
            </summary>
            <param name="entityName">Name of the entity.</param>
            <param name="relatedEntityName">Name of the related entity.</param>
            <param name="methodName">Name of the method.</param>
            <param name="uniqueSuffix">The unique suffix.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomersCache.Clear">
            <summary>
            Removes all items from the Cache
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomersCache.ReadThrough``1(System.String,System.Collections.Generic.IEnumerable{System.String},System.TimeSpan,System.Func{``0})">
            <summary>
            Read-through cache handling.
            </summary>
            <typeparam name="T">Type of the value to read.</typeparam>
            <param name="key">The key.</param>
            <param name="masterKeys">The master keys that the cached item should depend on.</param>
            <param name="timeout">The cache timeout.</param>
            <param name="load">The function to invoke for retrieving the value if it does not exist in the cache.</param>
            <returns>
            The object associated with the key, if it exists or is read thru the readValue fuction. Otherwise returns null.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomersCache.Insert(System.String,System.Object,System.TimeSpan)">
            <summary>
            Inserts the value into the cache with the specified key, with dependency to a master key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value to cache.</param>
            <param name="timeout">The cache timeout.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomersCache.Get(System.String)">
            <summary>
            Gets the cached value for the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Customers.CustomersPermissions">
            <summary>
            Permissions for customer subsytem
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomersPermissions.CustomersTabView">
            <summary>
            Gets the customers tab view permission.
            </summary>
            <value>
            The customers tab view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomersPermissions.ContactsView">
            <summary>
            Gets the contacts view permission.
            </summary>
            <value>
            The contacts view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomersPermissions.ContactsEdit">
            <summary>
            Gets the contacts edit permission.
            </summary>
            <value>
            The contacts edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomersPermissions.ContactsCreate">
            <summary>
            Gets the contacts create permission.
            </summary>
            <value>
            The contacts create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomersPermissions.ContactsDelete">
            <summary>
            Gets the delete permission.
            </summary>
            <value>
            The contacts delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomersPermissions.ContactsList">
            <summary>
            Gets the contacts list permission.
            </summary>
            <value>
            The contacts list PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomersPermissions.OrganizationsView">
            <summary>
            Gets the organizations view permission.
            </summary>
            <value>
            The organizations view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomersPermissions.OrganizationsEdit">
            <summary>
            Gets the organizations edit permission.
            </summary>
            <value>
            The organizations edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomersPermissions.OrganizationsCreate">
            <summary>
            Gets the organizations create permission.
            </summary>
            <value>
            The organizations create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomersPermissions.OrganizationsDelete">
            <summary>
            Gets the organizations delete permission.
            </summary>
            <value>
            The organizations delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.CustomersPermissions.OrganizationsList">
            <summary>
            Gets the organizations list permission.
            </summary>
            <value>
            The organizations list PermissionType.
            </value>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Handlers.ContactRequestHandler">
            <summary>
            Represents Contact Request Handler.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.ContactRequestHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customers.Handlers.ContactRequestHandler"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.ContactRequestHandler.PreCreate(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Pres the create.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.ContactRequestHandler.PreDelete(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Pres the delete.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Handlers.CreditCardRequestHandler">
            <summary>
            Represents functional crypted/encrypted card number property in CreditCard entity
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.CreditCardRequestHandler.PreCreate(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Pres the create.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.CreditCardRequestHandler.PreUpdate(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Posts the update.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.CreditCardRequestHandler.PostLoad(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Posts the load.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.CreditCardRequestHandler.PostList(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Posts the list.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.CreditCardRequestHandler.EncryptValue(System.String)">
            <summary>
            Encodes the value. 
            </summary>
            <param name="val">The val.</param>
            <returns>Returns the encrypted value of string. If the database is Azure-enabled, returns the original value</returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.CreditCardRequestHandler.DecryptValue(System.String)">
            <summary>
            Decodes the value. 
            </summary>
            <param name="val">The val.</param>
            <returns>Returns the encrypted value of string. If the database is Azure-enabled, returns the original value</returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.CustomerRequestHandlerBase.CreateEntityObject(System.String,System.Nullable{Mediachase.BusinessFoundation.Data.PrimaryKeyId})">
            <summary>
            Creates the entity object.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.CustomerRequestHandlerBase.GetRelatedEntities(Mediachase.BusinessFoundation.Data.PrimaryKeyId,System.String,System.String)">
            <summary>
            Gets the related entities.
            </summary>
            <param name="pk">The pk.</param>
            <param name="className">Name of the class.</param>
            <param name="refFieldName">Name of the ref field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.CustomerRequestHandlerBase.PostCreate(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Posts the create.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.CustomerRequestHandlerBase.PreUpdate(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Pres the update.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.CustomerRequestHandlerBase.PreDelete(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Pres the delete.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Handlers.OrganizationRequestHandler">
            <summary>
            OrganizationRequestHandler
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.OrganizationRequestHandler.PreCreate(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Pres the create.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.OrganizationRequestHandler.PreUpdate(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Pres the update.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.OrganizationRequestHandler.PreDelete(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Pres the delete.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.OrganizationRequestHandler.CheckCycleReferense(Mediachase.Commerce.Customers.OrganizationEntity)">
            <summary>
            Checks the cycle referense.
            </summary>
            <param name="orgEntity">The org entity.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.OrganizationRequestHandler.CheckCycleReferense(Mediachase.BusinessFoundation.Data.PrimaryKeyId,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Checks the cycle referense.
            </summary>
            <param name="orgId">The org id.</param>
            <param name="parentId">The parent id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.OrganizationRequestHandler.CheckSelfLoopBackReferense(Mediachase.Commerce.Customers.OrganizationEntity)">
            <summary>
            Checks the self loop back referense.
            </summary>
            <param name="orgEntity">The org entity.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Handlers.OrganizationRequestHandler.CheckSelfLoopBackReferense(Mediachase.BusinessFoundation.Data.PrimaryKeyId,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Checks the self loop back referense.
            </summary>
            <param name="orgId">The org id.</param>
            <param name="parentId">The parent id.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Internal.CustomerOptionsExtensions">
            <summary>
            <see cref="T:Mediachase.Commerce.Customers.CustomerOptions"/> extensions methods. These methods can be removed when the <see cref="T:Mediachase.Commerce.Customers.Configuration.CustomerConfiguration"/> obsoleted is removed.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Customers.IUserKeyConverter">
            <summary>
            Interface for converting the userKey object in a membership provider into a string.
            </summary>
            <remarks>
            The userKey is typed as an object without any other requirements, which means there is no generic
            way to perform a userKey-to-string conversion. Rather we have to create distinct implementations for
            each type of userKey that we need to support.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Customers.IUserKeyConverter.ConvertToString(System.Object)">
            <summary>
            Converts the user key to a string.
            </summary>
            <param name="userKey">The provider user key.</param>
            <returns>A string representation of the user key.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.IUserKeyConverter.ConvertToUserKey(System.String)">
            <summary>
            Converts a string to a provider user key.
            </summary>
            <param name="key">The provider user key.</param>
            <returns>The provider user key.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Customers.IUserKeyConverter.ForType">
            <summary>
            Gets the type the implementation can convert.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Customers.MapUserKey">
            <summary>
            Manages mapping of ProviderUserKey to/from string representation.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.MapUserKey.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customers.MapUserKey"/> class with the registered
            <see cref="T:Mediachase.Commerce.Customers.IUserKeyConverter"/> implementations from <see cref="T:EPiServer.ServiceLocation.ServiceLocator"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.MapUserKey.#ctor(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Customers.IUserKeyConverter})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customers.MapUserKey"/> class.
            </summary>
            <param name="converters">The user key converters.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.MapUserKey.ToTypedString(System.Object)">
            <summary>
            Converts a ProviderUserKey to string with embedded type information.
            </summary>
            <param name="userKey">The user key.</param>
            <returns>A string that can be used as input to the ToUserKey method.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.MapUserKey.ToUserKey(System.String)">
            <summary>
            Converts a string to a provider user key.
            </summary>
            <param name="typedUserKey">The typed user key.</param>
            <returns>An object that can be used as ProviderUserKey for a membership provider.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.MapUserKey.GetUserKeyConverter(System.String)">
            <summary>
            Gets a converter for user key of specified type.
            </summary>
            <param name="typeName">Name of the type.</param>
            <returns>A matching implementation of the <see cref="T:Mediachase.Commerce.Customers.IUserKeyConverter"/>, or null if none is found.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Organization">
            <summary>
            Represents organization.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Organization.CreateInstance">
            <summary>
            Creates the instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Organization.IsParentOrganizationValid">
            <summary>
            Determines whether [is parent organization valid].
            </summary>
            <returns>
            	<c>true</c> if [is parent organization valid]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Organization.CheckParentOrganizationValid(Mediachase.BusinessFoundation.Data.PrimaryKeyId,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Checks the parent organization valid.
            </summary>
            <param name="orgId">The org id.</param>
            <param name="parentId">The parent id.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Organization.Contacts">
            <summary>
            Gets the contacts.
            </summary>
            <value>The contacts.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Organization.Addresses">
            <summary>
            Gets the addresses.
            </summary>
            <value>The addresses.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Organization.CreditCards">
            <summary>
            Gets the credit cards.
            </summary>
            <value>The credit cards.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Organization.OrganizationType">
            <summary>
            Gets or sets the type of the organization.
            </summary>
            <value>The type of the organization.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Organization.OrgCustomerGroup">
            <summary>
            Gets or sets the customer group.
            </summary>
            <value>The customer group.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Organization.BusinessCategory">
            <summary>
            Gets or sets the business category.
            </summary>
            <value>The business category.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Organization.ChildOrganizations">
            <summary>
            Gets the child organizations.
            </summary>
            <value>The child organizations.</value>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Organization.DeleteWithAllDepends">
            <summary>
            Deletes the organization with all depends.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Organization.DeleteOrganizationOnly">
            <summary>
            Deletes the organization only.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Organization.DeleteOrganization(Mediachase.BusinessFoundation.Data.PrimaryKeyId,Mediachase.Commerce.Customers.Request.eRelatedEntityDeleteMode)">
            <summary>
            Deletes the organization.
            </summary>
            <param name="orgId">The org id.</param>
            <param name="deleteMode">The delete mode.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Organization.SaveChanges">
            <summary>
            Saves the changes for Organization.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Plugins.AutoInstallMetaDataModule">
            <summary>
            Represents functional automatic installation meta data for customers
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Plugins.AutoInstallMetaDataModule.MetaDataConnectionString">
            <summary>
            Gets the meta data connection string.
            </summary>
            <value>The meta data connection string.</value>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Plugins.AutoInstallMetaDataModule.Execute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Plugins.AutoInstallMetaDataModule.SortOrder">
            <summary>
            Gets the order of plugins initialization
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Plugins.AutoInstallMetaDataModule.CheckNeedUpgradeAddress(System.String)">
            <summary>
            Checks the need to upgrade cls_Address.
            </summary>
            <param name="connectionString">The connection string.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Plugins.AutoInstallMetaDataModule.CheckNeedInstall(System.String)">
            <summary>
            Checks the need install.
            </summary>
            <param name="connectionString">The connection string.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Plugins.AutoInstallMetaDataModule.CheckNeedUpgradeContact(System.String)">
            <summary>
            Checks the need to upgrade cls_CustomerContact.
            </summary>
            <param name="connectionString">The connection string.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Plugins.AutoInstallMetaDataModule.CheckNeedUpgradeOrganization(System.String)">
            <summary>
            Checks the need to upgrade cls_Organization.
            </summary>
            <param name="connectionString">The connection string.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Plugins.AutoInstallMetaDataModule.CheckNeedAddContactNote(System.String)">
            <summary>
            Checks the need to add cls_ContactNote.
            </summary>
            <param name="connectionString">The connection string.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Plugins.AutoInstallMetaDataModule.InstallCustomersMetaData">
            <summary>
            Installs the customers meta data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Profile.CMPageSettings">
            <summary>
            CMPageSettings
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Profile.CMPageSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customers.Profile.CMPageSettings"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Profile.CMPageSettings.GetSettingInt(System.String,System.Int32)">
            <summary>
            Gets the setting int.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Profile.CMPageSettings.SetSettingInt(System.String,System.Int32)">
            <summary>
            Sets the setting int.
            </summary>
            <param name="key">The key.</param>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Profile.CMPageSettings.GetSettingString(System.String)">
            <summary>
            Gets the setting string.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Profile.CMPageSettings.GetSettingString(System.String,System.String)">
            <summary>
            Gets the setting string.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Profile.CMPageSettings.SetSettingString(System.String,System.String)">
            <summary>
            Sets the setting string.
            </summary>
            <param name="key">The key.</param>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Profile.CMPageSettings.MakeGridPageSizeKey(System.String)">
            <summary>
            Makes the grid page size key.
            </summary>
            <param name="viewId">The view id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Profile.CMPageSettings.MakeGridSettingsKey(System.String,System.String)">
            <summary>
            Makes the grid settings key.
            </summary>
            <param name="appId">The app id.</param>
            <param name="viewId">The view id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Profile.CMPageSettings.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customers.Profile.CMPageSettings"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Profile.CMPageSettings.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Profile.CustomerProfile">
            <summary>
            Implements operations for the customer profile. (Inherits <see cref="T:System.Web.Profile.ProfileBase"/>.)
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfile.PreferredShippingAddress">
            <summary>
            Gets or sets the preferred shipping address.
            </summary>
            <value>The preferred shipping address.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfile.PreferredBillingAddress">
            <summary>
            Gets or sets the preferred billing address.
            </summary>
            <value>The preferred billing address.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfile.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
            <value>The first name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfile.LastName">
            <summary>
            Gets or sets the last name.
            </summary>
            <value>The last name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfile.FullName">
            <summary>
            Gets or sets the full name.
            </summary>
            <value>The full name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfile.LastVisited">
            <summary>
            Gets or sets the last visited.
            </summary>
            <value>The last visited.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfile.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>The email.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfile.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfile.ConsoleUILanguage">
            <summary>
            Gets or sets the preferred CM UI Language.
            </summary>
            <value>The preferred language.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfile.PageSettings">
            <summary>
            Gets or sets the preferred CM UI Language.
            </summary>
            <value>The preferred language.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfile.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified property name.
            Store him in CustomSettings profile property
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Profile.CustomerProfileWrapper.WrappedNotNullAndEcf">
            <summary>
            Wrappeds the not null and ecf.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfileWrapper.PreferredShippingAddress">
            <summary>
            Gets or sets the preferred shipping address.
            </summary>
            <value>The preferred shipping address.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfileWrapper.PreferredBillingAddress">
            <summary>
            Gets or sets the preferred billing address.
            </summary>
            <value>The preferred billing address.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfileWrapper.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
            <value>The first name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfileWrapper.LastName">
            <summary>
            Gets or sets the last name.
            </summary>
            <value>The last name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfileWrapper.FullName">
            <summary>
            Gets or sets the full name.
            </summary>
            <value>The full name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfileWrapper.LastVisited">
            <summary>
            Gets or sets the last visited.
            </summary>
            <value>The last visited.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfileWrapper.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>The email.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfileWrapper.ConsoleUILanguage">
            <summary>
            Gets or sets the console UI language.
            </summary>
            <value>The console UI language.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfileWrapper.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfileWrapper.PageSettings">
            <summary>
            Gets or sets the page settings.
            </summary>
            <value>The page settings.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfileWrapper.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified property name.
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Profile.CustomerProfileWrapper.Save">
            <summary>
            Updates the profile data source with changed profile property values.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfileWrapper.PropertyValues">
            <summary>
            Gets a collection of settings property values.
            </summary>
            <value></value>
            <returns>A collection of <see cref="T:System.Configuration.SettingsPropertyValue"></see> objects representing the actual data values for the properties managed by the <see cref="T:System.Configuration.SettingsBase"></see> instance.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfileWrapper.Context">
            <summary>
            Gets the associated settings context.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.Configuration.SettingsContext"></see> associated with the settings instance.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.CustomerProfileWrapper.Providers">
            <summary>
            Gets a collection of settings providers.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.Configuration.SettingsProviderCollection"></see> containing <see cref="T:System.Configuration.SettingsProvider"></see> objects.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Profile.Providers.CustomerSqlMembershipProvider">
            <summary>
            Extended Sql Membership provider that allows dynamically changing the current application name instead of using static.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.Providers.CustomerSqlMembershipProvider.ApplicationName">
            <summary>
            Gets or sets the name of the application to store and retrieve membership information for.
            </summary>
            <value></value>
            <returns>
            The name of the application to store and retrieve membership information for. The default is the <see cref="P:System.Web.HttpRequest.ApplicationPath"/> property value for the current <see cref="P:System.Web.HttpContext.Request"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
            An attempt was made to set the <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName"/> property to an empty string or null.
            </exception>
            <exception cref="T:System.Configuration.Provider.ProviderException">
            An attempt was made to set the <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName"/> property to a string that is longer than 256 characters.
            </exception>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Profile.Providers.CustomerSqlProfileProvider">
            <summary>
            Implements operations for and represents the customer profile provider. (Inherits <see cref="T:System.Web.Profile.SqlProfileProvider"/>.)
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customers.Profile.Providers.CustomerSqlProfileProvider.p_connectionString">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customers.Profile.Providers.CustomerSqlProfileProvider.p_commandTimeout">
            <summary>
            
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.Providers.CustomerSqlProfileProvider.ApplicationName">
            <summary>
            Gets or sets the name of the application for which to store and retrieve profile information.
            </summary>
            <value></value>
            <returns>
            The name of the application for which to store and retrieve profile information. The default is the <see cref="P:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath"/> value.
            </returns>
            <exception cref="T:System.Web.HttpException">
            An attempt was made to set the <see cref="P:System.Web.Profile.SqlProfileProvider.ApplicationName"/> property by a caller that does not have <see cref="F:System.Web.AspNetHostingPermissionLevel.High"/> ASP.NET hosting permission.
            </exception>
            <exception cref="T:System.Configuration.Provider.ProviderException">
            An attempt was made to set the <see cref="P:System.Web.Profile.SqlProfileProvider.ApplicationName"/> property to a string that is longer than 256 characters.
            </exception>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Profile.Providers.CustomerSqlProfileProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the SQL Server profile provider with the property values specified in the ASP.NET application's configuration file. This method is not intended to be used directly from your code.
            </summary>
            <param name="name">The name of the <see cref="T:System.Web.Profile.SqlProfileProvider"></see> instance to initialize.</param>
            <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection"></see> that contains the names and values of configuration options for the profile provider.</param>
            <exception cref="T:System.Exception">The applicationName attribute value exceeds 256 characters.</exception>
            <exception cref="T:System.ArgumentNullException">config is null.</exception>
            <exception cref="T:System.Web.HttpException">The connectionStringName attribute is an empty string ("") or is not specified in the application configuration file for this <see cref="T:System.Web.Profile.SqlProfileProvider"></see> instance.- or - The value of the connection string specified in the connectionStringName attribute value is empty or the specified connectionStringName value does not exist in the application configuration file for this <see cref="T:System.Web.Profile.SqlProfileProvider"></see> instance.- or - The application configuration file for this <see cref="T:System.Web.Profile.SqlProfileProvider"></see> instance contains an unrecognized attribute. </exception>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Profile.Providers.CustomerSqlProfileProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
            <summary>
            Retrieves profile property information and values from a SQL Server profile database.
            </summary>
            <param name="sc">The <see cref="T:System.Configuration.SettingsContext"></see> that contains user profile information.</param>
            <param name="properties">A <see cref="T:System.Configuration.SettingsPropertyCollection"></see> containing profile information for the properties to be retrieved.</param>
            <returns>
            A <see cref="T:System.Configuration.SettingsPropertyValueCollection"></see> containing profile property information and values.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Profile.Providers.CustomerSqlProfileProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customers.Profile.Providers.CustomerSqlProfileProvider"/> class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Profile.Providers.CustomerSqlRoleProvider">
            <summary>
            Extended Sql Role provider that allows dynamically changing the current application name instead of using static.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Profile.Providers.CustomerSqlRoleProvider.ApplicationName">
            <summary>
            Gets or sets the name of the application to store and retrieve membership information for.
            </summary>
            <value></value>
            <returns>
            The name of the application to store and retrieve membership information for. The default is the <see cref="P:System.Web.HttpRequest.ApplicationPath"/> property value for the current <see cref="P:System.Web.HttpContext.Request"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
            An attempt was made to set the <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName"/> property to an empty string or null.
            </exception>
            <exception cref="T:System.Configuration.Provider.ProviderException">
            An attempt was made to set the <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName"/> property to a string that is longer than 256 characters.
            </exception>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Request.DeleteEntityWithDependsRequest">
            <summary>
            DeleteEntityWithDependsRequest
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customers.Request.DeleteEntityWithDependsRequest.Delete_RelatedEntityMode">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Request.DeleteEntityWithDependsRequest.#ctor(Mediachase.BusinessFoundation.Data.Business.EntityObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customers.Request.DeleteEntityWithDependsRequest"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Request.DeleteEntityWithDependsRequest.#ctor(Mediachase.BusinessFoundation.Data.Business.EntityObject,Mediachase.Commerce.Customers.Request.eRelatedEntityDeleteMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customers.Request.DeleteEntityWithDependsRequest"/> class.
            </summary>
            <param name="target">The target.</param>
            <param name="deleteMode">The delete mode.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Request.DeleteEntityWithDependsRequest.#ctor(System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyId,Mediachase.Commerce.Customers.Request.eRelatedEntityDeleteMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customers.Request.DeleteEntityWithDependsRequest"/> class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <param name="deleteMode">The delete mode.</param>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Request.DeleteEntityWithDependsRequest.DeleteRelatedEntityMode">
            <summary>
            Gets or sets the delete related entity mode.
            </summary>
            <value>The delete related entity mode.</value>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Request.OrganizationRequestParameters">
            <summary>
            OrganizationRequestParameters
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Request.eRelatedEntityDeleteMode">
            <summary>
            enum eRelatedEntityDeleteMode
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customers.Request.eRelatedEntityDeleteMode.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customers.Request.eRelatedEntityDeleteMode.Detach">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customers.Request.eRelatedEntityDeleteMode.Delete">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Customers.CustomerSecurityCachedDataRepository">
            <summary>
            Represents cached customer security data repository
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerSecurityCachedDataRepository.LoadRole(System.String)">
            <summary>
            Loads the role.
            </summary>
            <param name="roleName">Name of the role.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerSecurityCachedDataRepository.AddRolePermission(Mediachase.Commerce.Security.SecurityRole,Mediachase.Commerce.Security.SecurityPermission)">
            <summary>
            Adds the role permission.
            </summary>
            <param name="role">The role.</param>
            <param name="permission">The permission.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerSecurityCachedDataRepository.CreateRole(System.String,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Security.SecurityPermission})">
            <summary>
            Creates the role.
            </summary>
            <param name="roleName">Name of the role.</param>
            <param name="permissions">The permissions.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerSecurityCachedDataRepository.DeleteRole(System.String)">
            <summary>
            Deletes the role.
            </summary>
            <param name="roleName">Name of the role.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerSecurityCachedDataRepository.ResetCache">
            <summary>
            Resets the cache.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Customers.CustomerSecurityDataRepository">
            <summary>
            Represents adaptor for security data
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerSecurityDataRepository.ListUserSecurityRoleAssignments(Mediachase.Commerce.Security.Principal)">
            <summary>
            Lists the user security role assignments.
            </summary>
            <param name="principal">The principal.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerSecurityDataRepository.InsertSecurityRoleAssignments(Mediachase.Commerce.Security.SecurityRoleAssignment)">
            <summary>
            Inserts the security role assignments.
            </summary>
            <param name="roleAssignment">The role assignment.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerSecurityDataRepository.RemoveSecurityRoleAssignments(Mediachase.Commerce.Security.SecurityRoleAssignment)">
            <summary>
            Removes the security role assignments.
            </summary>
            <param name="roleAssignment">The role assignment.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerSecurityDataRepository.LoadRole(System.String)">
            <summary>
            Loads the role.
            </summary>
            <param name="roleName">Name of the role.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerSecurityDataRepository.CreateRole(System.String,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Security.SecurityPermission})">
            <summary>
            Creates the role.
            </summary>
            <param name="roleName">Name of the role.</param>
            <param name="permissions">The permissions.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerSecurityDataRepository.DeleteRole(System.String)">
            <summary>
            Deletes the role.
            </summary>
            <param name="roleName">Name of the role.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerSecurityDataRepository.AddRolePermission(Mediachase.Commerce.Security.SecurityRole,Mediachase.Commerce.Security.SecurityPermission)">
            <summary>
            Adds the role permission.
            </summary>
            <param name="role">The role.</param>
            <param name="permission">The permission.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerSecurityDataRepository.RemoveRolePermission(Mediachase.Commerce.Security.SecurityRole,Mediachase.Commerce.Security.SecurityPermission)">
            <summary>
            Removes the role permission.
            </summary>
            <param name="role">The role.</param>
            <param name="permission">The permission.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.CustomerSecurityDataRepository.ListAllRegisteredRoles">
            <summary>
            Lists all registered roles.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider">
            <summary>
            CustomerSecurityProvider
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider.EnableCaching">
            <summary>
            Gets or sets a value indicating whether [enable caching].
            </summary>
            <value><c>true</c> if [enable caching]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider.#ctor(Mediachase.Commerce.Customers.CustomerOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider.CreateRole(System.String,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Security.SecurityPermission})">
            <summary>
            Creates the role.
            </summary>
            <param name="roleName">Name of the role.</param>
            <param name="permissions">The permissions.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider.GetRoleByName(System.String)">
            <summary>
            Loads the role.
            </summary>
            <param name="roleName">Name of the role.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider.UpdateRole(Mediachase.Commerce.Security.SecurityRole)">
            <summary>
            Updates the role.
            </summary>
            <param name="role">The role.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider.ListUserRoleAssigments(System.Web.Security.MembershipUser)">
            <summary>
            Gets all role assignment.
            </summary>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider.CreateUserRoleAssignments(Mediachase.Commerce.Security.SecurityRoleAssignment)">
            <summary>
            Creates the user role assignments.
            </summary>
            <param name="assignment">The role assignment.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider.RemoveUserRoleAssignments(Mediachase.Commerce.Security.SecurityRoleAssignment)">
            <summary>
            Removes the user role assignments.
            </summary>
            <param name="assignment">The role assignment.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider.DeleteRole(System.String)">
            <summary>
            Deletes the role.
            </summary>
            <param name="roleName"></param>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider.GetAllRegisteredRoles">
            <summary>
            Gets all roles.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider.DeployPrincipalByUser(System.Web.Security.MembershipUser)">
            <summary>
            Deploys the principal by user.
            </summary>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider.GetPrincipalByUser(System.Web.Security.MembershipUser)">
            <summary>
            Gets the principal by user.
            </summary>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider.PermissionCheckEnable">
            <summary>
            Gets a value indicating whether [permission check enable].
            </summary>
            <value>
            	<c>true</c> if [permission check enable]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider.CheckPermission(System.Web.Security.MembershipUser,System.String,System.Object)">
            <summary>
            Checks the permission.
            </summary>
            <param name="user">The user.</param>
            <param name="permission">The permission.</param>
            <param name="securityObj">The security obj.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider.InstallAdminRoles">
            <summary>
            Installs the admin roles.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider.GetScopeFromSecurityObject(System.Object)">
            <summary>
            Gets the scope from security object.
            </summary>
            <param name="securityObj">The security obj.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityProvider.GetOwnerFromFromSecurityObject(System.Object)">
            <summary>
            Gets the owner from from security object.
            </summary>
            <param name="securityObj">The security obj.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Security.CustomerSecurityScope.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityScope.GetChildren">
            <summary>
            Gets an enumeration object that represents all the child nodes of the current hierarchical node.
            </summary>
            <returns>
            An <see cref="T:System.Web.UI.IHierarchicalEnumerable"/> collection of child nodes of the current hierarchical node.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityScope.GetParent">
            <summary>
            Gets an <see cref="T:System.Web.UI.IHierarchyData"/> object that represents the parent node of the current hierarchical node.
            </summary>
            <returns>
            An <see cref="T:System.Web.UI.IHierarchyData"/> object that represents the parent node of the current hierarchical node.
            </returns>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Security.CustomerSecurityScope.HasChildren">
            <summary>
            Indicates whether the hierarchical data node that the <see cref="T:System.Web.UI.IHierarchyData"/> object represents has any child nodes.
            </summary>
            <value></value>
            <returns>true if the current node has child nodes; otherwise, false.
            </returns>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Security.CustomerSecurityScope.Item">
            <summary>
            Gets the hierarchical data node that the <see cref="T:System.Web.UI.IHierarchyData"/> object represents.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Object"/> hierarchical data node object.
            </returns>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Security.CustomerSecurityScope.Path">
            <summary>
            Gets the hierarchical path of the node.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.String"/> that identifies the hierarchical path relative to the current node.
            </returns>
        </member>
        <member name="P:Mediachase.Commerce.Customers.Security.CustomerSecurityScope.Type">
            <summary>
            Gets the name of the type of <see cref="T:System.Object"/> contained in the <see cref="P:System.Web.UI.IHierarchyData.Item"/> property.
            </summary>
            <value></value>
            <returns>
            The name of the type of object that the <see cref="T:System.Web.UI.IHierarchyData"/> object represents.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityScope.GetHierarchyData(System.Object)">
            <summary>
            Returns a hierarchical data item for the specified enumerated item.
            </summary>
            <param name="enumeratedItem">The <see cref="T:System.Object"/> for which to return an <see cref="T:System.Web.UI.IHierarchyData"/>.</param>
            <returns>
            An <see cref="T:System.Web.UI.IHierarchyData"/> instance that represents the <see cref="T:System.Object"/> passed to the <see cref="M:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(System.Object)"/> method.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityScope.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Customers.Security.CustomerSecurityScope.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Customers.Security.ISecurityRepository">
            <summary>
            ISecurityRepository
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Customers.MixedSecurityDataRepostory">
            <summary>
            Represents mixed security role repository (ecf and ASP.NET memebership)
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Security.AccessDeniedException">
            <summary>
            Implements exception code for access denied exceptions.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Security.AccessDeniedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Security.AccessDeniedException"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Security.AccessDeniedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Security.AccessDeniedException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.Commerce.Security.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Security.AccessDeniedException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Mediachase.Commerce.Security.AccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Security.AccessDeniedException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Mediachase.Commerce.Security.Configuration.RoleDefinitionElement">
            <summary>
            Definition of single role element in web.config file
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Security.Configuration.RoleDefinitionElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Security.Configuration.RoleDefinitionElement"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.RoleDefinitionElement.Name">
            <summary>
            Gets the system name (the predefined key for this role type).
            </summary>
            <value>The system name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.RoleDefinitionElement.Value">
            <summary>
            Gets the configured role name.
            </summary>
            <value>The configured role name.</value>
        </member>
        <member name="T:Mediachase.Commerce.Security.Configuration.RoleElementCollection">
            <summary>
            Collection of RoleDefinition objects
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.RoleElementCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Mediachase.Commerce.Security.Configuration.RoleDefinitionElement"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.Commerce.Security.Configuration.RoleElementCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Security.Configuration.RoleElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Security.Configuration.SecurityCacheElement">
            <summary>
            SecurityCacheElement
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Security.Configuration.SecurityCacheElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Security.Configuration.SecurityCacheElement"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SecurityCacheElement.IsEnabled">
            <summary>
            Attribute determines whether in-memory caching is enabled or not.
            </summary>
            <value>
            	<c>true</c> if this instance is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SecurityCacheElement.UserCollectionTimeout">
            <summary>
            Gets or sets the user collection timeout.
            </summary>
            <value>The user collection timeout.</value>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SecurityCacheElement.UserTimeout">
            <summary>
            Configuration attribute which determines when the User value is
            automatically refreshed in memory.
            </summary>
            <value>The catalog entry timeout.</value>
        </member>
        <member name="M:Mediachase.Commerce.Security.Configuration.SecurityCacheElement.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Security.Configuration.SecurityConfigurationSection">
            <summary>
            Implemented as a thread-safe singleton class
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Security.Configuration.SecurityConfigurationSection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Security.Configuration.SecurityConfigurationSection"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SecurityConfigurationSection.Instance">
            <summary>
            Singleton instance
            </summary>
            <value>The instance.</value>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SecurityConfigurationSection.EnablePermissions">
            <summary>
            Gets a value indicating whether to enable permission checks in Commerce Manager.
            </summary>
            <value><c>true</c> if enable permission checks; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SecurityConfigurationSection.EnableSecurityScope">
            <summary>
            Gets a value indicating whether to enable security scope for supporting per-organization permissions. No longer used.
            </summary>
            <value><c>true</c> if enable security scope; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SecurityConfigurationSection.DefaultProviderName">
            <summary>
            Gets the default security provider.
            </summary>
            <value>The default provider.</value>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SecurityConfigurationSection.Connection">
            <summary>
            Gets the connection.
            </summary>
            <value>The connection.</value>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SecurityConfigurationSection.Cache">
            <summary>
            Config settings which define where caching is enabled and timeouts related to it.
            </summary>
            <value>The cache.</value>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SecurityConfigurationSection.Roles">
            <summary>
            Maps roles in Commerce Manager (the name) to a custom string (the value) for UI purposes. This setting is no longer used.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SecurityConfigurationSection.Providers">
            <summary>
            Gets the collection of security providers.
            </summary>
            <value>The providers.</value>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SecurityConfigurationSection.SingleSignOn">
            <summary>
            Enable SSO for Commerce Manager. This setting is no longer used.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Security.Configuration.SecurityConfigurationSection.GetRole(System.String)">
            <summary>
            Returns roles mapped to the key (name)
            </summary>
            <param name="key">The key.</param>
            <returns>The corresponding <see cref="T:Mediachase.Commerce.Core.RoleDefinition"/> if it exists; otherwise null.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Security.Configuration.SecurityConnectionElement">
            <summary>
            Implements operations for and represents the profile connection. (Inherits <see cref="T:System.Configuration.ConfigurationElement"/>.)
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Security.Configuration.SecurityConnectionElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Security.Configuration.SecurityConnectionElement"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SecurityConnectionElement.ConnectionStringName">
            <summary>
            Retrieves logical name of connection string in CommerceFramework Application hierarchy
            </summary>
            <value>The connection string name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SecurityConnectionElement.AppDatabase">
            <summary>
            Uses ConnectionStringName property to retrieve connection string from
            ConnectionStrings portion of app/web.config file
            </summary>
            <value>The app database.</value>
        </member>
        <member name="M:Mediachase.Commerce.Security.Configuration.SecurityConnectionElement.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Security.Configuration.SecurityProviderElement">
            <summary>
            SecurityProviderElement
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SecurityProviderElement.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SecurityProviderElement.Type">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Mediachase.Commerce.Security.Configuration.SecurityProviderElementCollection">
            <summary>
            SecurityProviderElementCollection
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Security.Configuration.SecurityProviderElementCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Security.Configuration.SecurityProviderElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"/> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"/> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SingleSignOnConfiguration.EnableSsoAuthentication">
            <summary>
            Enables the acceptance of SSO authentication as a login method.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SingleSignOnConfiguration.EnableTicketService">
            <summary>
            Enables the ticket service.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SingleSignOnConfiguration.TicketTimeout">
            <summary>
            The duration that a ticket is valid for after it is created.
            </summary>
            <remarks>
            This setting is only applicable to the ticket service, where the ticket duration is managed.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SingleSignOnConfiguration.TicketCreationRetries">
            <summary>
            The number of times that ticket creation will be retried if a collision on ticket values is found.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SingleSignOnConfiguration.RequireSecureConnection">
            <summary>
            If true, SSO authentication may only be performed over transport level security.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Security.Configuration.SingleSignOnConfiguration.SharedSecret">
            <summary>
            If not null/empty, a shared secret will be used to generate an encrypted key instead of just the raw token.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Security.CurrentUserService">
            <summary>
            A service for getting the current user.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Security.CurrentUserService.GetCurrentUser">
            <summary>
            Gets the current user using <see cref="P:EPiServer.Security.PrincipalInfo.CurrentPrincipal"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Security.Internal.SecurityOptionsExtensions">
            <summary>
            <see cref="T:Mediachase.Commerce.Security.SecurityOptions"/> extensions methods. These methods can be removed when the legacy configuration system is removed.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Security.IRoleManagement">
            <summary>
            IRoleManagement
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Security.IRoleManagement.GetRoleByName(System.String)">
            <summary>
            Loads the role.
            </summary>
            <param name="roleName">Name of the role.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Security.IRoleManagement.CreateRole(System.String,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Security.SecurityPermission})">
            <summary>
            Creates the role.
            </summary>
            <param name="roleName">Name of the role.</param>
            <param name="permissions">The permissions.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Security.IRoleManagement.UpdateRole(Mediachase.Commerce.Security.SecurityRole)">
            <summary>
            Updates the role.
            </summary>
            <param name="role">The role.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Security.IRoleManagement.DeleteRole(System.String)">
            <summary>
            Deletes the role.
            </summary>
            <param name="roleName">Name of the role.</param>
        </member>
        <member name="M:Mediachase.Commerce.Security.IRoleManagement.ListUserRoleAssigments(System.Web.Security.MembershipUser)">
            <summary>
            Gets all role assignment.
            </summary>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Security.IRoleManagement.CreateUserRoleAssignments(Mediachase.Commerce.Security.SecurityRoleAssignment)">
            <summary>
            Creates the user role assignments.
            </summary>
            <param name="roleAssignment">The role assignment.</param>
        </member>
        <member name="M:Mediachase.Commerce.Security.IRoleManagement.RemoveUserRoleAssignments(Mediachase.Commerce.Security.SecurityRoleAssignment)">
            <summary>
            Removes the user role assignments.
            </summary>
            <param name="roleAssignment">The role assignment.</param>
        </member>
        <member name="M:Mediachase.Commerce.Security.IRoleManagement.GetAllRegisteredRoles">
            <summary>
            Gets all roles.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Security.IRoleManagement.DeployPrincipalByUser(System.Web.Security.MembershipUser)">
            <summary>
            Deploys the principal by user.
            </summary>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Security.IRoleManagement.GetPrincipalByUser(System.Web.Security.MembershipUser)">
            <summary>
            Gets the principal by user.
            </summary>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Security.ISecurityCheck">
            <summary>
            Represents interface to security check logic
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Security.ISecurityProvider">
            <summary>
            Configured security providers must implement both <see cref="T:Mediachase.Commerce.Security.ISecurityCheck"/> and
            <see cref="T:Mediachase.Commerce.Security.IRoleManagement"/>. This interface provides a single interface indicating that
            a class implements both.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Security.Principal">
            <summary>
            Principal
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Security.Principal.Identity">
            <summary>
            Gets or sets the identity.
            </summary>
            <value>The identity.</value>
        </member>
        <member name="M:Mediachase.Commerce.Security.Principal.CreateInstance(System.String)">
            <summary>
            Creates the instance.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Security.PrincipalExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Security.Principal.IPrincipal"/> interface for getting contact information.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Security.PrincipalExtensions.GetCustomerContact(System.Security.Principal.IPrincipal)">
            <summary>
            Gets the <see cref="T:Mediachase.Commerce.Customers.CustomerContact"/>.
            </summary>
            <param name="principal">The principal.</param>
            <returns>Current customer contact</returns>
            <remarks>This method will create a customer contact if non exists.</remarks>
        </member>
        <member name="M:Mediachase.Commerce.Security.PrincipalExtensions.GetContactId(System.Security.Principal.IPrincipal)">
            <summary>
            Gets the <see cref="T:Mediachase.Commerce.Customers.CustomerContact"/> identifier.
            </summary>
            <param name="principal">The principal.</param>
            <returns>Guid primary key for contact</returns>
        </member>
        <member name="T:Mediachase.Commerce.Security.PrincipalInfoExtensions">
            <summary>
            Extension methods for <see cref="T:EPiServer.Security.PrincipalInfo"/>
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Security.PrincipalInfoExtensions.IsPermitted(EPiServer.Security.PrincipalInfo,System.Func{Mediachase.Commerce.Permissions,EPiServer.Security.PermissionType})">
            <summary>
            Determains if the permission type is permitted.
            </summary>
            <param name="principalInfo">The principal info</param>
            <param name="permission">The permission to check</param>
            <returns><c>True</c> if all permitted, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Security.PrincipalInfoExtensions.IsPermitted(EPiServer.Security.PrincipalInfo,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Determains if the permission type is permitted.
            </summary>
            <param name="principalInfo">The principal info</param>
            <param name="permissions">The permissions to check</param>
            <returns><c>True</c> if all permitted, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Security.PrincipalInfoExtensions.IsAnyPermitted(EPiServer.Security.PrincipalInfo,System.Func{Mediachase.Commerce.Permissions,System.Collections.Generic.IEnumerable{EPiServer.Security.PermissionType}})">
            <summary>
            Determains if any of the permission types are permitted.
            </summary>
            <param name="principalInfo">The principal info</param>
            <param name="permissions">The permissions to check</param>
            <returns><c>True</c> if all permitted, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Security.PrincipalInfoExtensions.IsAllPermitted(EPiServer.Security.PrincipalInfo,System.Func{Mediachase.Commerce.Permissions,System.Collections.Generic.IEnumerable{EPiServer.Security.PermissionType}})">
            <summary>
            Determains if all of the permission types are permitted.
            </summary>
            <param name="principalInfo">The principal info</param>
            <param name="permissions">The permissions to check</param>
            <returns><c>True</c> if all permitted, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Security.PrincipalInfoExtensions.ValidatePermission(EPiServer.Security.PrincipalInfo,System.Func{Mediachase.Commerce.Permissions,EPiServer.Security.PermissionType})">
            <summary>
            Throws <see cref="T:Mediachase.Commerce.Security.AccessDeniedException"/> if current principal not permitted.
            </summary>
            <param name="principalInfo">The principal to check permission for.</param>
            <param name="permission">The permission to check.</param>
            <exception cref="T:Mediachase.Commerce.Security.AccessDeniedException">Thrown if access is denied.</exception>
        </member>
        <member name="M:Mediachase.Commerce.Security.PrincipalInfoExtensions.ValidatePermissions(EPiServer.Security.PrincipalInfo,System.Func{Mediachase.Commerce.Permissions,System.Collections.Generic.IEnumerable{EPiServer.Security.PermissionType}})">
            <summary>
            Throws <see cref="T:Mediachase.Commerce.Security.AccessDeniedException"/> if current principal not permitted.
            </summary>
            <param name="principalInfo">The principal to check permission for.</param>
            <param name="permissions">The permissions to check.</param>
            <exception cref="T:Mediachase.Commerce.Security.AccessDeniedException">Thrown if access is denied.</exception>
        </member>
        <member name="M:Mediachase.Commerce.Security.PrincipalInfoExtensions.ValidatePermissions(EPiServer.Security.PrincipalInfo,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Throws <see cref="T:Mediachase.Commerce.Security.AccessDeniedException"/> if current principal not permitted.
            </summary>
            <param name="principalInfo">The principal to check permission for.</param>
            <param name="permissions">The permissions to check.</param>
            <exception cref="T:Mediachase.Commerce.Security.AccessDeniedException">Thrown if access is denied.</exception>
        </member>
        <member name="M:Mediachase.Commerce.Security.PrincipalInfoExtensions.ValidatePermission(EPiServer.Security.PrincipalInfo,System.String)">
            <summary>
            Throws <see cref="T:Mediachase.Commerce.Security.AccessDeniedException"/> if current principal not permitted.
            </summary>
            <param name="principalInfo">The principal to check permission for.</param>
            <param name="permission">The permissions to check.</param>
            <exception cref="T:Mediachase.Commerce.Security.AccessDeniedException">Thrown if access is denied.</exception>
        </member>
        <member name="T:Mediachase.Commerce.Security.SecurityCache">
            <summary>
            Implements cache operations for security entities.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityCache.CreateCacheKey(System.String[])">
            <summary>
            Creates the cache key.
            </summary>
            <param name="keys">The keys.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityCache.Clear">
            <summary>
            Removes all items from the Cache
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityCache.Remove(System.String)">
            <summary>
            Removes the specified key from the cache
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityCache.ReadThrough``1(System.String,System.Collections.Generic.IEnumerable{System.String},System.TimeSpan,System.Func{``0})">
            <summary>
            Read-through cache handling.
            </summary>
            <typeparam name="T">Type of the value to read.</typeparam>
            <param name="key">The key.</param>
            <param name="masterKeys">The master keys that the cached item should depend on.</param>
            <param name="timeout">The cache timeout.</param>
            <param name="load">The function to invoke for retrieving the value if it does not exist in the cache.</param>
            <returns>
            The object associated with the key, if it exists or is read thru the readValue fuction. Otherwise returns null.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityCache.Insert(System.String,System.Object,System.TimeSpan)">
            <summary>
            Inserts the value into the cache with the specified key, with dependency to a master key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value to cache.</param>
            <param name="timeout">The cache timeout.</param>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityCache.Get(System.String)">
            <summary>
            Gets the cached value for the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Security.SecurityCheckMode">
            <summary>
            CustomerSecurityCheckMode enum
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Security.SecurityCheckMode.DoNotAllowInheritRole">
            <summary>
            Do not allow inherit role in child objects
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Security.SecurityCheckMode.AllowInheritRole">
            <summary>
            Allow inherit role for child objects
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Security.SecurityCheckMode.UnsetRole">
            <summary>
            Undefine user specified role assignments (Delete thos role from results set)
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Security.SecurityContext">
            <summary>
            Manages access to information about the current user and their permissions.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Security.SecurityContext.Current">
            <summary>
            Gets or sets the instance of <see cref="T:Mediachase.Commerce.Security.SecurityContext"/> associated with the current
            thread or http request.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Security.SecurityContext.CurrentUserProfile">
            <summary>
            Gets a wrapper for the profile in <see cref="P:System.Web.HttpContext.Current"/>, or null if the
            profile in <see cref="P:System.Web.HttpContext.Current"/> is null.
            </summary>
            <remarks>
            This property passes directly into the System.Web namespace. The information provided
            may be retrieved without use of <see cref="T:Mediachase.Commerce.Security.SecurityContext"/>.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.Security.SecurityContext.SecurityCheckInstance">
            <summary>
            Gets the underlying <see cref="T:Mediachase.Commerce.Security.ISecurityCheck"/> provider instance.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Security.SecurityContext.SecurityManagerInstance">
            <summary>
            Gets the underlying <see cref="T:Mediachase.Commerce.Security.IRoleManagement"/> provider instance.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Security.SecurityContext.IsPermissionCheckEnable">
            <summary>
            Gets the value of <see cref="P:Mediachase.Commerce.Security.ISecurityCheck.PermissionCheckEnable"/> from the
            configured security provider.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Security.SecurityContext.IsSecurityScopeEnable">
            <summary>
            Gets the value of the EnableSecurityScope configuration setting.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityContext.#ctor(Mediachase.Commerce.Security.ISecurityProvider)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.Security.SecurityContext"/>.
            </summary>
            <param name="securityProvider">The <see cref="T:Mediachase.Commerce.Security.ISecurityProvider"/> instance to use.</param>
            <remarks>
            Some implementations of security providers may implement both the
            <see cref="T:Mediachase.Commerce.Security.ISecurityCheck"/> and <see cref="T:Mediachase.Commerce.Security.IRoleManagement"/>, but not
            <see cref="T:Mediachase.Commerce.Security.ISecurityProvider"/>. The <see cref="T:Mediachase.Commerce.Security.SecurityProviderUpgradeProxy"/> class
            is provided to wrap a class implementing <see cref="T:Mediachase.Commerce.Security.ISecurityCheck"/> and
            <see cref="T:Mediachase.Commerce.Security.IRoleManagement"/> in a proxy implementing <see cref="T:Mediachase.Commerce.Security.ISecurityProvider"/>,
            so that that the service locator will know that the two interfaces are implemented by
            the same class (the configuration file format does not support specifying separate
            classes for <see cref="T:Mediachase.Commerce.Security.ISecurityCheck"/> and <see cref="T:Mediachase.Commerce.Security.IRoleManagement"/>).
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityContext.#ctor(Mediachase.Commerce.Security.SecurityContext.ISecurityContextEnvironment,Mediachase.Commerce.Security.ISecurityProvider)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.Security.SecurityContext"/>.
            </summary>
            <param name="environment">
            The <see cref="T:Mediachase.Commerce.Security.SecurityContext.ISecurityContextEnvironment"/> instance to use. Should always be
            <see cref="F:Mediachase.Commerce.Security.SecurityContext.SecurityContextEnvironment.Instance"/> unless unit testing.
            </param>
            <param name="securityProvider">The <see cref="T:Mediachase.Commerce.Security.ISecurityProvider"/> instance to use.</param>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityContext.GetProfileByUserProviderKey(System.Guid)">
            <summary>
            Gets the <see cref="T:System.Web.Profile.ProfileBase"/> for the user specified by <paramref name="userProviderKey"/>.
            </summary>
            <param name="userProviderKey">The ID of the desired user.</param>
            <returns>
            A <see cref="T:System.Web.Profile.ProfileBase"/> for the user specified by 
            <paramref name="userProviderKey"/>, created by name for an unauthenticated used; or
            null if the specified user's profile is not found.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityContext.DeleteUserAndAllRelatedData(System.Web.Security.MembershipUser)">
            <summary>
            Deletes the user and all related data.
            </summary>
            <param name="user">The user to delete.</param>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityContext.DeployPrincipalByUser(System.Web.Security.MembershipUser)">
            <summary>
            Deploys the principal by user.
            </summary>
            <param name="user">The user.</param>
            <returns></returns>
            <remarks>
            This method is a direct pass through to <see cref="M:Mediachase.Commerce.Security.IRoleManagement.DeployPrincipalByUser(System.Web.Security.MembershipUser)"/>.
            The CustomerContact associated with the user must be saved before calling this method. Otherwise contact information might be lost.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityContext.GetPrincipalByUser(System.Web.Security.MembershipUser)">
            <summary>
            Gets the principal by user.
            </summary>
            <param name="user">The user.</param>
            <returns></returns>
            <remarks>
            This method is a direct pass-through to <see cref="M:Mediachase.Commerce.Security.IRoleManagement.CreateUserRoleAssignments(Mediachase.Commerce.Security.SecurityRoleAssignment)"/>.
            The CustomerContact associated with the user must be saved before calling this method. Otherwise contact information might be lost.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityContext.ValidateMembershipUserPassword(System.String)">
            <summary>
            Validates the membership user password against the strong password requirements.
            </summary>
            <param name="password">The password to validate.</param>
            <returns>
            A <see cref="T:Mediachase.Commerce.Security.UserPasswordValidationResult"/> value indicating the results of the
            validation.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityContext.GetConfiguredSecurityProviderConstructor(System.String)">
            <summary>
            Gets a function that will create an instance of the security provider defined in the
            security configuration. Will throw an exception if the configuration is missing or
            invalid.
            </summary>
            <param name="providerName">
            The name of the provider to use, or null to use the default provider specified in
            configuration.
            </param>
            <returns>
            A function that will create an instance of the configured security provider type.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityContext.GetCurrentUserProfile">
            <summary>
            Gets a wrapper for the current profile in <see cref="P:System.Web.HttpContext.Current"/>.
            </summary>
            <returns>
            A wrapper for the current profile, or null if there is not a current profile.
            </returns>
            <remarks>
            The <see cref="T:System.Web.Profile.ProfileBase"/> class has a strong dependency on the profile system; as
            a result, this method cannot be unit tested and does not use 
            <see cref="T:Mediachase.Commerce.Security.SecurityContext.ISecurityContextEnvironment"/>.
            </remarks>
        </member>
        <member name="T:Mediachase.Commerce.Security.SecurityContext.ISecurityContextEnvironment">
            <summary>
            Contains stubs to access non-overridable static values that need to be replaced for unit testing.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Security.SecurityOptions">
            <summary>
            Contains options for the security system.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Security.SecurityOptions.UseCache">
            <summary>
            Indicates if the cache is enabled.
            </summary>
            <remarks>Default value is true.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Security.SecurityOptions.UserCollectionCacheExpiration">
            <summary>
            The expiration time for user collection entity in the cache.
            </summary>
            <remarks>Default value is 10 minutes.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Security.SecurityOptions.UserCacheExpiration">
            <summary>
            The expiration time for user entity in the cache.
            </summary>
            <remarks>Default value is 10 minutes.</remarks>
        </member>
        <member name="T:Mediachase.Commerce.Security.SecurityPermission">
            <summary>
            SecurityPermission
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityPermission.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Security.SecurityPermission"/> class.
            </summary>
            <param name="permissionName">Name of the permission.</param>
        </member>
        <member name="P:Mediachase.Commerce.Security.SecurityPermission.PermissionName">
            <summary>
            Gets or sets the name of the permission.
            </summary>
            <value>The name of the permission.</value>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityPermission.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Security.SecurityProviderUpgradeProxy">
            <summary>
            Wraps legacy security providers that implement <see cref="T:Mediachase.Commerce.Security.ISecurityCheck"/> and 
            <see cref="T:Mediachase.Commerce.Security.IRoleManagement"/> in a class that implements <see cref="T:Mediachase.Commerce.Security.ISecurityProvider"/>.
            All functionality passes directly to the inner provider(s).
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityProviderUpgradeProxy.#ctor(System.Object)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.Security.SecurityProviderUpgradeProxy"/> wrapping a single
            provider instance that implements both <see cref="T:Mediachase.Commerce.Security.ISecurityCheck"/> and
            <see cref="T:Mediachase.Commerce.Security.IRoleManagement"/>.
            </summary>
            <param name="securityProvider">
            The provider to wrap.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="securityProvider"/> is null.
            </exception>
            <exception cref="T:System.InvalidCastException">
            <paramref name="securityProvider"/> does not implement <see cref="T:Mediachase.Commerce.Security.ISecurityCheck"/> or
            <see cref="T:Mediachase.Commerce.Security.IRoleManagement"/>.
            </exception>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityProviderUpgradeProxy.#ctor(Mediachase.Commerce.Security.ISecurityCheck,Mediachase.Commerce.Security.IRoleManagement)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.Security.SecurityProviderUpgradeProxy"/> wrapping instances
            of <see cref="T:Mediachase.Commerce.Security.ISecurityCheck"/> and <see cref="T:Mediachase.Commerce.Security.IRoleManagement"/>.
            </summary>
            <param name="securityCheck">The <see cref="T:Mediachase.Commerce.Security.ISecurityCheck"/> provider to wrap.</param>
            <param name="roleManagement">The <see cref="T:Mediachase.Commerce.Security.IRoleManagement"/> provider to wrap.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="securityCheck"/> or <paramref name="roleManagement"/> is null.
            </exception>
        </member>
        <member name="P:Mediachase.Commerce.Security.SecurityProviderUpgradeProxy.SecurityCheckProvider">
            <summary>
            Gets the underlying <see cref="T:Mediachase.Commerce.Security.ISecurityCheck"/> provider instance.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Security.SecurityProviderUpgradeProxy.RoleManagementProvider">
            <summary>
            Gets the underlying <see cref="T:Mediachase.Commerce.Security.IRoleManagement"/> provider instance.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Security.SecurityRole">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityRole.#ctor(System.String,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Security.SecurityPermission})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Security.SecurityRole"/> class.
            </summary>
            <param name="roleName">Name of the role.</param>
            <param name="permissions">The permisssions.</param>
        </member>
        <member name="M:Mediachase.Commerce.Security.SecurityRole.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Security.SecurityRole"/> class.
            </summary>
            <param name="roleName">Name of the role.</param>
        </member>
        <member name="P:Mediachase.Commerce.Security.SecurityRole.RoleName">
            <summary>
            Gets or sets the name of the role.
            </summary>
            <value>The name of the role.</value>
        </member>
        <member name="P:Mediachase.Commerce.Security.SecurityRole.Permissions">
            <summary>
            Gets or sets the permissions.
            </summary>
            <value>The permissions.</value>
        </member>
        <member name="T:Mediachase.Commerce.Security.UserPasswordValidationResult">
            <summary>
            Represents all posible ASP.NET membership password validation results
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Security.UserPasswordValidationResult.PasswordOk">
            <summary>
            Password is ok
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Security.UserPasswordValidationResult.MinRequiredPasswordLength">
            <summary>
             minimum length required for a password.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Security.UserPasswordValidationResult.MinRequiredNonAlphanumericCharacters">
            <summary>
            minimum number of special characters that must be present in a valid
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Security.UserPasswordValidationResult.PasswordStrengthRegularExpression">
            <summary>
            regular expression used to evaluate a password.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Customization.Configuration.CustomizationConfiguration">
            <summary>
            Represents customization configuration.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customization.Configuration.CustomizationConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customization.Configuration.CustomizationConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Customization.Configuration.CustomizationConfiguration.Instance">
            <summary>
            Singleton instance
            </summary>
            <value>The instance.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customization.Configuration.CustomizationConfiguration.Connection">
            <summary>
            Gets the connection.
            </summary>
            <value>The connection.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customization.Configuration.CustomizationConfiguration.AutoInstall">
            <summary>
            Gets a value indicating whether [auto install].
            </summary>
            <value><c>true</c> if [auto install]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Mediachase.Commerce.Customization.Configuration.CustomizationConnectionElement">
            <summary>
            Represents customization connection element.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customization.Configuration.CustomizationConnectionElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customization.Configuration.CustomizationConnectionElement"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Customization.Configuration.CustomizationConnectionElement.ConnectionStringName">
            <summary>
            Retrieves logical name of connection string in CommerceFramework Application hierarchy
            </summary>
            <value>The connection string name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Customization.Configuration.CustomizationConnectionElement.MainDatabase">
            <summary>
            Gets the customer database.
            </summary>
            <value>The customer database.</value>
        </member>
        <member name="M:Mediachase.Commerce.Customization.Configuration.CustomizationConnectionElement.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Customization.CustomizationItemArgumentRequestHandler">
            <summary>
            Represents CustomizationItemArgument request handler.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customization.CustomizationItemArgumentRequestHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customization.CustomizationItemArgumentRequestHandler"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customization.CustomizationItemArgumentRequestHandler.CreateEntityObject(System.String,System.Nullable{Mediachase.BusinessFoundation.Data.PrimaryKeyId})">
            <summary>
            Creates the entity object.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Customization.CustomizationItemRequestHandler">
            <summary>
            Represents Customization Item Request Handler.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customization.CustomizationItemRequestHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customization.CustomizationItemRequestHandler"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customization.CustomizationItemRequestHandler.CreateEntityObject(System.String,System.Nullable{Mediachase.BusinessFoundation.Data.PrimaryKeyId})">
            <summary>
            Creates the entity object.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Customization.CustomPageLevel">
            <summary>
            Defines custom page level.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customization.CustomPageLevel.Disk">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customization.CustomPageLevel.Global">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customization.CustomPageLevel.User">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Customization.CustomPageManager">
            <summary>
            Represents custom page manager.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customization.CustomPageManager.GetCustomPage(System.Guid,System.Nullable{System.Guid})">
            <summary>
            Gets the custom page.
            </summary>
            <param name="uid">The page uid.</param>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customization.CustomPageManager.UpdateCustomPage(System.Guid,System.String,System.Guid,System.Nullable{System.Guid})">
            <summary>
            Updates the custom page.
            </summary>
            <param name="uid">The page uid.</param>
            <param name="jsonData">The json data.</param>
            <param name="templateUid">The template uid.</param>
            <param name="userId">The user id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customization.CustomPageManager.UpdateCustomPageProperty(System.Guid,System.String,System.Nullable{System.Guid})">
            <summary>
            Updates the custom page property.
            </summary>
            <param name="uid">The uid.</param>
            <param name="propertyJsonData">The property json data.</param>
            <param name="userId">The user id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customization.CustomPageManager.ResetCustomPage(System.Guid,System.Nullable{System.Guid})">
            <summary>
            Resets the custom page.
            </summary>
            <param name="uid">The page uid.</param>
            <param name="userId">The user id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customization.CustomPageManager.ResetUserSettings(System.Guid)">
            <summary>
            Resets the user settings
            </summary>
            <param name="uid">The page uid.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customization.CustomPageManager.DeleteCustomPage(System.Guid)">
            <summary>
            Deletes the custom page.
            </summary>
            <param name="uid">The uid.</param>
        </member>
        <member name="T:Mediachase.Commerce.Customization.CustomPageRequestHandler">
            <summary>
            Represents custom page request handler.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customization.CustomPageRequestHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Customization.CustomizationItemArgumentRequestHandler"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customization.CustomPageRequestHandler.CreateEntityObject(System.String,System.Nullable{Mediachase.BusinessFoundation.Data.PrimaryKeyId})">
            <summary>
            Creates the entity object.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Customization.NavigationFileProvider">
            <summary>
            Represents navigation file provider.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationFileProvider.GetFiles(System.String,System.String,Mediachase.BusinessFoundation.Selector[])">
            <summary>
            Gets the files.
            </summary>
            <param name="structureName">Name of the structure.</param>
            <param name="searchPattern">The search pattern.</param>
            <param name="selectors">The selectors.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationFileProvider.ProcessItems(Mediachase.BusinessFoundation.Data.Business.EntityObject[],System.Collections.Generic.List{Mediachase.BusinessFoundation.FileDescriptor})">
            <summary>
            Processes the items.
            </summary>
            <param name="items">The items.</param>
            <param name="files">The files.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationFileProvider.BuildXmlForAdd(Mediachase.Commerce.Customization.CustomizationItemEntity,System.Collections.Generic.Dictionary{System.String,Mediachase.Commerce.Customization.CustomizationItemArgumentEntity})">
            <summary>
            Builds the XML for add.
            </summary>
            <param name="item">The item.</param>
            <param name="arguments">The arguments.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationFileProvider.BuildXmlForUpdate(Mediachase.Commerce.Customization.CustomizationItemEntity,System.Collections.Generic.Dictionary{System.String,Mediachase.Commerce.Customization.CustomizationItemArgumentEntity})">
            <summary>
            Builds the XML for update.
            </summary>
            <param name="item">The item.</param>
            <param name="arguments">The arguments.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationFileProvider.BuildXmlForRemove(Mediachase.Commerce.Customization.CustomizationItemEntity)">
            <summary>
            Builds the XML for remove.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationFileProvider.WriteSetCommand(System.Xml.XmlWriter,System.String,System.String,System.String,System.String)">
            <summary>
            Writes the set command.
            </summary>
            <param name="writer">The writer.</param>
            <param name="elementName">Name of the element.</param>
            <param name="elementId">The element id.</param>
            <param name="attributeName">Name of the attribute.</param>
            <param name="attributeValue">The attribute value.</param>
        </member>
        <member name="T:Mediachase.Commerce.Customization.NavigationManager">
            <summary>
            Represents navigation manager.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationManager.AddNavigationItem(System.String,System.Int32,System.String,System.String,System.String,Mediachase.BusinessFoundation.Data.Meta.FileInfo)">
            <summary>
            Adds the navigation Item.
            </summary>
            <param name="parentFullId">The parent full id.</param>
            <param name="order">The order.</param>
            <param name="text">The text.</param>
            <param name="url">The URL.</param>
            <param name="permissions">The permissions.</param>
            <param name="iconInfo">The icon info.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationManager.UpdateNavigationItem(System.String,System.Int32,System.String,System.String,System.String,Mediachase.BusinessFoundation.Data.Meta.FileInfo)">
            <summary>
            Updates the navigation item.
            </summary>
            <param name="fullId">The full id.</param>
            <param name="order">The order.</param>
            <param name="text">The text.</param>
            <param name="url">The URL.</param>
            <param name="permissions">The permissions.</param>
            <param name="iconInfo">The icon info.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationManager.DeleteNavigationItem(System.String)">
            <summary>
            Deletes the navigation item.
            </summary>
            <param name="fullId">The full id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationManager.ModifyNavigationItem(System.String,System.Int32,System.String,System.String,Mediachase.BusinessFoundation.Data.Meta.FileInfo)">
            <summary>
            Modifies the navigation item.
            </summary>
            <param name="fullId">The full id.</param>
            <param name="order">The order.</param>
            <param name="text">The text.</param>
            <param name="permissions">The permissions.</param>
            <param name="iconInfo">The icon info.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationManager.UndoModifyNavigationItem(System.String)">
            <summary>
            Undoes the modify navigation item.
            </summary>
            <param name="xmlFullId">The XML full id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationManager.HideCustomizationItem(System.String)">
            <summary>
            Hides the customization item.
            </summary>
            <param name="fullId">The full id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationManager.ShowCustomizationItem(System.String)">
            <summary>
            Shows the hidden customization item.
            </summary>
            <param name="fullId">The full id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationManager.GetCustomizationItemArguments(System.String,Mediachase.Commerce.Customization.ItemCommandType)">
            <summary>
            Gets the customization item arguments.
            </summary>
            <param name="fullId">The full id.</param>
            <param name="commandType">Type of the command.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationManager.GetCustomizationItemArguments(Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Gets the customization item arguments.
            </summary>
            <param name="itemId">The item id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationManager.AddClientScriptItem(System.String,System.Int32,System.String,System.String,System.String,Mediachase.BusinessFoundation.Data.Meta.FileInfo)">
            <summary>
            Adds the client script item.
            </summary>
            <param name="parentFullId">The parent full id.</param>
            <param name="order">The order.</param>
            <param name="text">The text.</param>
            <param name="script">The script.</param>
            <param name="permissions">The permissions.</param>
            <param name="iconInfo">The icon info.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationManager.UpdateClientScriptItem(System.String,System.Int32,System.String,System.String,System.String,Mediachase.BusinessFoundation.Data.Meta.FileInfo)">
            <summary>
            Updates the client script item.
            </summary>
            <param name="fullId">The full id.</param>
            <param name="order">The order.</param>
            <param name="text">The text.</param>
            <param name="script">The script.</param>
            <param name="permissions">The permissions.</param>
            <param name="iconInfo">The icon info.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationManager.CreateCustomizationItemByParent(System.String,Mediachase.Commerce.Customization.ItemCommandType)">
            <summary>
            Creates the navigation item by parent.
            </summary>
            <param name="parentFullId">The parent full id.</param>
            <param name="commandType">Type of the command.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationManager.CreateCustomizationItem(System.String,Mediachase.Commerce.Customization.ItemCommandType)">
            <summary>
            Creates the navigation item.
            </summary>
            <param name="fullId">The full id.</param>
            <param name="commandType">Type of the command.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationManager.GetCustomizationItem(System.String,Mediachase.Commerce.Customization.ItemCommandType)">
            <summary>
            Gets the customization item.
            </summary>
            <param name="fullId">The full id.</param>
            <param name="commandType">Type of the command.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationManager.CreateCustomizationItemArgument(Mediachase.BusinessFoundation.Data.PrimaryKeyId,System.String,System.String)">
            <summary>
            Creates the navigation item argument.
            </summary>
            <param name="itemId">The item id.</param>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationManager.UpdateCustomizationItemArgument(Mediachase.Commerce.Customization.CustomizationItemArgumentEntity,System.String)">
            <summary>
            Updates the customization item argument.
            </summary>
            <param name="argument">The argument.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customization.NavigationManager.ClearCache">
            <summary>
            Clears the cache.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Customization.NavigationWriterAttribute">
            <summary>
            Represents navigation writer attribute.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customization.NavigationWriterAttribute.Command">
            <summary>
            Represents "command" attribute
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customization.NavigationWriterAttribute.ConfigUrl">
            <summary>
            Represents "configUrl" attribute
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customization.NavigationWriterAttribute.ContentType">
            <summary>
            Represents "contentType" attribute
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customization.NavigationWriterAttribute.IconCss">
            <summary>
            Represents "iconCss" attribute
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customization.NavigationWriterAttribute.IconUrl">
            <summary>
            Represents "iconUrl" attribute
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customization.NavigationWriterAttribute.Id">
            <summary>
            Represents "id" attribute
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customization.NavigationWriterAttribute.ImageUrl">
            <summary>
            Represents "imageUrl" attribute
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customization.NavigationWriterAttribute.Name">
            <summary>
            Represents "name" attribute
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customization.NavigationWriterAttribute.NodeId">
            <summary>
            Represents "nodeId" attribute
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customization.NavigationWriterAttribute.Order">
            <summary>
            Represents "order" attribute
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customization.NavigationWriterAttribute.Permissions">
            <summary>
            Represents "permissions" attribute
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customization.NavigationWriterAttribute.Sort">
            <summary>
            Represents "sort" attribute
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customization.NavigationWriterAttribute.SortDataType">
            <summary>
            Represents "sortDataType" attribute
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customization.NavigationWriterAttribute.SortSubNodes">
            <summary>
            Represents "sortSubNodes" attribute
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customization.NavigationWriterAttribute.Text">
            <summary>
            Represents "text" attribute
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Customization.NavigationWriterAttribute.Value">
            <summary>
            Represents "value" attribute
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Customization.Plugins.AutoInstallMetaDataModule">
            <summary>
            Represents auto install meta data module.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Customization.Plugins.AutoInstallMetaDataModule.MetaDataConnectionString">
            <summary>
            Gets the meta data connection string.
            </summary>
            <value>The meta data connection string.</value>
        </member>
        <member name="M:Mediachase.Commerce.Customization.Plugins.AutoInstallMetaDataModule.Execute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:Mediachase.Commerce.Customization.Plugins.AutoInstallMetaDataModule.SortOrder">
            <summary>
            Gets the order of plugins initialization
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customization.Plugins.AutoInstallMetaDataModule.CheckNeedInstall(System.String)">
            <summary>
            Checks the need install.
            </summary>
            <param name="connectionString">The connection string.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Customization.Plugins.AutoInstallMetaDataModule.InstallCustomizationMetaData">
            <summary>
            Installs the customization meta data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Customization.Plugins.CustomPageNormalizationPlugin">
            <summary>
            Represents custom page normalization plugin.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Customization.Plugins.CustomPageNormalizationPlugin.Execute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Customization.Plugins.CustomPageNormalizationPlugin.GetLevel(Mediachase.Commerce.Customization.CustomPageEntity)">
            <summary>
            Gets the level.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.DateTimeConverters.DateTimeConverter.ConvertDatabaseValue(System.Object)">
            <summary>
            Converts an object returned from a database call to a UTC <see cref="T:DateTime"/> value.
            </summary>
            <param name="value">
            An object representing a <see cref="T:DateTime"/> returned from a database call.
            </param>
            <returns>
            The converted value, or null if value is null or equal to <see cref="F:DBNull.Value"/>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.DateTimeConverters.DateTimeConverter.ToLocalTime(System.DateTime,System.Boolean)">
            <summary>
            Converts <paramref name="value"/> to local time.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="convertUnspecified">
            If true, values with <see cref="P:DateTime.Kind"/> set to 
            <see cref="F:DateTimeKind.Unspecified"/> will be converted to local time (the same
            behavior as <see cref="M:DateTime.ToLocalTime"/>); if false,
            they will only have <see cref="P:DateTime.Kind"/> set to 
            <see cref="F:DateTimeKind.Local"/>.
            </param>
            <returns>
            The possibly converted <see cref="T:DateTime"/> value.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.DateTimeConverters.DateTimeConverter.ToUniversalTime(System.DateTime,System.Boolean)">
            <summary>
            Converts <paramref name="value"/> to universal time.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="convertUnspecified">
            If true, values with <see cref="P:DateTime.Kind"/> set to 
            <see cref="F:DateTimeKind.Unspecified"/> will be converted to universal time (the same
            behavior as <see cref="M:DateTime.ToUniversalTime"/>); if false,
            they will only have <see cref="P:DateTime.Kind"/> set to 
            <see cref="F:DateTimeKind.Utc"/>.
            </param>
            <returns>
            The possibly converted <see cref="T:DateTime"/> value.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.DateTimeConverters.DateTimeConverter.ParseToUtc(System.String)">
            <summary>
            Converts the specified string representation of a date and time to its <see cref="T:System.DateTime"/>
            equivalent, with a <see cref="P:System.DateTime.Kind"/> value of <see cref="F:DateTimeKind.Utc"/>.
            </summary>
            <param name="stringValue">A string containing a date and time to convert.</param>
            <returns>
            An object that is equivalent to the date and time contained in <paramref name="stringValue"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="stringValue"/> is null.</exception>
            <exception cref="T:System.FormatException">
            <paramref name="stringValue"/> does not contain a valid string representation of a date and time.
            </exception>
            <remarks>
            If a call to <see cref="M:DateTime.Parse(string)"/> with the same parameter would return
            a value with <see cref="P:System.DateTime.Kind"/> equal to <see cref="F:DateTimeKind.Local"/>,
            then the value is converted to local time; otherise, the result value is specified as
            UTC.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.DateTimeConverters.DateTimeConverter.ParseToUtc(System.String,System.IFormatProvider)">
            <summary>
            Converts the specified string representation of a date and time to its <see cref="T:System.DateTime"/>
            equivalent using the specified culture-specific format information, with a 
            <see cref="P:System.DateTime.Kind"/> value of <see cref="F:DateTimeKind.Utc"/>.
            </summary>
            <param name="stringValue">A string containing a date and time to convert.</param>
            <param name="provider">An object that supplies culture-specific format information about <paramref name="stringValue"/>.</param>
            <returns>An object that is equivalent to the date and time contained in s as specified by <paramref name="provider"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="stringValue"/> is null.</exception>
            <exception cref="T:System.FormatException">
            <paramref name="stringValue"/> does not contain a valid string representation of a date and time.
            </exception>
            <remarks>
            If a call to <see cref="M:DateTime.Parse(string)"/> with the same parameter would return
            a value with <see cref="P:System.DateTime.Kind"/> equal to <see cref="F:DateTimeKind.Local"/>,
            then the value is converted to local time; otherise, the result value is specified as
            UTC.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.DateTimeConverters.DateTimeConverter.TryParseToUtc(System.String,System.DateTime@)">
            <summary>
            Converts the specified string representation of a date and time to its 
            <see cref="T:System.DateTime"/> equivalent, with a 
            <see cref="P:System.DateTime.Kind"/> value of <see cref="F:DateTimeKind.Utc"/>; and returns a 
            value that indicates whether the conversion succeeded.
            </summary>
            <param name="stringValue">A string containing a date and time to convert.</param>
            <param name="result">
            When this method returns, contains the <see cref="T:System.DateTime"/> value equivalent to the 
            date and time contained in <paramref name="stringValue"/>, if the conversion succeeded,
            or <see cref="F:DateTime.MinValue"/> if the conversion failed. The conversion fails if 
            the <paramref name="stringValue"/> parameter is null, is an empty string (""), or does 
            not contain a valid string representation of a date and time. This parameter is passed
            uninitialized.</param>
            <returns>
            True if the <paramref name="stringValue"/> parameter was converted successfully; 
            otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The date is in Japanese Emperor Year (Wareki) format and the year is out of range.
            </exception>
            <remarks>
            If a call to <see cref="M:DateTime.Parse(string)"/> with the same parameter would return
            a value with <see cref="P:System.DateTime.Kind"/> equal to <see cref="F:DateTimeKind.Local"/>,
            then the value is converted to local time; otherise, the result value is specified as
            UTC.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.DateTimeConverters.DateTimeHandling.Implementation">
            <summary>
            For internal and testing use only.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.DateTimeConverters.DateTimeHandling.ConvertDatabaseValue(System.Object)">
            <summary>
            Converts an object returned from a database call to a UTC <see cref="T:DateTime"/> value.
            </summary>
            <param name="value">
            An object representing a <see cref="T:DateTime"/> returned from a database call.
            </param>
            <returns>
            The converted value, or null if value is null or equal to <see cref="F:DBNull.Value"/>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.DateTimeConverters.DateTimeHandling.ToLocalTime(System.DateTime,System.Boolean)">
            <summary>
            Converts the value of the current <see cref="T:System.DateTime"/> to local time.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="convertUnspecified">
            If true, values with <see cref="P:DateTime.Kind"/> set to 
            <see cref="F:DateTimeKind.Unspecified"/> will be converted to local time (the same
            behavior as <see cref="M:DateTime.ToLocalTime"/>); if false,
            they will only have <see cref="P:DateTime.Kind"/> set to 
            <see cref="F:DateTimeKind.Local"/>.
            </param>
            <returns>
            The possibly converted <see cref="T:DateTime"/> value.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.DateTimeConverters.DateTimeHandling.ToUniversalTime(System.DateTime,System.Boolean)">
            <summary>
            Converts the specified string representation of a date and time to its <see cref="T:System.DateTime"/>
            equivalent, with a <see cref="P:System.DateTime.Kind"/> value of <see cref="F:DateTimeKind.Utc"/>.
            </summary>
            <param name="value">A string containing a date and time to convert.</param>
            <param name="convertUnspecified">Convert to universal time or not.</param>
            <returns>
            An object that is equivalent to the date and time contained in <paramref name="value"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
            <exception cref="T:System.FormatException">
            <paramref name="value"/> does not contain a valid string representation of a date and time.
            </exception>
            <remarks>
            If a call to <see cref="M:DateTime.Parse(string)"/> with the same parameter would return
            a value with <see cref="P:System.DateTime.Kind"/> equal to <see cref="F:DateTimeKind.Local"/>,
            then the value is converted to local time; otherise, the result value is specified as
            UTC.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.DateTimeConverters.DateTimeHandling.ParseToUtc(System.String)">
            <summary>
            Converts the specified string representation of a date and time to its <see cref="T:System.DateTime"/>
            equivalent, with a <see cref="P:System.DateTime.Kind"/> value of <see cref="F:DateTimeKind.Utc"/>.
            </summary>
            <param name="stringValue">A string containing a date and time to convert.</param>
            <returns>
            An object that is equivalent to the date and time contained in <paramref name="stringValue"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="stringValue"/> is null.</exception>
            <exception cref="T:System.FormatException">
            <paramref name="stringValue"/> does not contain a valid string representation of a date and time.
            </exception>
            <remarks>
            If a call to <see cref="M:DateTime.Parse(string)"/> with the same parameter would return
            a value with <see cref="P:System.DateTime.Kind"/> equal to <see cref="F:DateTimeKind.Local"/>,
            then the value is converted to local time; otherise, the result value is specified as
            UTC.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.DateTimeConverters.DateTimeHandling.ParseToUtc(System.String,System.IFormatProvider)">
            <summary>
            Converts the specified string representation of a date and time to its <see cref="T:System.DateTime"/>
            equivalent using the specified culture-specific format information, with a 
            <see cref="P:System.DateTime.Kind"/> value of <see cref="F:DateTimeKind.Utc"/>.
            </summary>
            <param name="stringValue">A string containing a date and time to convert.</param>
            <param name="provider">An object that supplies culture-specific format information about <paramref name="stringValue"/>.</param>
            <returns>An object that is equivalent to the date and time contained in s as specified by <paramref name="provider"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="stringValue"/> is null.</exception>
            <exception cref="T:System.FormatException">
            <paramref name="stringValue"/> does not contain a valid string representation of a date and time.
            </exception>
            <remarks>
            If a call to <see cref="M:DateTime.Parse(string)"/> with the same parameter would return
            a value with <see cref="P:System.DateTime.Kind"/> equal to <see cref="F:DateTimeKind.Local"/>,
            then the value is converted to local time; otherise, the result value is specified as
            UTC.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.DateTimeConverters.DateTimeHandling.TryParseToUtc(System.String,System.DateTime@)">
            <summary>
            Converts the specified string representation of a date and time to its 
            <see cref="T:System.DateTime"/> equivalent, with a 
            <see cref="P:System.DateTime.Kind"/> value of <see cref="F:DateTimeKind.Utc"/>; and returns a 
            value that indicates whether the conversion succeeded.
            </summary>
            <param name="stringValue">A string containing a date and time to convert.</param>
            <param name="result">
            When this method returns, contains the <see cref="T:System.DateTime"/> value equivalent to the 
            date and time contained in <paramref name="stringValue"/>, if the conversion succeeded,
            or <see cref="F:DateTime.MinValue"/> if the conversion failed. The conversion fails if 
            the <paramref name="stringValue"/> parameter is null, is an empty string (""), or does 
            not contain a valid string representation of a date and time. This parameter is passed
            uninitialized.</param>
            <returns>
            True if the <paramref name="stringValue"/> parameter was converted successfully; 
            otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The date is in Japanese Emperor Year (Wareki) format and the year is out of range.
            </exception>
            <remarks>
            If a call to <see cref="M:DateTime.Parse(string)"/> with the same parameter would return
            a value with <see cref="P:System.DateTime.Kind"/> equal to <see cref="F:DateTimeKind.Local"/>,
            then the value is converted to local time; otherise, the result value is specified as
            UTC.
            </remarks>
        </member>
        <member name="T:Mediachase.Commerce.Engine.ActivityFlow">
            <summary>
            Represents the base class of workflow in the epi commerce workflow engine.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlow.ShouldCheckInstoreInventory">
            <summary>
            Checks whether we must check instore inventory or not
            </summary>
            <returns><c>true</c> if the dictionary PickupWarehouseInShipment has value; otherwise <c>false</c></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlow.ShouldAdjustInventory">
            <summary>
            Checks whether we must check adjust inventory or not
            </summary>
            <returns><c>true</c> if the ShouldIgnoreAdjustInventory doesn't have value or it's false; otherwise <c>false</c></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlow.ShouldProcessPayment">
            <summary>
            Checks whether we must process payment or not
            </summary>
            <returns><c>true</c> if the PreventProcessPayment doesn't have value or it's false; otherwise <c>false</c></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlow.ShouldRecalculateOrder">
            <summary>
            Checks whether we must recalculate the order or not
            </summary>
            <returns><c>true</c> if the ShouldIgnoreRecalculate doesn't have value or it's false; otherwise <c>false</c></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlow.Initialize(Mediachase.Commerce.Engine.ActivityFlowContext)">
            <summary>
            Initializes execution context for the ActivityFlow.
            </summary>
            <param name="context">The execution context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlow.Configure(Mediachase.Commerce.Engine.ActivityFlowRunner)">
            <summary>
            Configures, sets up the execution scenario for the ActivityFlow, containing sequential steps.
            </summary>
            <param name="activityFlow">The execution ActivityFlow.</param>
            <example>
            The following example demonstrates how to configure the ActivityFlow:
            <code>
            return activityFlow.If(() =>
                            {
                                return InStock > 0;
                            })
                                .Step&lt;AddToCartActivity&gt;()
                            .EndIf()
                            .Step&lt;CalculateTotalsActivity&gt;();
            </code>
            </example>
            <returns>Instance of <see cref="T:Mediachase.Commerce.Engine.ActivityFlowRunner"/> class.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlow.CreateExecution(Mediachase.Commerce.Engine.ActivityFlowContext)">
            <summary>
            Creates the execution activity flow in order to execute the ActivityFlow.
            </summary>
            <param name="context">The execution context.</param>
            <returns>Instance of <see cref="T:Mediachase.Commerce.Engine.ActivityFlowRunner"/> class.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Engine.ActivityFlowConfigurationAttribute">
            <summary>
            Represents attribute class used to identify a <see cref="T:Mediachase.Commerce.Engine.ActivityFlow"/>.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.ActivityFlowConfigurationAttribute.LegacyMode">
            <summary>
            Gets or sets whether the ActivityFlow is available in legacy mode or not.
            </summary>
            <remarks>By default, if not set, its value will be <c>false</c>, which means it is available in default mode. 
            If it is <c>true</c>, then the activity flow is available in legacy mode.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Engine.ActivityFlowConfigurationAttribute.Name">
            <summary>
            Gets the activity flow's name.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.ActivityFlowConfigurationAttribute.DisplayName">
            <summary>
            Gets the activity flow's friendly name.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.ActivityFlowConfigurationAttribute.Description">
            <summary>
            Gets the activity flow's description.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.ActivityFlowConfigurationAttribute.Priority">
            <summary>
            Gets the activity flow's priority.
            </summary>
            <remarks>Activity flow with higher priority will override registered activity flow which has the same name and mode.</remarks>
        </member>
        <member name="T:Mediachase.Commerce.Engine.ActivityFlowContext">
            <summary>
            Represents context of the whole execution of an activity flow. It contains all properties used all along the execution
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Engine.ActivityFlowContext.Properties">
            <summary>
            Gets properties dictionary of activity flow.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Engine.ActivityFlowContext"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowContext.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Engine.ActivityFlowContext"/> class.
            The properties dictionary is passed as a parameter.
            </summary>
            <param name="properties">The properties dictionary</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowContext.GetValue``1(System.String)">
            <summary>
            Gets value of an activity flow's property.
            </summary>
            <typeparam name="T">Type of the property.</typeparam>
            <param name="name">Name of the property.</param>
            <returns>Value of the property.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowContext.SetValue(System.String,System.Object)">
            <summary>
            Sets value of an activity flow's property.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="value">Value of the property.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowContext.Register(System.String,System.Type,System.Type)">
            <summary>
            Registers the property as the context property if it does not exist, and returns the property value.
            </summary>
            <param name="name">The property name.</param>
            <param name="type">The property type.</param>
            <param name="modelType">The model type, which is used to identify what ActivityFlow/Activity is registering property.</param>
            <returns>The registered property value.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowContext.GetDefaultGeneric``1">
            <summary>
            Gets default value of a generic type.
            </summary>
            <typeparam name="T">The generic type.</typeparam>
            <returns>The default value of type.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Engine.ActivityFlowContextPropertyAttribute">
            <summary>
            This attribute marks a property in an activity or a activity flow class as a context's property and the property 
            will be registered to the <see cref="T:Mediachase.Commerce.Engine.ActivityFlowContext"/>.
            ActivityFlowExecutionContext's property means the property is contained in the ActivityFlow context instead of the Activity.
            </summary>
            <remarks>When applied for an activity's property or activity flow's property, the property value will be populated 
            automatically from context's property. And after the activity has completed, updated value will be persisted to the context's property.</remarks>
            <example>
            The following example demonstrates how to declare a property for a activity flow, which gets and sets value from/to context's property.
            This is equivalent to this.Context.Property["Warnings"]
            <code>
                [ActivityFlowContextProperty]
                public StringDictionary Warnings { get; set; }
            </code>
            </example>
        </member>
        <member name="T:Mediachase.Commerce.Engine.ActivityFlowEventArgs">
            <summary>
            Represents the event argument for ActivityFlow.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.ActivityFlowEventArgs.ExecutionActivityFlow">
            <summary>
            Gets the Execution ActivityFlow.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.ActivityFlowEventArgs.ActivityFlowModel">
            <summary>
            Gets the ActivityFlow model.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.ActivityFlowEventArgs.ActivityFlowInstance">
            <summary>
            Gets the running ActivityFlow instance.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.ActivityFlowEventArgs.Result">
            <summary>
            Gets the execution result.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Engine.ActivityFlowModel">
            <summary>
            Represents the activity flow model, which contains meta data for a activity flow.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.ActivityFlowModel.Name">
            <summary>
            Gets the activity flow model's name.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.ActivityFlowModel.DisplayName">
            <summary>
            Gets the activity flow model's friendly name.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.ActivityFlowModel.Description">
            <summary>
            Gets the activity flow model's description.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.ActivityFlowModel.LegacyMode">
            <summary>
            Gets flag to indicate whether the activity flow model is available only in legacy mode.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.ActivityFlowModel.ActivityFlowType">
            <summary>
            Gets the activity flow type.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.ActivityFlowModel.Priority">
            <summary>
            Gets the activity flow's priority.
            </summary>
            <remarks>ActivityFlow with higher priority will override registered activity flow which has the same name mode.</remarks>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowModel.#ctor(Mediachase.Commerce.Engine.ActivityFlowConfigurationAttribute,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Engine.ActivityFlowModel"/> class based on its configuration.
            </summary>
            <exception cref="T:System.ArgumentNullException">If <paramref name="activityFlowType"/> is null.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="activityFlowType"/> is not sub class of <see cref="T:Mediachase.Commerce.Engine.ActivityFlow"/>.</exception>
            <param name="config">The activity flow model configuration.</param>
            <param name="activityFlowType">The activity flow type.</param>
        </member>
        <member name="T:Mediachase.Commerce.Engine.ActivityFlowRunner">
            <summary>
            Represents an execution of a activity flow.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Engine.ActivityFlowRunner.ActivityEventHandler">
            <summary>
            Class contains the name and the handler of an event.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.ActivityFlowRunner.Context">
            <summary>
            Gets the <see cref="T:Mediachase.Commerce.Engine.ActivityFlowContext"/>
            associated with the activity flow.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowRunner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Engine.ActivityFlowRunner"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowRunner.#ctor(Mediachase.Commerce.Engine.ActivityFlowContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Engine.ActivityFlowRunner"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowRunner.#ctor(Mediachase.Commerce.Engine.ActivityFlowRunner)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Engine.ActivityFlowRunner"/> class.
            </summary>
            <param name="parent">The parent execution.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowRunner.Execute">
            <summary>
            Executes an activity flow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowRunner.Do``1">
            <summary>
            Adds an activity as a step to the execution of activity flow.
            </summary>
            <typeparam name="T">The activity class, it must be inherited from <see cref="T:Mediachase.Commerce.WorkflowCompatibility.Activity"/> class.</typeparam>
            <returns>The execution of activity flow.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowRunner.If(System.Func{System.Boolean})">
            <summary>
            Creates an execution of an If flow in the current activity flow.
            </summary>
            <param name="condition">The condition function of the If flow.</param>
            <returns>The execution of If flow.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowRunner.Else">
            <summary>
            Creates an execution of an Else flow in the current activity flow.
            </summary>
            <returns>The execution of Else flow.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowRunner.EndIf">
            <summary>
            Creates an execution of EndIf flow in the current activity flow.
            </summary>
            <returns>The execution of EndIf flow.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowRunner.On(System.String,System.EventHandler)">
            <summary>
            Adds a handler for an event provided by the activity linked to the last step.
            The activity flow execution will listen on this event and handle it.
            </summary>
            <param name="eventName">The name of the event.</param>
            <param name="handler">The handler of the event.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowRunner.Do(System.Func{System.Boolean})">
            <summary>
            Adds new step to the activity flow execution.
            </summary>
            <param name="step">The new step.</param>
            <returns>The activity flow execution.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowRunner.ValidateParent">
            <summary>
            Validates the parent of a Else/EndIf flow.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowRunner.ValidateElseFlow">
            <summary>
            Validates logic when adding an else flow
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowRunner.ValidateEndIfFlow">
            <summary>
            Validates logic of an EndIf flow
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ActivityFlowRunner.CloseConditional">
            <summary>
            Implements the logic of an If-Else flow.
            </summary>
            <returns>A activity flow execution.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Engine.Caching.CacheEntries">
            <summary>
            Thread safe class to manipulate cache locks.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Caching.CacheEntries.ContainsKey(System.String)">
            <summary>
            Determines whether the specified key contains key.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified key contains key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Caching.CacheEntries.Get(System.String)">
            <summary>
            Gets the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Caching.CacheEntries.GetLock(System.String)">
            <summary>
            Gets the lock.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Caching.CacheEntries.Remove(System.String)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Caching.CacheEntry.Lock">
            <summary>
            Gets the lock.
            </summary>
            <value>The lock.</value>
        </member>
        <member name="T:Mediachase.Commerce.Engine.Caching.CacheHelper">
            <summary>
            Represents cache helper.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Caching.CacheHelper.CreateCacheKey(System.String,System.String[])">
            <summary>
            Creates the cache key.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="keys">The keys.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Caching.CacheHelper.CreateCacheKey(System.String,System.String)">
            <summary>
            Creates the cache key.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Caching.CacheHelper.CreateCacheKey(System.String,System.String,System.String)">
            <summary>
            Creates the cache key.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="key1">The first key.</param>
            <param name="key2">The second key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Caching.CacheHelper.CreateCacheKey(System.String,System.String,System.String,System.String)">
            <summary>
            Creates the cache key.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="key1">The first key.</param>
            <param name="key2">The second key.</param>
            <param name="key3">The third key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Caching.CacheHelper.Clear(System.String)">
            <summary>
            Removes all items from the Cache
            </summary>
            <param name="prefix">The prefix.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Caching.CacheHelper.RemoveByPattern(System.String)">
            <summary>
            Removes the cache by pattern.
            </summary>
            <param name="pattern">The pattern.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Caching.CacheHelper.Remove(System.String)">
            <summary>
            Removes the specified key from the cache
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Caching.CacheHelper.Insert(System.String,System.Object,System.TimeSpan)">
            <summary>
            Inserts the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="obj">The obj.</param>
            <param name="timespan">The timespan.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Caching.CacheHelper.Insert(System.String,System.Object,System.TimeSpan,System.Web.Caching.CacheItemPriority)">
            <summary>
            Inserts the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="obj">The obj.</param>
            <param name="timespan">The timespan.</param>
            <param name="priority">The priority.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Caching.CacheHelper.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.TimeSpan)">
            <summary>
            Inserts the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="obj">The obj.</param>
            <param name="dep">The dep.</param>
            <param name="timespan">The timespan.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Caching.CacheHelper.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.TimeSpan,System.Web.Caching.CacheItemPriority)">
            <summary>
            Inserts the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="obj">The obj.</param>
            <param name="dep">The dep.</param>
            <param name="timeframe">The timeframe.</param>
            <param name="priority">The priority.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Caching.CacheHelper.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)">
            <summary>
            Inserts the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="obj">The obj.</param>
            <param name="dep">The dep.</param>
            <param name="timeframe">The timeframe.</param>
            <param name="priority">The priority.</param>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Caching.CacheHelper.Get(System.String)">
            <summary>
            Gets the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Caching.CacheHelper.GetLock(System.String)">
            <summary>
            Gets the lock.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Caching.CacheHelper.ItemRemovedCallback(System.String,System.Object,System.Web.Caching.CacheItemRemovedReason)">
            <summary>
            Items the removed callback.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="reason">The reason.</param>
        </member>
        <member name="T:Mediachase.Commerce.Engine.DuplicatedPropertyException">
            <summary>
            Represents the exception thrown when registering a property but it exists already other property which has same name but different type
            and it can not be converted to the new one.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.DuplicatedPropertyException.PropertyName">
            <summary>
            Gets the name of property.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.DuplicatedPropertyException.RegisteredType">
            <summary>
            Gets the registered type of property.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.DuplicatedPropertyException.ApplyingType">
            <summary>
            Gets the type applying to the value of property.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.DuplicatedPropertyException.#ctor(System.String,System.Type,System.Type)">
            <summary>
            Initializes an instance of <see cref="T:Mediachase.Commerce.Engine.DuplicatedPropertyException"/> class.
            </summary>
            <param name="propertyName">The name of property which causes the exception.</param>
            <param name="existingType">The existing type of property which causes the exception.</param>
            <param name="newType">The new type of property which causes the exception.</param>
        </member>
        <member name="T:Mediachase.Commerce.Engine.Events.CatalogKeyEventArgs">
            <summary>
            Base EventArgs class for changes in prices and inventories.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Events.CatalogKeyEventArgs.#ctor(System.String,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.CatalogKey})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Engine.Events.CatalogKeyEventArgs"/> class.
            </summary>
            <param name="name">The name of the event.</param>
            <param name="catalogKeys">The catalog keys.</param>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Events.CatalogKeyEventArgs.ApplicationHasContentModelTypes">
            <summary>
            Describes whether the application raising the event has content model types
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Events.CatalogKeyEventArgs.CatalogKeys">
            <summary>
            Gets list of CatalogKey of updated items.
            </summary>
            <value>
            The entry code.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Events.CatalogKeyEventArgs.Name">
            <summary>
            Gets the name of the event.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Events.CatalogKeyEventArgs.ToString">
            <summary>
            Returns a string containing the <see cref="P:Mediachase.Commerce.Engine.Events.CatalogKeyEventArgs.Name"/> as well as any
            the <see cref="P:Mediachase.Commerce.Catalog.CatalogKey.CatalogEntryCode"/> of the contained <see cref="P:Mediachase.Commerce.Engine.Events.CatalogKeyEventArgs.CatalogKeys"/>.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Engine.Events.CatalogKeyEventBroadcaster">
            <summary>
            The broadcaster for CatalogKey related events
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Engine.Events.CatalogKeyEventBroadcaster.PriceUpdated">
            <summary>
            Event raised when one or many prices have been updated.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Engine.Events.CatalogKeyEventBroadcaster.InventoryUpdated">
            <summary>
            Event raised when an inventory has been updated.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Events.CatalogKeyEventBroadcaster.RaiseEvent(Mediachase.Commerce.Engine.Events.CatalogKeyEventArgs)">
            <summary>
            Raise event when prices or inventories are updated.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Events.CatalogKeyEventBroadcaster.OnPriceUpdated(System.Object,Mediachase.Commerce.Engine.Events.PriceUpdateEventArgs)">
            <summary>
            Trigger <see cref="E:Mediachase.Commerce.Engine.Events.CatalogKeyEventBroadcaster.PriceUpdated"/>.
            </summary>
            <param name="source">The updated prices being the source of the raised event.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Engine.Events.PriceUpdateEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Events.CatalogKeyEventBroadcaster.OnInventoryUpdated(System.Object,Mediachase.Commerce.Engine.Events.InventoryUpdateEventArgs)">
            <summary>
            Trigger <see cref="E:Mediachase.Commerce.Engine.Events.CatalogKeyEventBroadcaster.InventoryUpdated"/>.
            </summary>
            <param name="source">The updated inventory being the source of the raised event.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Engine.Events.InventoryUpdateEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Mediachase.Commerce.Engine.Events.EventCollection">
            <summary>
            Implements operations for the event collection. (Inherits <see cref="T:System.Configuration.ConfigurationElementCollection"/>.)
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Events.EventCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Mediachase.Commerce.Engine.Events.EventDefinition"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Events.EventCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Events.EventCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"/> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"/> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Engine.Events.EventDefinition">
            <summary>
            Represents the event definition. (Inherits <see cref="T:System.Configuration.ConfigurationElement"/>.)
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Events.EventDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Engine.Events.EventDefinition"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Events.EventDefinition.ClassName">
            <summary>
            Gets or sets the name of the class.
            </summary>
            <value>The name of the class.</value>
        </member>
        <member name="T:Mediachase.Commerce.Engine.Events.FrameworkEventArgs">
            <summary>
            Implements operations for the framework event arguments. (Inherits <see cref="T:System.EventArgs"/>.)
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Events.FrameworkEventArgs.EventName">
            <summary>
            Gets the name of the event.
            </summary>
            <value>The name of the event.</value>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Events.FrameworkEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Engine.Events.FrameworkEventArgs"/> class.
            </summary>
            <param name="eventName">Name of the event.</param>
        </member>
        <member name="T:Mediachase.Commerce.Engine.Events.InventoryAdjustEventArgs">
            <summary>
            EventArgs when there are inventory adjusts.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Events.InventoryAdjustEventArgs.#ctor(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.CatalogKey})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Engine.Events.InventoryAdjustEventArgs"/> class.
            </summary>
            <param name="catalogKeys">The catalog keys.</param>
        </member>
        <member name="T:Mediachase.Commerce.Engine.Events.InventoryUpdateEventArgs">
            <summary>
            EventArgs when there are inventory updates.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Events.InventoryUpdateEventArgs.#ctor(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.CatalogKey})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Engine.Events.InventoryUpdateEventArgs"/> class.
            </summary>
            <param name="catalogKeys">The catalog keys.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Events.InventoryUpdateEventArgs.#ctor(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.CatalogKey},System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryChange})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Engine.Events.InventoryUpdateEventArgs"/> class.
            </summary>
            <param name="catalogKeys">The catalog keys.</param>
            <param name="inventoryChanges">The changes applied to inventory records.</param>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Events.InventoryUpdateEventArgs.InventoryChanges">
            <summary>
            The changes applied to inventory records.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Engine.Events.PriceUpdateEventArgs">
            <summary>
            EventArgs when there are price updates.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Engine.ExecutionManager">
            <summary>
            Represents the execution manager, which manages registered activity flow model and be able to execute a activity flow following by activity flow model name.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Engine.ExecutionManager.ActivityFlowStarted">
            <summary>
            Represents the event when an ActivityFlow is started executing.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Engine.ExecutionManager.ActivityFlowCompleted">
            <summary>
            Represents the event when a ActivityFlow is completed.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ExecutionManager.#ctor(Mediachase.Commerce.Core.Features.IFeatureSwitch,EPiServer.Framework.TypeScanner.ITypeScannerLookup)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Engine.ExecutionManager"/> class.
            </summary>
            <param name="featureSwitch">The feature switch to check if the Beta feature is enabled or not.</param>
            <param name="typeScanner">The type scanner for looking up all activity flow types.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ExecutionManager.Register">
            <summary>
            Registers all activity flow model to the engine.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ExecutionManager.Register(Mediachase.Commerce.Engine.ActivityFlowModel)">
            <summary>
            Registers an activity flow model to the engine.
            </summary>
            <param name="model">The activity flow model to register.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ExecutionManager.ExecuteActivityFlow(System.String,Mediachase.Commerce.Engine.ActivityFlowContext)">
            <summary>
            Executes an activity flow based on its model name and the execution context.
            </summary>
            <param name="name">The activity flow model name.</param>
            <param name="context">The execution context.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ExecutionManager.ExecuteActivityFlow(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Executes an activity flow based on its model name and the dictionary of parameters.
            </summary>
            <param name="name">The activity flow model name.</param>
            <param name="parameters">The parameters.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ExecutionManager.ExecuteActivityFlow(System.String)">
            <summary>
            Executes an activity flow based on its model name.
            </summary>
            <param name="name">The activity flow model name.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.ExecutionManager.GetActivityFlowModel(System.String)">
            <summary>
            Gets an activity flow model by its name.
            </summary>
            <param name="name">The activity flow model name.</param>
            <returns>The activity flow  model, or null if model not found.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Engine.IContextUserControl">
            <summary>
            Context based control interface.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.IContextUserControl.LoadContext(System.Collections.IDictionary)">
            <summary>
            Loads the context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Mediachase.Commerce.Engine.Images.ImageProvider">
            <summary>
            Image provider used for implementing extensible provider model. It will be used
            to persist and retrieve images. One existing provider distributed with ECF is FileImageProvider
            which uses file system to store images.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Images.ImageProvider.ApplicationName">
            <summary>
            Gets or sets the name of the application.
            </summary>
            <value>The name of the application.</value>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageProvider.RetrieveImage(System.String)">
            <summary>
            Retrieves the image object.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageProvider.RetrieveImageUrl(System.String)">
            <summary>
            Retrieves the image URL.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageProvider.RetrieveThumbnailImageUrl(System.String)">
            <summary>
            Retrieves the thumbnail image URL.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageProvider.RemoveImage(System.String)">
            <summary>
            Removes the image by name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageProvider.SaveImage(System.String,System.Drawing.Image)">
            <summary>
            Saves the image.
            </summary>
            <param name="name">The name.</param>
            <param name="image">The image.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageProvider.SaveImage(System.String,System.Byte[])">
            <summary>
            Saves the image.
            </summary>
            <param name="name">The name.</param>
            <param name="image">The image.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageProvider.SaveImage(System.String,System.Drawing.Image,System.String)">
            <summary>
            Saves the image.
            </summary>
            <param name="name">The name.</param>
            <param name="image">The image.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageProvider.SaveImage(System.String,System.Byte[],System.String)">
            <summary>
            Saves the image.
            </summary>
            <param name="name">The name.</param>
            <param name="image">The image.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageProvider.SaveImage(System.String,System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves the image.
            </summary>
            <param name="name">The name.</param>
            <param name="image">The image.</param>
            <param name="format">Image format.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageProvider.SaveImage(System.String,System.Byte[],System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves the image.
            </summary>
            <param name="name">The name.</param>
            <param name="image">The image.</param>
            <param name="format">Image format.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageProvider.Exists(System.String)">
            <summary>
            Returns true if image with specified name already exists.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Engine.Images.ImageProviderCollection">
            <summary>
            Implements operations for the image provider collection. (Inherits <see cref="T:System.Configuration.Provider.ProviderCollection"/>.)
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Images.ImageProviderCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Mediachase.Commerce.Engine.Images.ImageProvider"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
            <summary>
            Adds a provider to the collection.
            </summary>
            <param name="provider">The provider to be added.</param>
            <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="provider"/> is null.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Configuration.Provider.ProviderBase.Name"/> of <paramref name="provider"/> is null.- or -The length of the <see cref="P:System.Configuration.Provider.ProviderBase.Name"/> of <paramref name="provider"/> is less than 1.</exception>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
            </PermissionSet>
        </member>
        <member name="T:Mediachase.Commerce.Engine.Images.ImageService">
            <summary>
            Implements operations for and represents the image service.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Images.ImageService.Provider">
            <summary>
            Gets the provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Images.ImageService.Providers">
            <summary>
            Gets the providers.
            </summary>
            <value>The providers.</value>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageService.RemoveImage(System.String)">
            <summary>
            Removes the image.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageService.RetrieveImage(System.String)">
            <summary>
            Retrieves the image.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageService.RetrieveImageUrl(System.String)">
            <summary>
            Retrieves the thumbnail image URL.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageService.RetrieveThumbnailImageUrl(System.String)">
            <summary>
            Retrieves the thumbnail image URL.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageService.Exists(System.String)">
            <summary>
            Existses the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageService.SaveImage(System.String,System.Drawing.Image)">
            <summary>
            Saves the image.
            </summary>
            <param name="name">The name.</param>
            <param name="image">The image.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageService.SaveImage(System.String,System.Byte[])">
            <summary>
            Saves the image.
            </summary>
            <param name="name">The name.</param>
            <param name="image">The image.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageService.SaveImage(System.String,System.Drawing.Image,System.String)">
            <summary>
            Saves the image.
            </summary>
            <param name="name">The name.</param>
            <param name="image">The image.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageService.SaveImage(System.String,System.Byte[],System.String)">
            <summary>
            Saves the image.
            </summary>
            <param name="name">The name.</param>
            <param name="image">The image.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageService.SaveImage(System.String,System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves the image.
            </summary>
            <param name="name">The name.</param>
            <param name="image">The image.</param>
            <param name="format">The format.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageService.SaveImage(System.String,System.Byte[],System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves the image.
            </summary>
            <param name="name">The name.</param>
            <param name="image">The image.</param>
            <param name="format">The format.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.ImageService.LoadProviders">
            <summary>
            Loads the providers.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Engine.Images.ImageServiceSection">
            <summary>
            Implements operations for the image service section. This class is no longer used.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Images.ImageServiceSection.Providers">
            <summary>
            Gets the providers.
            </summary>
            <value>The providers.</value>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Images.ImageServiceSection.DefaultProvider">
            <summary>
            Gets or sets the default provider.
            </summary>
            <value>The default provider.</value>
        </member>
        <member name="T:Mediachase.Commerce.Engine.Images.Providers.HandlerImageProvider">
            <summary>
            Represents handler image provider.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Images.Providers.HandlerImageProvider.ApplicationName">
            <summary>
            Gets or sets the name of the application.
            </summary>
            <value>The name of the application.</value>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Images.Providers.HandlerImageProvider.UrlFormatString">
            <summary>
            Gets or sets the URL format string.
            </summary>
            <value>The URL format string.</value>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.Providers.HandlerImageProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
            <exception cref="T:System.ArgumentNullException">The name of the provider is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The name of the provider has a length of zero.</exception>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.Providers.HandlerImageProvider.RetrieveImage(System.String)">
            <summary>
            Retrieves the image object.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.Providers.HandlerImageProvider.RetrieveImageUrl(System.String)">
            <summary>
            Retrieves the image URL.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.Providers.HandlerImageProvider.RetrieveThumbnailImageUrl(System.String)">
            <summary>
            Retrieves the thumbnail image URL.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.Providers.HandlerImageProvider.RemoveImage(System.String)">
            <summary>
            Removes the image by name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.Providers.HandlerImageProvider.Exists(System.String)">
            <summary>
            Returns true if image with specified name already exists.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.Providers.HandlerImageProvider.SaveImage(System.String,System.Byte[])">
            <summary>
            Saves the image.
            </summary>
            <param name="name">The name.</param>
            <param name="image">The image.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.Providers.HandlerImageProvider.SaveImage(System.String,System.Drawing.Image)">
            <summary>
            Saves the image.
            </summary>
            <param name="name">The name.</param>
            <param name="image">The image.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.Providers.HandlerImageProvider.SaveImage(System.String,System.Byte[],System.String)">
            <summary>
            Saves the image.
            </summary>
            <param name="name">The name.</param>
            <param name="image">The image.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.Providers.HandlerImageProvider.SaveImage(System.String,System.Byte[],System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves the image.
            </summary>
            <param name="name">The name.</param>
            <param name="image">The image.</param>
            <param name="format">Image format.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.Providers.HandlerImageProvider.SaveImage(System.String,System.Drawing.Image,System.String)">
            <summary>
            Saves the image.
            </summary>
            <param name="name">The name.</param>
            <param name="image">The image.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Images.Providers.HandlerImageProvider.SaveImage(System.String,System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves the image.
            </summary>
            <param name="name">The name.</param>
            <param name="image">The image.</param>
            <param name="format">Image format.</param>
        </member>
        <member name="T:Mediachase.Commerce.Engine.Template.Providers.XslTemplateProvider">
            <summary>
            XSL Driven Template Provider.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Template.Providers.XslTemplateProvider.ApplicationName">
            <summary>
            Gets or sets the name of the application.
            </summary>
            <value>The name of the application.</value>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Template.Providers.XslTemplateProvider.TemplateSource">
            <summary>
            Gets or sets the template source. The source should be of type
            c:\mysite\templates\{0}\{1}.xsl where {0} will be either replaced with specific language
            or default and {1} will be replace with a template name specified.
            </summary>
            <value>The template source.</value>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Template.Providers.XslTemplateProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
            <exception cref="T:System.ArgumentNullException">The name of the provider is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The name of the provider has a length of zero.</exception>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Template.Providers.XslTemplateProvider.Process(System.String,System.Globalization.CultureInfo,System.Collections.IDictionary)">
            <summary>
            Processes the specified template with a context provided.
            </summary>
            <param name="template">The template.</param>
            <param name="culture">The culture.</param>
            <param name="context">The context.</param>
            <returns>
            The processed template with context embedded.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Engine.Template.TemplateProvider">
            <summary>
            Implements operations for the template provider. (Inherits <see cref="T:System.Configuration.Provider.ProviderBase"/>.)
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Template.TemplateProvider.ApplicationName">
            <summary>
            Gets or sets the name of the application.
            </summary>
            <value>The name of the application.</value>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Template.TemplateProvider.Process(System.String,System.Globalization.CultureInfo,System.Collections.IDictionary)">
            <summary>
            Processes the specified template with a context provided.
            </summary>
            <param name="template">The template.</param>
            <param name="culture">The culture.</param>
            <param name="context">The context.</param>
            <returns>
            The processed template with context embedded.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Engine.Template.TemplateProviderCollection">
            <summary>
            Implements operations for the commerce enginer template provider collection. (Inherits <see cref="T:System.Configuration.Provider.ProviderCollection"/>.)
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Template.TemplateProviderCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Mediachase.Commerce.Engine.Template.TemplateProvider"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Template.TemplateProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
            <summary>
            Adds a provider to the collection.
            </summary>
            <param name="provider">The provider to be added.</param>
            <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="provider"/> is null.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Configuration.Provider.ProviderBase.Name"/> of <paramref name="provider"/> is null.- or -The length of the <see cref="P:System.Configuration.Provider.ProviderBase.Name"/> of <paramref name="provider"/> is less than 1.</exception>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
            </PermissionSet>
        </member>
        <member name="T:Mediachase.Commerce.Engine.Template.TemplateProviderSection">
            <summary>
            Implements operations for the template provider section. (Inherits <see cref="T:System.Configuration.ConfigurationSection"/>.)
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Template.TemplateProviderSection.Providers">
            <summary>
            Gets the providers.
            </summary>
            <value>The providers.</value>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Template.TemplateProviderSection.DefaultProvider">
            <summary>
            Gets or sets the default provider.
            </summary>
            <value>The default provider.</value>
        </member>
        <member name="T:Mediachase.Commerce.Engine.Template.TemplateService">
            <summary>
            Implements operations for and represents the template service.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Template.TemplateService.Provider">
            <summary>
            Gets the provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="P:Mediachase.Commerce.Engine.Template.TemplateService.Providers">
            <summary>
            Gets the providers.
            </summary>
            <value>The providers.</value>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Template.TemplateService.Process(System.String,System.Globalization.CultureInfo,System.Collections.IDictionary)">
            <summary>
            Processes the specified template.
            </summary>
            <param name="template">The template.</param>
            <param name="culture">The culture.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Engine.Template.TemplateService.LoadProviders">
            <summary>
            Loads the providers.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Engine.WorkflowResults">
            <summary>
            Implements operations for the work flow results.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Engine.WorkflowResults.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Engine.WorkflowResults"/> class.
            </summary>
            <param name="properties">The properties containing the results.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.WorkflowResults.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},Mediachase.Commerce.Engine.WorkflowStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Engine.WorkflowResults"/> class.
            </summary>
            <param name="properties">The properties containing the results.</param>
            <param name="status">The status of work flow.</param>
        </member>
        <member name="M:Mediachase.Commerce.Engine.WorkflowResults.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},Mediachase.Commerce.Engine.WorkflowStatus,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Engine.WorkflowResults"/> class.
            </summary>
            <param name="properties">The properties containing the results.</param>
            <param name="status">The status of work flow.</param>
            <param name="exception">The exception thrown when executing the workflow.</param>
        </member>
        <member name="P:Mediachase.Commerce.Engine.WorkflowResults.Status">
            <summary>
            Gets the status.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.WorkflowResults.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Engine.WorkflowResults.Exception">
            <summary>
            Gets and sets the exception.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Engine.WorkflowStatus">
            <summary>
            The WorkflowStatus enumeration defines the work flow status.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Engine.WorkflowStatus.Completed">
            <summary>
            Represents the completed status.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Engine.WorkflowStatus.Terminated">
            <summary>
            Represents the terminated status.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Engine.WorkflowStatus.Aborted">
            <summary>
            Represents the aborted status.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Engine.WorkflowStatus.Running">
            <summary>
            Represents the running status.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Extensions.ActivityFlowExtensions">
            <summary>
            Extension methods for <see cref="T:Mediachase.Commerce.Engine.ActivityFlow"/> and <see cref="T:Mediachase.Commerce.WorkflowCompatibility.Activity"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.ActivityFlowExtensions.RegisterProperties(Mediachase.Commerce.Engine.ActivityFlow,Mediachase.Commerce.Engine.ActivityFlowContext)">
            <summary>
            Registers activity flow's property as context's property.
            </summary>
            <param name="activityFlow">The activity flow to get property from.</param>
            <param name="context">The context to register property.</param>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.ActivityFlowExtensions.RegisterProperties(Mediachase.Commerce.WorkflowCompatibility.Activity,Mediachase.Commerce.Engine.ActivityFlowContext)">
            <summary>
            Registers activity's property as context's property.
            </summary>
            <param name="activity">The activity to get property from.</param>
            <param name="context">The context to register property.</param>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.ActivityFlowExtensions.PersistPropertyValue(Mediachase.Commerce.WorkflowCompatibility.Activity,Mediachase.Commerce.Engine.ActivityFlowContext)">
            <summary>
            Saves property value from activity to context.
            </summary>
            <param name="activity">The activity to get property value.</param>
            <param name="context">The context to save property value.</param>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.BackgroundTaskExtensions.GetOverallProgress(Mediachase.Commerce.BackgroundTasks.IBackgroundTaskMessage)">
            <summary>
            Calculates the overall progress for the message, giving each stage the same weight.
            </summary>
            <returns>The percent completion of the operation, with 100% represented by 1.0.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.CatalogEntryRowExtensions.IsEntryAvailable(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryRow)">
            <summary>
            Determines whether the specified catalog entry row is available (is active, startdate and enddate are correct)
            </summary>
            <param name="catalogEntryRow">The catalog entry row.</param>
            <returns>
            	<c>true</c> if the specified catalog entry row is available; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.CatalogEntryRowExtensions.IsEntryAvailable(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryRow,System.String)">
            <summary>
            Determines whether the specified catalog entry row is available (is published, startdate and enddate are correct) in the specific <paramref name="language"/>.
            </summary>
            <param name="catalogEntryRow">The catalog entry row.</param>
            <param name="language">The language.</param>
            <returns>
            	<c>true</c> if the specified catalog entry row is available; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.CatalogEntryRowExtensions.EntryStartDate(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryRow,System.String)">
            <summary>
            Get entry start date in the specific <paramref name="language"/>.
            </summary>
            <param name="catalogEntryRow">The catalog entry row.</param>
            <param name="language">The language.</param>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.CatalogEntryRowExtensions.EntryEndDate(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryRow,System.String)">
            <summary>
            Get entry end date in the specific <paramref name="language"/>.
            </summary>
            <param name="catalogEntryRow">The catalog entry row.</param>
            <param name="language">The language.</param>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.CatalogEntryRowExtensions.IsEntryPublished(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryRow,System.String)">
            <summary>
            Checks if the entry is published in the specific <paramref name="language"/>.
            </summary>
            <param name="row">The entry row.</param>
            <param name="language">The language to check if the entry is published.</param>
            <returns><c>true</c> if the entry is published in this language, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.CatalogEntryRowExtensions.IsEntryPublished(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryRow,Mediachase.MetaDataPlus.MetaObject)">
            <summary>
            Checks if the entry is published based on the rows's active status and the published
            field in the meta object.
            </summary>
            <param name="row">The entry row.</param>
            <param name="metaObject">The meta object.</param>
            <returns>
              <c>true</c> if the entry is published, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.CatalogEntryRowExtensions.EvaluateItemAssetChange(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryRow)">
            <summary>
            Checks if the entry has any change in <see cref="P:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemAsset"/>.
            </summary>
            <param name="row">The entry row need to check.</param>
            <returns>
              <c>true</c> if the entry row has any change in <see cref="P:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemAsset"/>, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Extensions.CatalogItemAssetRowExtensions">
            <summary>
            Extension methods for  <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemAssetRow"/> and <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogItemAssetRow"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.CatalogItemAssetRowExtensions.HasChangesRelatedToEntry(Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemAssetRow,Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryRow)">
            <summary>
            Verifies whether a <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogItemAssetRow"/> has changes related to a <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryRow"/>.
            </summary>
            <param name="assetRow">The asset item row need to check.</param>
            <param name="entryRow">The related entry row which contains Asset Item.</param>
            <returns>
              <c>true</c> if the item asset row has changes related to <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogEntryDto.CatalogEntryRow"/>, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.CatalogItemAssetRowExtensions.HasChangesRelatedToNode(Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogItemAssetRow,Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogNodeRow)">
            <summary>
            Verifies whether a <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogItemAssetRow"/> has changes related to a <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogNodeRow"/>.
            </summary>
            <param name="assetRow">The asset item row need to check.</param>
            <param name="nodeRow">The related node row which contains Asset Item.</param>
            <returns>
              <c>true</c> if the item asset row has changes related to <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogNodeRow"/>, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Extensions.CatalogNodeRowExtensions">
            <summary>
            Extension methods for  <see cref="T:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogNodeRow"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.CatalogNodeRowExtensions.EvaluateItemAssetChange(Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogNodeRow)">
            <summary>
            Checks if the node has any change in <see cref="P:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogItemAsset"/>.
            </summary>
            <param name="row">The node row need to check.</param>
            <returns>
              <c>true</c> if the node row has any change in <see cref="P:Mediachase.Commerce.Catalog.Dto.CatalogNodeDto.CatalogItemAsset"/>, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Extensions.CustomerContactExtensions">
            <summary>
            Extension methods for customer contact.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.CustomerContactExtensions.GetHtmlEncodedFullName(Mediachase.Commerce.Customers.CustomerContact)">
            <summary>
            Gets the full name from <paramref name="customerContact"/> HTML encoded.
            </summary>
            <param name="customerContact">The customer contact.</param>
            <returns>The full name from <paramref name="customerContact"/> HTML encoded.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.CustomerContactExtensions.GetHtmlEncodedEmail(Mediachase.Commerce.Customers.CustomerContact)">
            <summary>
            Gets the email from <paramref name="customerContact"/> HTML encoded.
            </summary>
            <param name="customerContact">The customer contact.</param>
            <returns>The email from <paramref name="customerContact"/> HTML encoded.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Extensions.DataRowExpressionHelper`1">
            <summary>
            Compiles and caches expressions used to read and write typed DataRow properties.
            </summary>
            <typeparam name="TRow">The <see cref="T:System.Data.DataRow"/> type.</typeparam>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.DataRowExpressionHelper`1.TryGet``1(`0,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean@)">
            <summary>
                Gets the property value defined in <paramref name="property"/> from the
                instance <paramref name="row"/>.
            </summary>
            <typeparam name="TValue">The property value type.</typeparam>
            <param name="row">The instance to read the property from.</param>
            <param name="property">
                An <see cref="T:System.Linq.Expressions.Expression"/> defining the property to read, e.g. <c>x => x.MyProp</c>
                to read the property 'MyProp' from <paramref name="row"/>.
            </param>
            <param name="isNull">
                Output parameter which will be set to <c>true</c> if the Is[PropertyName]Null() method of <typeparamref name="TRow"/>
                exists and returns <c>true</c>.
            </param>
            <returns>
                The property value, with fallback to the default of <typeparamref name="TValue"/> if <paramref name="isNull"/> has
                been set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.DataRowExpressionHelper`1.Set``1(`0,System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean)">
            <summary>
                Sets the property value defined in <paramref name="property"/> on the
                instance <paramref name="row"/> if it doesn't already have the same value.
                This avoids marking the data row as modified if the value hasn't changed.
            </summary>
            <typeparam name="TValue">The property value type.</typeparam>
            <param name="row">The instance to set the property on.</param>
            <param name="property">
                An <see cref="T:System.Linq.Expressions.Expression"/> defining the property to set, e.g. 'x => x.MyProp'
                to set the property 'MyProp' from <paramref name="row"/>.
            </param>
            <param name="value">
                The property value to set.
                If the <see cref="P:System.Data.DataRow.RowState"/> of <paramref name="row"/> is <see cref="F:System.Data.DataRowState.Unchanged"/> and
                <paramref name="value"/> is the same as the current value, no action is performed. This is to avoid marking the
                row as modified when not necessary.
            </param>
            <param name="isValueNull">
                If <c>true</c>, the Set[PropertyName]Null() method of <typeparamref name="TRow"/>, if it exists, will be called
                instead of setting the value.
            </param>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.DataRowExpressionHelper`1.GetPropertyFromExpression``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
                Extracts a <see cref="T:System.Reflection.PropertyInfo"/> instance from a property expression.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="getPropertyExpression"></param>
            <exception cref="T:System.ArgumentException">
                Thrown if the expression body is neither a <see cref="T:System.Linq.Expressions.MemberExpression"/> nor a
                <see cref="T:System.Linq.Expressions.UnaryExpression"/> of such an expression.
            </exception>
            <returns>The property definition.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.DataRowExpressionHelper`1.CreateValueGetter(System.Reflection.PropertyInfo)">
            <summary>
                Creates an expression for getting the property value, taking into account the
                existence of any Is[PropertyName]Null() method on <typeparamref name="TRow"/>.
            </summary>
            <param name="propertyInfo">The property definition.</param>
            <returns>
                An <see cref="T:System.Linq.Expressions.Expression"/> corresponding to a method with the signature
                <c>object Get(TRow sourceRow)</c> that returns the property value (boxed for
                value types) or null if the sourceRow.Is[PropertyName]Null() returns true.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.DataRowExpressionHelper`1.CreateInnerValueGetter(System.Reflection.PropertyInfo)">
            <summary>
                Creates an expression for getting the property value.
            </summary>
            <param name="propertyInfo">The property definition.</param>
            <returns>
                An <see cref="T:System.Linq.Expressions.Expression"/> corresponding to a method with the signature
                <c>object Get(TRow sourceRow)</c> that returns the property value (boxed for
                for value types).
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.DataRowExpressionHelper`1.CreateValueSetter``1(System.Reflection.PropertyInfo)">
            <summary>
                Creates an expression for setting the property, taking into account the existence
                of any Set[PropertyName]Null() method on <typeparamref name="TRow"/>.
            </summary>
            <typeparam name="TValue">The property value type.</typeparam>
            <param name="propertyInfo">The property definition.</param>
            <returns>
                An <see cref="T:System.Linq.Expressions.Expression"/> corresponding to a method with the signature
                <c>void Set(TRow targetRow, TValue value, bool isNull)</c> that sets the value
                or calls the targetRow.Set[PropertyName]Null() method if the value is null.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Extensions.FeatureSwitchExtensions">
            <summary>
            Extension methods for <see cref="T:Mediachase.Commerce.Core.Features.IFeatureSwitch"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.FeatureSwitchExtensions.IsVNextWorkflowEnabled(Mediachase.Commerce.Core.Features.IFeatureSwitch)">
            <summary>
            Checks if VNextWorkflow feature is enable.
            </summary>
            <param name="featureSwitch">The feature switch.</param>
            <returns><c>True</c> if VNextWorkflow is enable; otherwise <c>False</c>.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.FeatureSwitchExtensions.IsSerializedCartsEnabled(Mediachase.Commerce.Core.Features.IFeatureSwitch)">
            <summary>
            Checks if SerializedCarts feature is enable.
            </summary>
            <param name="featureSwitch">The feature switch.</param>
            <returns><c>True</c> if SerializedCarts feature is enable; otherwise <c>False</c>.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Extensions.IExtendedPropertiesExtensions">
            <summary>
            Extension methods for <see cref="T:EPiServer.Commerce.Storage.IExtendedProperties"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.IExtendedPropertiesExtensions.CopyPropertiesFrom(EPiServer.Commerce.Storage.IExtendedProperties,EPiServer.Commerce.Storage.IExtendedProperties)">
            <summary>
            Copies the value for each key in the <see cref="P:EPiServer.Commerce.Storage.IExtendedProperties.Properties"/> collection to
            the target object, unless the target object already has that key.
            </summary>
            <param name="target">The object to copy values to.</param>
            <param name="source">The object to copy values from.</param>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.IExtendedPropertiesExtensions.CopyPropertiesWithOverwriteFrom(EPiServer.Commerce.Storage.IExtendedProperties,EPiServer.Commerce.Storage.IExtendedProperties)">
            <summary>
            Copies the value for each key in the <see cref="P:EPiServer.Commerce.Storage.IExtendedProperties.Properties"/> collection to
            the target object, overwriting any existing value.
            </summary>
            <param name="target">The object to copy values to.</param>
            <param name="source">The object to copy values from.</param>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.IntegerArrayExtensions.GetCombinedKey(System.Int32[])">
            <summary>
            Gets a combined key from the elements of the array.
            </summary>
            <param name="array">The array.</param>
            <returns>A combined key that contain sorted value.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Extensions.IOrderNoteExtensions">
            <summary>
            Extensions for <see cref="T:EPiServer.Commerce.Order.IOrderNote"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.IOrderNoteExtensions.SetTruncateTitle(EPiServer.Commerce.Order.IOrderNote,System.String)">
            <summary>
            Truncates order note title.
            </summary>
            <param name="orderNote">Order note.</param>
            <param name="title">The title.</param>
        </member>
        <member name="T:Mediachase.Commerce.Extensions.LogExtensions">
            <summary>
                Extension methods when working with log
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.LogExtensions.DebugBeginMethod(EPiServer.Logging.ILogger,System.String,System.Object[])">
            <summary>
                Write a debug message to the log containing information about how a method was called.
            </summary>
            <param name="logger">The object this method extends</param>
            <param name="methodName">The name of the method that was just called</param>
            <param name="parameters">The parameters supplied to the called method</param>
        </member>
        <member name="T:Mediachase.Commerce.Extensions.ObjectInstanceCacheExtensions">
            <summary>
            Extension methods for <see cref="T:EPiServer.Framework.Cache.IObjectInstanceCache"/>
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.ObjectInstanceCacheExtensions.ReadThrough``1(EPiServer.Framework.Cache.IObjectInstanceCache,System.String,System.Collections.Generic.IEnumerable{System.String},System.TimeSpan,System.Func{``0})">
            <summary>
            Gets an item from cache, and if there is a cache miss, gets
            the item using the supplied delegate and caches the result.
            </summary>
            <typeparam name="T">The type of item.</typeparam>
            <param name="cache">The cache implementation to use.</param>
            <param name="cacheKey">The cache key for the item.</param>
            <param name="masterKeys">The master keys the cached item should depend on.</param>
            <param name="duration">The cache duration.</param>
            <param name="load">The delegate to execute to get the item if it is not in cache.</param>
            <returns>The item from cache or as returned by the delegate if not in cache.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.ObjectInstanceCacheExtensions.ReadThrough``1(EPiServer.Framework.Cache.IObjectInstanceCache,System.Boolean,System.String,System.Collections.Generic.IEnumerable{System.String},System.TimeSpan,System.Func{``0})">
            <summary>
            Gets an item from cache, and if there is a cache miss, gets
            the item using the supplied delegate and caches the result.
            </summary>
            <typeparam name="T">The type of item.</typeparam>
            <param name="cache">The cache implementation to use.</param>
            <param name="useCache">if set to <c>true</c> use the cache, otherwise bypass.</param>
            <param name="cacheKey">The cache key for the item.</param>
            <param name="masterKeys">The master keys the cached item should depend on.</param>
            <param name="duration">The cache duration.</param>
            <param name="load">The delegate to execute to get the item if it is not in cache.</param>
            <returns>
            The item from cache or as returned by the delegate if not in cache.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.ObjectInstanceCacheExtensions.AssertCompatibleCacheImplementation(EPiServer.Framework.Cache.IObjectInstanceCache)">
            <summary>
            Asserts if the supplied cache implementation is of type <see cref="T:EPiServer.Framework.Cache.HttpRuntimeCache"/>,
            otherwise throws an excepttion.
            </summary>
            <param name="cache">The cache.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if <paramref name="cache"/> is not of type
            <see cref="T:EPiServer.Framework.Cache.HttpRuntimeCache"/></exception>
        </member>
        <member name="T:Mediachase.Commerce.Extensions.OrderGroupExtensions">
            <summary>
            Extensions for <see cref="T:Mediachase.Commerce.Orders.OrderGroup"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.OrderGroupExtensions.GetHtmlEncodedCustomerName(Mediachase.Commerce.Orders.OrderGroup)">
            <summary>
            Gets the <see cref="P:Mediachase.Commerce.Orders.OrderGroup.CustomerName"/> HTML encoded.
            </summary>
            <param name="orderGroup">The order group.</param>
            <returns>The <see cref="P:Mediachase.Commerce.Orders.OrderGroup.CustomerName"/> HTML encoded.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.TypedDataRowExtensions.Get``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
                Gets the property value defined in <paramref name="property"/> from the
                instance <paramref name="row"/>.
            </summary>
            <typeparam name="TRow">The typed <see cref="T:System.Data.DataRow"/>.</typeparam>
            <typeparam name="TValue">The property value type.</typeparam>
            <param name="row">The instance to read the property from.</param>
            <param name="property">
                An <see cref="T:System.Linq.Expressions.Expression"/> defining the property to read, e.g. 'x => x.MyProp'
                to read the property 'MyProp' from <paramref name="row"/>.
            </param>
            <returns>
                The property value, with fallback to the default of <typeparamref name="TValue"/> if the
                Is[PropertyName]Null() method of <typeparamref name="TRow"/> exists and returns <c>true</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.TypedDataRowExtensions.TryGet``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean@)">
            <summary>
                Gets the property value defined in <paramref name="property"/> from the
                instance <paramref name="row"/>.
            </summary>
            <typeparam name="TRow">The typed <see cref="T:System.Data.DataRow"/>.</typeparam>
            <typeparam name="TValue">The property value type.</typeparam>
            <param name="row">The instance to read the property from.</param>
            <param name="property">
                An <see cref="T:System.Linq.Expressions.Expression"/> defining the property to read, e.g. <c>x => x.MyProp</c>
                to read the property 'MyProp' from <paramref name="row"/>.
            </param>
            <param name="isNull">
                Output parameter which will be set to <c>true</c> if the Is[PropertyName]Null() method of <typeparamref name="TRow"/>
                exists and returns <c>true</c>.
            </param>
            <returns>
                The property value, with fallback to the default of <typeparamref name="TValue"/> if <paramref name="isNull"/> has
                been set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.TypedDataRowExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
                Sets the property value defined in <paramref name="property"/> on the
                instance <paramref name="row"/> if it doesn't already have the same value.
                This avoids marking the data row as modified if the value hasn't changed.
            </summary>
            <typeparam name="TRow">The typed <see cref="T:System.Data.DataRow"/>.</typeparam>
            <typeparam name="TValue">The property value type.</typeparam>
            <param name="row">The instance to set the property on.</param>
            <param name="property">
                An <see cref="T:System.Linq.Expressions.Expression"/> defining the property to set, e.g. 'x => x.MyProp'
                to set the property 'MyProp' from <paramref name="row"/>.
            </param>
            <param name="value">
                The property value to set.
                If the <see cref="P:System.Data.DataRow.RowState"/> of <paramref name="row"/> is <see cref="F:System.Data.DataRowState.Unchanged"/> and
                <paramref name="value"/> is the same as the current value, no action is performed. This is to avoid marking the
                row as modified when not necessary.
                If <paramref name="value"/> is null, the Set[PropertyName]Null() method of <typeparamref name="TRow"/> will be
                used to null out the column. If such a method does not exist, the property will be set set to null.
            </param>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.TypedDataRowExtensions.Set``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Nullable{``1})">
            <summary>
                Sets the property value defined in <paramref name="property"/> on the
                instance <paramref name="row"/> if it doesn't already have the same value.
                This avoids marking the data row as modified if the value hasn't changed.
            </summary>
            <typeparam name="TRow">The typed <see cref="T:System.Data.DataRow"/>.</typeparam>
            <typeparam name="TValue">The property value type.</typeparam>
            <param name="row">The instance to set the property on.</param>
            <param name="property">
                An <see cref="T:System.Linq.Expressions.Expression"/> defining the property to set, e.g. 'x => x.MyProp'
                to set the property 'MyProp' from <paramref name="row"/>.
            </param>
            <param name="value">
                The property value to set.
                If the <see cref="P:System.Data.DataRow.RowState"/> of <paramref name="row"/> is <see cref="F:System.Data.DataRowState.Unchanged"/> and
                <paramref name="value"/> is the same as the current value, no action is performed. This is to avoid marking the
                row as modified when not necessary.
                If <paramref name="value"/> is null and the underlying data column is nullable, the column will be set to null
                (by calling the Set[PropertyName]Null() method).
                If <paramref name="value"/> is null, the Set[PropertyName]Null() method of <typeparamref name="TRow"/> will be
                used to null out the column. If such a method does not exist, the property will be set to the default of
                <typeparamref name="TValue"/>.
            </param>
        </member>
        <member name="M:Mediachase.Commerce.Extensions.TypedDataRowExtensions.CopyFrom``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``0)">
            <summary>
                Updates the property value in <paramref name="target"/> with the value from <paramref name="source"/> if they
                are not already the same.
            </summary>
            <typeparam name="TRow">The typed <see cref="T:System.Data.DataRow"/>.</typeparam>
            <typeparam name="TValue">The property value type.</typeparam>
            <param name="target">The instance to read the property from.</param>
            <param name="property">
                An <see cref="T:System.Linq.Expressions.Expression"/> defining the property to set, e.g. 'x => x.MyProp'
                to set the property 'MyProp' from <paramref name="target"/>.
            </param>
            <param name="source">The instance to set the property on.</param>
        </member>
        <member name="T:Mediachase.Commerce.FrameworkContext">
            <summary>
            Global context class for the framework. Provides access to sub systems and some common settings.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.FrameworkContext.Current">
            <summary>
            Gets the current framework context.
            </summary>
            <value>The current.</value>
        </member>
        <member name="P:Mediachase.Commerce.FrameworkContext.OrderSystem">
            <summary>
            Gets the order system.
            </summary>
            <value>The order system.</value>
        </member>
        <member name="P:Mediachase.Commerce.FrameworkContext.CatalogSystem">
            <summary>
            Gets the catalog system.
            </summary>
            <value>The catalog system.</value>
        </member>
        <member name="P:Mediachase.Commerce.FrameworkContext.CurrentDateTime">
            <summary>
            Gets or sets the current date time. This property is used to filter out time elements and allows
            future or past simulations.
            </summary>
            <value>The context date time.</value>
        </member>
        <member name="P:Mediachase.Commerce.FrameworkContext.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Mediachase.Commerce.FrameworkContext.ProductVersion">
            <summary>
            Gets the product version.
            </summary>
            <value>The product version.</value>
        </member>
        <member name="P:Mediachase.Commerce.FrameworkContext.ProductName">
            <summary>
            Gets the name of the product.
            </summary>
            <value>The name of the product.</value>
        </member>
        <member name="P:Mediachase.Commerce.FrameworkContext.ProductVersionDesc">
            <summary>
            Gets the product version description in form of Major.Minor (Build: Build).
            </summary>
            <value>The product version desc.</value>
        </member>
        <member name="T:Mediachase.Commerce.IApplicationContext">
            <summary>
            Contains information about the current application context
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.IApplicationContext.HasContentModelTypes">
            <summary>
            Indicates whether the current application has the IContent model types for catalog content available.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.IApplicationContext.DisableVersionSync">
            <summary>
            Indicates whether the version sync is disabled.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.ICommerceContext.GetDefaultCurrency">
            <summary>
            Returns the default currency within the current context.
            </summary>
            <returns>The default currency.</returns>
        </member>
        <member name="M:Mediachase.Commerce.ICommerceContext.GetCatalogConnectionString">
            <summary>
            Gets the connection string for the catalog database.
            </summary>
            <returns>The catalog database connection string.</returns>
        </member>
        <member name="M:Mediachase.Commerce.ICommerceContext.GetUserName">
            <summary>
            Gets the current user's username.
            </summary>
            <returns>The current user's username, or null if the current user is not autenticated.</returns>
        </member>
        <member name="M:Mediachase.Commerce.ICommerceContext.GetCustomerGroup">
            <summary>
            Gets the current user's customer group.
            </summary>
            <returns>The current user's customer group, or null if the curreny user is not authenticated or has no customer group.</returns>
        </member>
        <member name="T:Mediachase.Commerce.ICurrentMarket">
            <summary>
            Resolves the current market for this request / user
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.ICurrentMarket.GetCurrentMarket">
            <summary>
            Gets the current market.
            </summary>
            <returns>The current market.</returns>
        </member>
        <member name="M:Mediachase.Commerce.ICurrentMarket.SetCurrentMarket(Mediachase.Commerce.MarketId)">
            <summary>
            Sets the current market.
            </summary>
            <param name="marketId">The market id to set.</param>
            <remarks>An implementation is free to ignore calls to this method, and instead return the result from 
            GetCurrentMarket based on some other mechanism (for example geo-IP lookup).</remarks>
        </member>
        <member name="P:Mediachase.Commerce.IMarket.MarketId">
            <summary>
            Gets the market's unique identifier.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.IMarket.IsEnabled">
            <summary>
            Gets a value indicating if the market is enabled.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.IMarket.MarketName">
            <summary>
            Gets the market's name.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.IMarket.MarketDescription">
            <summary>
            Gets the market's description.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.IMarket.DefaultLanguage">
            <summary>
            Gets the default language for the market.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.IMarket.Languages">
            <summary>
            Gets the available languages for the market.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.IMarket.DefaultCurrency">
            <summary>
            Gets the default currency for the market.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.IMarket.Currencies">
            <summary>
            Gets the available currencies for the market.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.IMarket.Countries">
            <summary>
            Gets the country codes associated with the market.
            </summary>
            <remarks>
            The country codes should be in ISO standard. 
            By default, the ISO 3166-1 alpha 3 (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) is used.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.IMarket.PricesIncludeTax">
            <summary>
            Gets the value indicating if the price of the market includes tax or not.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Initialization.CatalogInitialization">
            <summary>
            Initialization module to handle the configuration of Commerce catalog meta data.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Initialization.CommerceChangeQueueFactory.#ctor(Mediachase.Data.Provider.IConnectionStringHandler)">
            <summary>
            Creates an instance of <see cref="T:Mediachase.Commerce.Initialization.CommerceChangeQueueFactory"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Initialization.CommerceChangeQueueFactory.#ctor(EPiServer.Events.ChangeNotification.EventQueue.InDatabaseQueueFactory,Mediachase.Data.Provider.IConnectionStringHandler)">
            <summary>
            Creates an instance of <see cref="T:Mediachase.Commerce.Initialization.CommerceChangeQueueFactory"/>.
            </summary>
            <param name="innerQueueFactory">The inner queue factory.</param>
            <param name="connectionHandler">The connection handler, which contains connection string to both CMS and Commerce database.</param>
        </member>
        <member name="T:Mediachase.Commerce.Internal.ConfigurationReader">
            <summary>
            Helper class to read parsed values from a <see cref="T:System.Collections.Specialized.NameValueCollection"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Internal.ConfigurationReader.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Internal.ConfigurationReader"/> class.
            </summary>
            <param name="configValues"></param>
        </member>
        <member name="M:Mediachase.Commerce.Internal.ConfigurationReader.ReadBool(System.String)">
            <summary>
            Reads a boolean value.
            </summary>
            <param name="key">The key to read the value for.</param>
            <returns>The parsed value, or null if the key was not found.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Internal.ConfigurationReader.ReadInt(System.String)">
            <summary>
            Reads an integer value.
            </summary>
            <param name="key">The key to read the value for.</param>
            <returns>The parsed value, or null if the key was not found.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Internal.ConfigurationReader.ReadCsv(System.String,System.Char[])">
            <summary>
            Reads comma separated string.
            </summary>
            <param name="key">The key to read the value for.</param>
            <param name="separator">Optional separators. If none is provided, ';' is used.</param>
            <returns>The values, or null if the key was not found.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Internal.ConfigurationReader.ReadString(System.String)">
            <summary>
            Reads a string value.
            </summary>
            <param name="key">The key to read the value for.</param>
            <returns>The value, or null if the key was not found.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Internal.IInitializationPlugin">
            <summary>
            For code which should be run during initialization to update Business Foundation classes.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Internal.IInitializationPlugin.Execute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the specified context. 
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:Mediachase.Commerce.Internal.IInitializationPlugin.SortOrder">
            <summary>
            Gets the order of plugins initialization.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.BusinessLogic.BackorderProcessor">
            <summary>
            Handles the processing of backorder request items.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.BackorderProcessor.#ctor(Mediachase.Commerce.InventoryService.InventoryRequest,Mediachase.Commerce.InventoryService.InventoryRequestItem,Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer,Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.BackorderProcessor"/>.
            </summary>
            <param name="request">The request containing the item to process.</param>
            <param name="requestItem">The request item to process.</param>
            <param name="operationKeySerializer">
            The <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer"/> for encoding and decoding operation keys.
            </param>
            <param name="recordStateSet">
            The collection of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/> values for the request.
            </param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.BackorderProcessor.Apply">
            <summary>
            Applies the request item to the appropriate <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/>.
            </summary>
            <remarks>
            <para>
            The backorder request item will be marked as a failure if the request date is before
            either <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseAvailableUtc"/> or 
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.BackorderAvailableUtc"/>, of if 
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.IsTracked"/> is false (untracked items cannot be out of
            stock, so they cannot be backordered).
            </para>
            <para>
            Successful backorders will apply quantity changes from
            <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.BackorderProcessor.GetPostValidateChanges"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.BackorderProcessor.Validate">
            <summary>
            Validates that the request item is successful.
            </summary>
            <remarks>
            The backorder request item will be successful if the conditions in <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.BackorderProcessor.Apply"/>
            are met, and <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.BackorderAvailableQuantity"/> is greater than
            zero at the beginning of the request.
            </remarks>
            <returns>True if the request item is successful; otherwise, false.</returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.BackorderProcessor.GetPostValidateChanges">
            <summary>
            Returns the changes applied by the request item.
            </summary>
            <remarks>
            <para>
            Successful backorder requests move quantity from
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.BackorderAvailableQuantity"/> to 
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.BackorderRequestedQuantity"/>.
            </para>
            <para>
            Backorder requests apply changes after validation because the
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.BackorderAvailableQuantity"/> value is permitted to go into
            the negative. If one backorder quantity is available, and a request contains two items
            backordering five each, the request should succeed -- backorder available is a soft
            limit since it is not a paid promise to purchase; it is more of a suggestion that the
            item is in demand. The changes are applied after validation so that the
            <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.BackorderProcessor.Validate"/> can verify that the <em>original</em> available quantity is
            greater than zero, and not that the <em>final</em> available quantity is greater than
            zero.
            </para>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.BackorderProcessor.GetResponseItems(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.BusinessLogic.CancelProcessor">
            <summary>
            Handles the processing of cancel request items.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.CancelProcessor.#ctor(Mediachase.Commerce.InventoryService.InventoryRequest,Mediachase.Commerce.InventoryService.InventoryRequestItem,Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer,Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.CancelProcessor"/>.
            </summary>
            <param name="request">The request containing the item to process.</param>
            <param name="requestItem">The request item to process.</param>
            <param name="operationKeySerializer">
            The <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer"/> for encoding and decoding operation keys.
            </param>
            <param name="recordStateSet">
            The collection of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/> values for the request.
            </param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.CancelProcessor.Apply">
            <summary>
            Applies the request item to the appropriate <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/>.
            </summary>
            <remarks>
            <para>
            The cancel request item will be marked as successful as long as the operation key is
            valid, even if it refers to a non-existent inventory record. Cancel requests are
            expected to always work, unless the input is invalid.
            </para>
            <para>
            Successful cancel requests undo the quantity changes applied by the request item that
            created the operation key.
            </para>
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.CancelProcessor.Validate">
            <summary>
            Validates that the request item is successful.
            </summary>
            <remarks>
            The cancel request item will succeed as long as the operation key is valid.
            </remarks>
            <returns>True if the request item is successful; otherwise, false.</returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.CancelProcessor.GetResponseItems(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.BusinessLogic.CompleteProcessor">
            <summary>
            Handles the processing of complete request items.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.CompleteProcessor.#ctor(Mediachase.Commerce.InventoryService.InventoryRequest,Mediachase.Commerce.InventoryService.InventoryRequestItem,Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer,Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.CancelProcessor"/>.
            </summary>
            <param name="request">The request containing the item to process.</param>
            <param name="requestItem">The request item to process.</param>
            <param name="operationKeySerializer">
            The <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer"/> for encoding and decoding operation keys.
            </param>
            <param name="recordStateSet">
            The collection of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/> values for the request.
            </param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.CompleteProcessor.Apply">
            <summary>
            Applies the request item to the appropriate <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/>.
            </summary>
            <remarks>
            <para>
            The complete request item marks a <see cref="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Purchase"/>,
            <see cref="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Preorder"/>, or 
            <see cref="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Backorder"/> request as completed.
            </para>
            <para>
            If the original request item was a <see cref="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Purchase"/> or
            <see cref="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Preorder"/>, then the requested quantities from the
            original request are removed; the items have been fulfilled and are no longer pending.
            </para>
            <para>
            If the original request item was a <see cref="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Backorder"/>, then
            the requested quantity from the original request is removed, decremented from 
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseAvailableQuantity"/>, and added to
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseRequestedQuantity"/>. This converts a pending
            backorder request into a pending purchase request.
            </para>
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.CompleteProcessor.Validate">
            <summary>
            Validates that the request item is successful.
            </summary>
            <remarks>
            <para>
            If the complete request item has a valid operation key and represents a
            <see cref="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Purchase"/> or 
            <see cref="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Preorder"/>, the request will succeed.
            </para>
            <para>
            If the complete request item has a valid oepration key and represents a
            <see cref="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Backorder"/>, then <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.CompleteProcessor.Validate"/> will also
            verify that there is enough <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseAvailableQuantity"/> to
            create a purchase replacing the original backorder.
            </para>
            </remarks>
            <returns>True if the request item is successful; otherwise, false.</returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.CompleteProcessor.GetResponseItems(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.BusinessLogic.NotSupportedProcessor">
            <summary>
            An implementation of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor"/> that will always fail and reply
            <see cref="F:Mediachase.Commerce.InventoryService.InventoryResponseType.NotSupported"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.NotSupportedProcessor.#ctor(Mediachase.Commerce.InventoryService.InventoryRequestItem)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.NotSupportedProcessor"/>.
            </summary>
            <param name="requestItem">The request item to process.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.NotSupportedProcessor.Apply">
            <summary>
            Does nothing. The request item will always fail.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.NotSupportedProcessor.Validate">
            <summary>
            Returns false. The request item will always fail.
            </summary>
            <returns>False.</returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.NotSupportedProcessor.GetResponseItems(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer">
            <summary>
            Serializes an operation to reference an operation for future complete, cancel, or split
            operations; or other operations in custom providers.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer.OperationKeyVersion">
            <summary>
            Gets the operation key version. Override to indicate custom serialization/deserialization other than the default ones.
            </summary>
            <value>
            The operation key version.
            </value>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer.TryDeserialize(System.String,Mediachase.Commerce.InventoryService.InventoryRequestType@,Mediachase.Commerce.InventoryService.InventoryChange@)">
            <summary>
            Tries to deserialize the string value to <see cref="T:Mediachase.Commerce.InventoryService.InventoryRequestType"/> and <see cref="T:Mediachase.Commerce.InventoryService.InventoryChange"/>.
            </summary>
            <param name="value">String value to deserialize.</param>
            <param name="requestType">Output InventoryRequestType.</param>
            <param name="change">Output InventoryChange.</param>
            <returns><c>true</c> if the deserialize process is completed. Otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.BusinessLogic.PreorderProcessor">
            <summary>
            Handles the processing of preorder request items.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.PreorderProcessor.#ctor(Mediachase.Commerce.InventoryService.InventoryRequest,Mediachase.Commerce.InventoryService.InventoryRequestItem,Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer,Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.PreorderProcessor"/>.
            </summary>
            <param name="request">The request containing the item to process.</param>
            <param name="requestItem">The request item to process.</param>
            <param name="operationKeySerializer">
            The <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer"/> for encoding and decoding operation keys.
            </param>
            <param name="recordStateSet">
            The collection of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/> values for the request.
            </param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.PreorderProcessor.#ctor(Mediachase.Commerce.InventoryService.InventoryRequest,Mediachase.Commerce.InventoryService.InventoryRequestItem,Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer,Mediachase.Commerce.InventoryService.BusinessLogic.RecordState)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.PreorderProcessor"/> for a a request item that is
            already being processed. This is used by the <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseOrPreorderProcessor"/>
            when the item will be processed as a preorder.
            </summary>
            <param name="request">The request containing the item to process.</param>
            <param name="requestItem">The request item to process.</param>
            <param name="operationKeySerializer">
            The <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer"/> for encoding and decoding operation keys.
            </param>
            <param name="recordState">The <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/> value for the request.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.PreorderProcessor.Apply">
            <summary>
            Applies the request item to the appropriate <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/>.
            </summary>
            <remarks>
            <para>
            The preorder request item will be marked as a failure if the request date is before
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PreorderAvailableUtc"/> or on or after 
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseAvailableUtc"/>, if the catalog entry is not found,
            or if the warehouse cannot be determined.
            </para>
            <para>
            Otherwise, the requested quantity will be decremented from both
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseAvailableQuantity"/> and 
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PreorderAvailableQuantity"/>; and added to 
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PreorderRequestedQuantity"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.PreorderProcessor.Validate">
            <summary>
            Validates that the request item is successful.
            </summary>
            <remarks>
            <para>
            The preorder request item will be successful if the conditions in <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.PreorderProcessor.Apply"/>
            are met, and the final <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PreorderAvailableQuantity"/> is 
            greater than or equal to zero.
            </para>
            <para>
            Note that the <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseAvailableQuantity"/> is permitted to
            become negative. This permits preorders for items that are not yet listed as in stock,
            while also allowing preorder reqeuests to decrement from available stock when the store
            has the items but is not yet permitted to sell them.
            </para>
            </remarks>
            <returns>True if the request item is successful; otherwise, false.</returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.PreorderProcessor.GetResponseItems(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.BusinessLogic.ProcessorResult">
            <summary>
            Contains the result of a <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestProcessor.Process"/> call.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.BusinessLogic.ProcessorResult.Response">
            <summary>
            The response to return to the caller.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.BusinessLogic.ProcessorResult.Changes">
            <summary>
            The changes to apply to the inventory system.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseOrPreorderProcessor">
            <summary>
            Handles the processing of purchase or preorder request items.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseOrPreorderProcessor.#ctor(Mediachase.Commerce.InventoryService.InventoryRequest,Mediachase.Commerce.InventoryService.InventoryRequestItem,Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer,Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseOrPreorderProcessor"/>.
            </summary>
            <param name="request">The request containing the item to process.</param>
            <param name="requestItem">The request item to process.</param>
            <param name="operationKeySerializer">
            The <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer"/> for encoding and decoding operation keys.
            </param>
            <param name="recordStateSet">
            The collection of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/> values for the request.
            </param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseOrPreorderProcessor.Apply">
            <summary>
            Applies the request item to the appropriate <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/>.
            </summary>
            <remarks>
            <para>
            The purchase or preorder request item will be marked as a failure if the request date
            is before both
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PreorderAvailableUtc"/> and 
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseAvailableUtc"/>, if the catalog entry is not found,
            or if the warehouse cannot be determined.
            </para>
            <para>
            Otherwise, the request date will be evaluated against
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PreorderAvailableUtc"/> and 
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseAvailableUtc"/>, and the request will be delegated
            to a <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseProcessor"/> or <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.PreorderProcessor"/> as appropriate.
            </para>
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseOrPreorderProcessor.Validate">
            <summary>
            Validates that the request item is successful.
            </summary>
            <remarks>
            If the conditions in <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseOrPreorderProcessor.Apply"/> are not met, returns false; otherwise, the
            call is delegated to an instance of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseProcessor"/> or
            <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.PreorderProcessor"/> as determined by <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseOrPreorderProcessor.Apply"/>.
            </remarks>
            <returns>True if the request item is successful; otherwise, false.</returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseOrPreorderProcessor.GetResponseItems(System.Boolean)">
            <summary>
            Creates the reponse item. Successful requests of type
            <see cref="F:Mediachase.Commerce.InventoryService.InventoryRequestType.PurchaseOrPreorder"/> will also set
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.ResponseTypeInfo"/> to indicate if the result is a
            preorder or a purchase.
            </summary>
            <param name="isOverallSuccess">
            True if all items in the request succeeded, otherwise false.
            </param>
            <returns>
            A single <see cref="T:Mediachase.Commerce.InventoryService.InventoryResponseItem"/> representing the result of this request item.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseProcessor">
            <summary>
            Handles the processing of purchase request items.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseProcessor.#ctor(Mediachase.Commerce.InventoryService.InventoryRequest,Mediachase.Commerce.InventoryService.InventoryRequestItem,Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer,Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseProcessor"/>.
            </summary>
            <param name="request">The request containing the item to process.</param>
            <param name="requestItem">The request item to process.</param>
            <param name="operationKeySerializer">
            The <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer"/> for encoding and decoding operation keys.
            </param>
            <param name="recordStateSet">
            The collection of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/> values for the request.
            </param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseProcessor.#ctor(Mediachase.Commerce.InventoryService.InventoryRequest,Mediachase.Commerce.InventoryService.InventoryRequestItem,Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer,Mediachase.Commerce.InventoryService.BusinessLogic.RecordState)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseProcessor"/> for a a request item that is
            already being processed. This is used by the <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseOrPreorderProcessor"/>
            when the item will be processed as a preorder.
            </summary>
            <param name="request">The request containing the item to process.</param>
            <param name="requestItem">The request item to process.</param>
            <param name="operationKeySerializer">
            The <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer"/> for encoding and decoding operation keys.
            </param>
            <param name="recordState">The <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/> value for the request.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseProcessor.Apply">
            <summary>
            Applies the request item to the appropriate <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/>.
            </summary>
            <remarks>
            <para>
            The purchase request item will be marked as a failure if the request date is before
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseAvailableUtc"/>, if the catalog entry is not found,
            or if the warehouse cannot be determined.
            </para>
            <para>
            Otherwise, the requested quantity will be decremented from
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseAvailableQuantity"/> and added to 
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PreorderRequestedQuantity"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseProcessor.Validate">
            <summary>
            Validates that the request item is successful.
            </summary>
            <remarks>
            <para>
            The purchase request item will be successful if the conditions in <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseProcessor.Apply"/>
            are met, and the final <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseAvailableQuantity"/> is 
            greater than or equal to zero.
            </para>
            </remarks>
            <returns>True if the request item is successful; otherwise, false.</returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.PurchaseProcessor.GetResponseItems(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState">
            <summary>
            Encapsulates an inventory record and a set of changes.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState.OriginalRecord">
            <summary>
            Gets the original, unchanged <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/>.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState.ChangedRecord">
            <summary>
            Gets the <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/> with the changes applied.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState.Changes">
            <summary>
            Gets the changes that have been added to the record state.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState.#ctor(Mediachase.Commerce.InventoryService.InventoryRecord)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/>.
            </summary>
            <param name="record">The original <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/>.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState.AddChange(Mediachase.Commerce.InventoryService.InventoryChange)">
            <summary>
            Adds a change to the <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/>.
            </summary>
            <param name="change">The <see cref="T:Mediachase.Commerce.InventoryService.InventoryChange"/> to apply.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState.RemoveChange(Mediachase.Commerce.InventoryService.InventoryChange)">
            <summary>
            Removes a change from the <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/>.
            </summary>
            <param name="change">The <see cref="T:Mediachase.Commerce.InventoryService.InventoryChange"/> to remove.</param>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet">
            <summary>
            A collection of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/> for a request, with methods to work within the
            request processing flow.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet.Item(Mediachase.Commerce.InventoryService.InventoryKey)">
            <summary>
            Gets an <see cref="T:Mediachase.Commerce.InventoryService.InventoryKey"/> for the specified <see cref="T:Mediachase.Commerce.InventoryService.InventoryKey"/>.
            </summary>
            <param name="key">The <see cref="T:Mediachase.Commerce.InventoryService.InventoryKey"/> to get a record state for.</param>
            <returns>
            The <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/> matching <paramref name="key"/>. If not found, an 
            exception will be thrown.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet.IncludeRecordsFor(System.String,System.String)">
            <summary>
            Notifies the <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet"/> that the processor will access the inventory
            record with the specified catalog entry code and warehouse code; or all inventory 
            records with the specified catalog entry code, if <paramref name="warehouseCode"/> is
            null or empty.
            </summary>
            <param name="catalogEntryCode">The catalog entry code to match.</param>
            <param name="warehouseCode">
            The warehouse code to match, or null or empty to match any warehouse.
            </param>
            <remarks>
            This method is intended to be called from the constructors of classes extending
            <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor"/>, and will determine what records are retrieved by
            <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet.LoadRequestedRecords(Mediachase.Commerce.InventoryService.IInventoryService)"/>. Once <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet.LoadRequestedRecords(Mediachase.Commerce.InventoryService.IInventoryService)"/> has been
            called, <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet.IncludeRecordsFor(System.String,System.String)"/> will have no effect.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet.LoadRequestedRecords(Mediachase.Commerce.InventoryService.IInventoryService)">
            <summary>
            Loads the records requested by <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet.IncludeRecordsFor(System.String,System.String)"/>.
            </summary>
            <param name="inventoryService">The inventory service to load records from.</param>
            <remarks>
            Called by the <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RequestProcessor"/> after all
            <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor"/> instances have been created.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet.TryGetRecord(System.String,System.String,Mediachase.Commerce.InventoryService.BusinessLogic.RecordState@)">
            <summary>
            Attempts to get a single <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/> matching a catalog entry and
            warehouse code, or just a catalog entry if <paramref name="warehouseCode"/> is null or
            empty.
            </summary>
            <param name="catalogEntryCode">The catalog entry code to get records for.</param>
            <param name="warehouseCode">
            The warehouse code to get records for, or null or empty to get records for any
            warehouse.</param>
            <param name="record">
            An out parameter that will be set to the matching record on success.
            </param>
            <returns>
            <see cref="F:Mediachase.Commerce.InventoryService.InventoryResponseType.Success"/> on success,
            <see cref="F:Mediachase.Commerce.InventoryService.InventoryResponseType.ItemNotFound"/> if no matching records are found, or
            <see cref="F:Mediachase.Commerce.InventoryService.InventoryResponseType.AmbiguousWarehouse"/> if 
            <paramref name="warehouseCode"/> is null or empty and multiple records exist matching
            <paramref name="catalogEntryCode"/>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet.GetEntryRecords(System.String)">
            <summary>
            Gets all <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/> instances matching <paramref name="catalogEntryCode"/>.
            </summary>
            <param name="catalogEntryCode">The catalog entry code to match.</param>
            <returns>
            All loaded <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/> instances matching <paramref name="catalogEntryCode"/>.
            </returns>
            <remarks>
            Custom processors supporting decisions between mutiple warehouses should use 
            <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet.GetEntryRecords(System.String)"/> instead of <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet.TryGetRecord(System.String,System.String,Mediachase.Commerce.InventoryService.BusinessLogic.RecordState@)"/> to fetch record states.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet.GetEnumerator">
            <summary>
            Enumerates all <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/> instances in the <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor">
            <summary>
            Abstract class for processing a single item in a request.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor.Apply">
            <summary>
            <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor.Apply"/> will be called after the parent processor has called
            <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet.LoadRequestedRecords(Mediachase.Commerce.InventoryService.IInventoryService)"/>, within the same transaction. <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor.Apply"/> is
            expected to apply all requested changes to the <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet"/> associated
            with the request.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor.Validate">
            <summary>
            <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor.Validate"/> will be called after <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor.Apply"/> has been called on all
            <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor"/> instances, still within the transaction, to check if
            the item in the request should be successful. <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor.Validate"/> is called after
            all calles to <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor.Apply"/> so that the overall result of the operation can be
            verified, instead of only verifying individual results.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor.GetPostValidateChanges">
            <summary>
            <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor.GetPostValidateChanges"/> will be called after <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor.Validate"/> has
            been called on all <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor"/> instances, if all
            <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor.Validate"/> calls return true. If <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor.GetPostValidateChanges"/>
            returns any changes, they will be applied without further validation.
            </summary>
            <returns>
            An enumerable of changes to apply after the operation has been validated.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor.GetResponseItems(System.Boolean)">
            <summary>
            Returns the final <see cref="T:Mediachase.Commerce.InventoryService.InventoryResponseItem"/> instances for the item (typically,
            only one unless the operation is a split). <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor.CreateDefaultResponseItem(Mediachase.Commerce.InventoryService.InventoryRequestItem,System.Boolean,Mediachase.Commerce.InventoryService.BusinessLogic.RecordState,System.String,Mediachase.Commerce.InventoryService.InventoryResponseType,Mediachase.Commerce.InventoryService.InventoryResponseTypeInfo)"/> can
            be used to generate response items in most cases.
            </summary>
            <param name="isOverallSuccess">
            True if all items wer successful, false if any item returned false from <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor.Validate"/>.
            </param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestItemProcessor.CreateDefaultResponseItem(Mediachase.Commerce.InventoryService.InventoryRequestItem,System.Boolean,Mediachase.Commerce.InventoryService.BusinessLogic.RecordState,System.String,Mediachase.Commerce.InventoryService.InventoryResponseType,Mediachase.Commerce.InventoryService.InventoryResponseTypeInfo)">
            <summary>
            Creates a response item with sensible defaults.
            </summary>
            <param name="requestItem">The request item that the response is for.</param>
            <param name="isOverallSuccess">True if the overall operation is successful, false if any item failed.</param>
            <param name="recordState">The record state associated with the item. May be null.</param>
            <param name="operationKey">The serialied operation key for the operation. May be null.</param>
            <param name="responseType">The response type to return.</param>
            <param name="responseTypeInfo">
            Additional information abotutthe response type (typically <see cref="F:Mediachase.Commerce.InventoryService.InventoryResponseTypeInfo.None"/>).
            </param>
            <returns>
            An array containing one <see cref="T:Mediachase.Commerce.InventoryService.InventoryResponseItem"/> describing the result of the operation.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.BusinessLogic.RequestProcessor">
            <summary>
            Process an inventory request.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.BusinessLogic.RequestProcessor.IsValid">
            <summary>
            Gets true if the request is well formed; otherwise, false.
            </summary>
            <remarks>
            This value only indicates if the request can be processed, and not if the request has
            been successfully processed.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestProcessor.#ctor(Mediachase.Commerce.InventoryService.IInventoryService,Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer,Mediachase.Commerce.InventoryService.InventoryRequest)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RequestProcessor"/>.
            </summary>
            <param name="inventoryService"></param>
            <param name="operationKeySerializer"></param>
            <param name="request"></param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestProcessor.#ctor">
            <summary>
            For test support only.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestProcessor.Process">
            <summary>
            Processes the request.
            </summary>
            <returns>
            An <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.ProcessorResult"/> containing the results of the processing.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestProcessor.GetInvalidResponse">
            <summary>
            Gets a <see cref="T:Mediachase.Commerce.InventoryService.InventoryResponse"/> instance when the request is invalid.
            </summary>
            <returns>
            An instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryResponse"/> that is appropriate for invalid
            <see cref="T:Mediachase.Commerce.InventoryService.InventoryRequest"/> values.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.BusinessLogic.RequestProcessorFactory">
            <summary>
            A factory for instances of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RequestProcessor"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestProcessorFactory.#ctor(Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RequestProcessorFactory"/>.
            </summary>
            <param name="operationKeySerializer">
            The operation key serializer for the implementation.
            </param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.RequestProcessorFactory.CreateProcessor(Mediachase.Commerce.InventoryService.IInventoryService,Mediachase.Commerce.InventoryService.InventoryRequest)">
            <summary>
            Creates an instance of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RequestProcessor"/> to process <paramref name="request"/>.
            </summary>
            <param name="inventoryService">The inventory service to use.</param>
            <param name="request">The request to process.</param>
            <returns>
            A new instance of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RequestProcessor"/> to process the specified request.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.BusinessLogic.SplitProcessor">
            <summary>
            Handles the processing of complete request items.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.SplitProcessor.#ctor(Mediachase.Commerce.InventoryService.InventoryRequest,Mediachase.Commerce.InventoryService.InventoryRequestItem,Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer,Mediachase.Commerce.InventoryService.BusinessLogic.RecordStateSet)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.SplitProcessor"/>.
            </summary>
            <param name="request">The request containing the item to process.</param>
            <param name="requestItem">The request item to process.</param>
            <param name="operationKeySerializer">
            The <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.OperationKeySerializer"/> for encoding and decoding operation keys.
            </param>
            <param name="recordStateSet">
            The collection of <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/> values for the request.
            </param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.SplitProcessor.Apply">
            <summary>
            Applies the request item to the appropriate <see cref="T:Mediachase.Commerce.InventoryService.BusinessLogic.RecordState"/>.
            </summary>
            <remarks>
            <para>
            The split request item will be marked as a failure if operation key cannot be
            deserialized, if the inventory record for the original request can no longer be found, 
            or if the requested quantity is less than zero or greater than or equal to the quantity
            of the original request being split.
            </para>
            <para>
            Split will never change the quantities of any inventory records; it only
            breaks existing operations into two parts.
            </para>
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.SplitProcessor.Validate">
            <summary>
            Validates that the request item is successful.
            </summary>
            <remarks>
            The split request item will be successful if the conditions in <see cref="M:Mediachase.Commerce.InventoryService.BusinessLogic.SplitProcessor.Apply"/> are
            met.
            </remarks>
            <returns>True if the request item is successful; otherwise, false.</returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.BusinessLogic.SplitProcessor.GetResponseItems(System.Boolean)">
            <summary>
            Creates the reponse items. Successful requests of type
            <see cref="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Split"/> will return two response items, one for each half
            of the original request; and will have
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.ResponseTypeInfo"/> set to indicate which part of the
            split each item represents.
            </summary>
            <param name="isOverallSuccess">
            True if all items in the request succeeded, otherwise false.
            </param>
            <returns>
            If successful, two instances of <see cref="T:Mediachase.Commerce.InventoryService.InventoryResponseItem"/> representing the
            result of this request item; otherwise, a single item representing failure.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.Compatibility.CompatibilityProxyBase">
            <summary>
            Base class for inventory compatibility proxy.
            For internal use only.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.Compatibility.InventoryServiceAsStorageProxy">
            <summary>
            WarehouseInventoryProxy can directly access the storage layer of the
            default inventory service provider, but cannot directly access the storage layer of
            custom providers. This proxy exposes any <see cref="T:Mediachase.Commerce.InventoryService.IInventoryService"/> provider as an
            <see cref="T:Mediachase.Commerce.InventoryService.Storage.IInventoryStorage"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Compatibility.InventoryServiceAsStorageProxy.#ctor(Mediachase.Commerce.InventoryService.IInventoryService,System.Action{System.Action})">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.Compatibility.InventoryServiceAsStorageProxy"/>.
            </summary>
            <param name="inventoryService">The <see cref="T:Mediachase.Commerce.InventoryService.IInventoryService"/> to wrap.</param>
            <param name="asTransaction">A delegate to execute an action in a transaction.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Compatibility.InventoryServiceAsStorageProxy.AsTransaction(System.Action)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Compatibility.InventoryServiceAsStorageProxy.GetCacheSkippingInstance">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Compatibility.InventoryServiceAsStorageProxy.GetInventory(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Compatibility.InventoryServiceAsStorageProxy.GetInventory(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Compatibility.InventoryServiceAsStorageProxy.ListInventory">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Compatibility.InventoryServiceAsStorageProxy.QueryInventory(Mediachase.Commerce.InventoryService.Storage.InventoryKeySet)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Compatibility.InventoryServiceAsStorageProxy.QueryInventoryPaged(Mediachase.Commerce.InventoryService.Storage.InventoryKeySet,System.Int32,System.Int32,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Compatibility.InventoryServiceAsStorageProxy.SaveInventory(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryRecord})">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Compatibility.InventoryServiceAsStorageProxy.InsertInventory(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryRecord})">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Compatibility.InventoryServiceAsStorageProxy.UpdateInventory(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryRecord})">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Compatibility.InventoryServiceAsStorageProxy.DeleteInventory(Mediachase.Commerce.InventoryService.Storage.InventoryKeySet)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Compatibility.InventoryServiceAsStorageProxy.DeleteInventory(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryKey})">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Compatibility.InventoryServiceAsStorageProxy.AdjustInventory(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryChange})">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.IInventoryService">
            <summary>
            Manages warehouse information and inventory levels.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.IInventoryService.Get(System.String,System.String)">
            <summary>
            Gets a single inventory record for a catalog entry and a warehouse, or null if a record
            does not exist.
            </summary>
            <param name="catalogEntryCode">The code of the desired catalog entry.</param>
            <param name="warehouseCode">The code of the desired warehouse.</param>
            <returns>The matching <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/>, or null if not found.</returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.IInventoryService.List">
            <summary>
            Lists all inventory records.
            </summary>
            <returns>A list of all <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/> values.</returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.IInventoryService.QueryByEntry(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Lists all inventory records matching <paramref name="catalogEntryCodes"/>.
            </summary>
            <param name="catalogEntryCodes">The codes of the desired catalog entries.</param>
            <returns>A list of all matching <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/>.</returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.IInventoryService.QueryByEntry(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32,System.Int32@)">
            <summary>
            Lists all inventory records matching <paramref name="catalogEntryCodes"/>, ordered by
            the entry and warehouse codes, with paging.
            </summary>
            <param name="catalogEntryCodes">The codes of the desired catalog entries.</param>
            <param name="offset">The number of records to skip.</param>
            <param name="count">The maximum number of records to return.</param>
            <param name="totalCount">The total number of matching records.</param>
            <returns>
            A list of all matching <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/>s in the specified range.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.IInventoryService.QueryByWarehouse(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Lists all inventory records matching <paramref name="warehouseCodes"/>.
            </summary>
            <param name="warehouseCodes">The IDs of the desired warehouses.</param>
            <returns>A list of all matching <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/>s.</returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.IInventoryService.QueryByWarehouse(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32,System.Int32@)">
            <summary>
            Lists all inventory records matching <paramref name="warehouseCodes"/>, ordered by the 
            entry and warehouse codes, with paging.
            </summary>
            <param name="warehouseCodes">The codes of the desired warehouses.</param>
            <param name="offset">The number of records to skip.</param>
            <param name="count">The maximum number of records to return.</param>
            <param name="totalCount">The total number of matching records.</param>
            <returns>
            A list of all matching <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/>s in the specified range.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.IInventoryService.QueryByPartialKey(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryKey})">
            <summary>
            Lists all inventory records matching an item in <paramref name="partialKeys"/>. The values
            of <see cref="P:Mediachase.Commerce.InventoryService.InventoryKey.CatalogEntryCode"/> and/or 
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryKey.WarehouseCode"/> may be null to match any value.
            </summary>
            <param name="partialKeys">The keys to match.</param>
            <returns>A list of all matching <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/>s.</returns>
            <remarks>
            This method exists to support implementations of the Request method. Note that only
            specifically null values will act as wildcards; empty or white space strings will not
            be treated as a wildcard.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.IInventoryService.QueryByPartialKey(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryKey},System.Int32,System.Int32,System.Int32@)">
            <summary>
            Lists all inventory records matching an item in <paramref name="partialKeys"/>, ordered
            by the entry and warehouse codes, with paging. The values of 
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryKey.CatalogEntryCode"/> and/or 
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryKey.WarehouseCode"/> may be null to match any value.
            </summary>
            <param name="partialKeys">The keys to match.</param>
            <param name="offset">The number of records to skip.</param>
            <param name="count">The maximum number of records to return.</param>
            <param name="totalCount">The total number of matching records.</param>
            <returns>
            A list of all matching <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/>s in the specified range.
            </returns>
            <remarks>
            This method exists to support implementations of the Request method. Note that only
            specifically null values will act as wildcards; empty or white space strings will not
            be treated as a wildcard.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.IInventoryService.Request(Mediachase.Commerce.InventoryService.InventoryRequest)">
            <summary>
            Requests a transactional inventory operation.
            </summary>
            <param name="request">The request.</param>
            <returns>The result of the request.</returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.IInventoryService.Save(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryRecord})">
            <summary>
            Saves the specified inventory records. Records will be matched to existing records on
            <see cref="P:InventoryRecord.CatalogEntryCode"/>
            and <see cref="P:InventoryRecord.WarehouseCode"/> values; and will be updated when a
            match is found and inserted when a match is not found.
            </summary>
            <param name="records">The records to save.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.IInventoryService.Insert(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryRecord})">
            <summary>
            Inserts the specified inventory records. An exception will be thrown if any records
            exist with matching <see cref="P:InventoryRecord.CatalogEntryCode"/> and 
            <see cref="P:InventoryRecord.WarehouseCode"/> values.
            </summary>
            <param name="records">The records to insert.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.IInventoryService.Update(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryRecord})">
            <summary>
            Updates the specified records. Records will be matched to existing records on
            <see cref="P:InventoryRecord.CatalogEntryCode"/>
            and <see cref="P:InventoryRecord.WarehouseCode"/> values; and an exception will be
            thrown for any records that do not match.
            </summary>
            <param name="records"></param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.IInventoryService.Delete(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryKey})">
            <summary>
            Deletes all specified inventory data.
            </summary>
            <param name="inventoryKeys">The inventory data to delete.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.IInventoryService.Adjust(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryChange})">
            <summary>
            Incrments or decrements matching values in the inventory provider. Elements of 
            <paramref name="changes"/> are matched to existing data by item and warehouse code,
            and each quantity in the <see cref="T:Mediachase.Commerce.InventoryService.InventoryChange"/> is added to the
            corresponding quantity in the inventory provider.
            </summary>
            <param name="changes">The changes to apply.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.IInventoryService.DeleteByEntry(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Deletes all inventory data for the specified catalog entries.
            </summary>
            <param name="catalogEntryCodes">The catalog entry codes to match.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.IInventoryService.DeleteByWarehouse(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Deletes all inventory data for the specified warehouses.
            </summary>
            <param name="warehouseCode">The warehouse codes to match.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.IInventoryService.GetCacheSkippingInstance">
            <summary>
            Gets an instance of <see cref="T:Mediachase.Commerce.InventoryService.IInventoryService"/> that will skip the cache on reads.
            Writes to the instance will still invalidate cache entries.
            </summary>
            <returns>
            An instance of <see cref="T:Mediachase.Commerce.InventoryService.IInventoryService"/> that will skip the cache on reads.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.InventoryChange">
            <summary>
            Represents an additive change to an <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/>.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryChange.PurchaseAvailableChange">
            <summary>
            Gets or sets the value to add to <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseAvailableQuantity"/>.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryChange.PreorderAvailableChange">
            <summary>
            Gets or sets the value to add to <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PreorderAvailableQuantity"/>.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryChange.BackorderAvailableChange">
            <summary>
            Gets or sets the value to add to <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.BackorderAvailableQuantity"/>.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryChange.PurchaseRequestedChange">
            <summary>
            Gets or sets the value to add to <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseRequestedQuantity"/>.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryChange.PreorderRequestedChange">
            <summary>
            Gets or sets the value to add to <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PreorderRequestedQuantity"/>.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryChange.BackorderRequestedChange">
            <summary>
            Gets or sets the value to add to <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.BackorderRequestedQuantity"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryChange.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryChange"/> with default values.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryChange.#ctor(System.String,System.String,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryChange"/> with the specified values.
            </summary>
            <param name="catalogEntryCode">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryKey.CatalogEntryCode"/>.</param>
            <param name="warehouseCode">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryKey.WarehouseCode"/>.</param>
            <param name="purchaseAvailableChange">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryChange.PurchaseAvailableChange"/>.</param>
            <param name="preorderAvailableChange">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryChange.PreorderAvailableChange"/>.</param>
            <param name="backorderAvailableChange">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryChange.BackorderAvailableChange"/>.</param>
            <param name="purchaseRequestedChange">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryChange.PurchaseRequestedChange"/>.</param>
            <param name="preorderRequestedChange">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryChange.PreorderRequestedChange"/>.</param>
            <param name="backorderRequestedChange">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryChange.BackorderRequestedChange"/>.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryChange.#ctor(Mediachase.Commerce.InventoryService.InventoryChange)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryChange"/> as a deep copy of 
            <paramref name="other"/>.
            </summary>
            <param name="other">The <see cref="T:Mediachase.Commerce.InventoryService.InventoryChange"/> to copy.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryChange.CreateWritableClone">
            <summary>
                Creates a writable copy of the current object.
            </summary>
            <returns>A writable copy of the current object.</returns>
            <remarks>The cloning is a deep-copy.</remarks>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryExtensions.Adjust(Mediachase.Commerce.InventoryService.IInventoryService,Mediachase.Commerce.InventoryService.InventoryChange)">
            <summary>
            Calls <see cref="M:Mediachase.Commerce.InventoryService.IInventoryService.Adjust(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryChange})"/> with a single <see cref="T:Mediachase.Commerce.InventoryService.InventoryChange"/>.
            </summary>
            <param name="service">The service to call.</param>
            <param name="change">The change to apply.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryExtensions.DeleteByEntry(Mediachase.Commerce.InventoryService.IInventoryService,System.String)">
            <summary>
            Calls <see cref="M:Mediachase.Commerce.InventoryService.IInventoryService.DeleteByEntry(System.Collections.Generic.IEnumerable{System.String})"/> for a single catalog entry code.
            </summary>
            <param name="service">The service to call.</param>
            <param name="catalogEntryCode">The entry to delete all inventory for.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryExtensions.DeleteByWarehouse(Mediachase.Commerce.InventoryService.IInventoryService,System.String)">
            <summary>
            Calls <see cref="M:Mediachase.Commerce.InventoryService.IInventoryService.DeleteByWarehouse(System.Collections.Generic.IEnumerable{System.String})"/> for a single warehouse code.
            </summary>
            <param name="service">The service to call.</param>
            <param name="warehouseCode">The warehouse to delete all inventory for.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryExtensions.Delete(Mediachase.Commerce.InventoryService.IInventoryService,Mediachase.Commerce.InventoryService.InventoryKey)">
            <summary>
            Calls <see cref="M:Mediachase.Commerce.InventoryService.IInventoryService.Delete(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryKey})"/> for a single <see cref="T:Mediachase.Commerce.InventoryService.InventoryKey"/>.
            </summary>
            <param name="service">The service to call.</param>
            <param name="inventoryKey">The key of the inventory record to delete.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryExtensions.GetEntryTotals(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryRecord})">
            <summary>
            Groups the elements in <paramref name="source"/> by catalog entry code, and aggregates 
            the inventory values for each group into a single <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/>.
            </summary>
            <param name="source">The collection of <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/> instances.</param>
            <returns>
            A collection one <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/> instance for each distinct catalog entry
            code, representing an aggregate inventory across all specified records.
            </returns>
            <remarks>
            <para>
            All dates and the <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.ReorderMinQuantity"/> property are
            aggregated to the minimum represented value. Other quantities are summed.
            </para>
            <para>
            If any value in a group has a <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.IsTracked"/> value of false,
            then the record representing the group will have <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.IsTracked"/>
            set to false, <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseAvailableQuantity"/> set to the
            maximum possible value, and <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.BackorderAvailableQuantity"/>
            set to zero. If the dates for the records indicate that preordering is available, then
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PreorderAvailableQuantity"/> will be set to the maximum
            possible value; otherwise, it will be set to zero.
            </para>
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryExtensions.EnsureNotNull``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentNullException"/> if the <paramref name="source"/> argument
            is null, or if any null items are found while enumerating <paramref name="source"/>.
            </summary>
            <typeparam name="T">The type of items enumerated.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> to enumerate.</param>
            <param name="name">The parameter name to use if an exception is thrown.</param>
            <returns>
            An enumerable that will enumerate the items in <paramref name="source"/>, throwing
            exceptions if any nulls are encountered.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryExtensions.AddBounded(System.Decimal,System.Decimal)">
            <summary>
            Adds <paramref name="addend"/> to <paramref name="value"/> and returns the result.
            If <paramref name="value"/> is equal to <see cref="F:System.Decimal.MaxValue"/> or 
            <see cref="F:System.Decimal.MinValue"/>, it is interpreted as positive or negative 
            infinity, and the result will equal <paramref name="value"/>.  If the operation would
            result in overflow or underflow, then the result will be 
            <see cref="F:System.Decimal.MaxValue"/> or <see cref="F:System.Decimal.MinValue"/>.
            </summary>
            <remarks>
            The value of <paramref name="addend"/> will never be interpreted as an infinite value.
            </remarks>
            <param name="value">The original value to update.</param>
            <param name="addend">The amoutn to change <paramref name="value"/> by.</param>
            <returns>The updated value.</returns>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.InventoryKey">
            <summary>
            Represents a unique identifier for an inventory record.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryKey.KeyComparer">
            <summary>
            The default comparer for instances of <see cref="T:Mediachase.Commerce.InventoryService.InventoryKey"/>. The comparer will use
            case insensitive comparison for the <see cref="P:Mediachase.Commerce.InventoryService.InventoryKey.CatalogEntryCode"/> and
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryKey.WarehouseCode"/> values.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryKey.PartialKeyComparer">
            <summary>
            A comparer for partial instances of <see cref="T:Mediachase.Commerce.InventoryService.InventoryKey"/>. The comparer will use
            case insensitive comparison for the <see cref="P:Mediachase.Commerce.InventoryService.InventoryKey.CatalogEntryCode"/> and
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryKey.WarehouseCode"/> values, and will consider null strings and empty strings to
            be equal.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryKey.IsReadOnly">
            <summary>
                Indicates whether the current object instance is read-only.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryKey.CatalogEntryCode">
            <summary>
            Gets or sets the catalog entry code.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryKey.WarehouseCode">
            <summary>
            Gets or sets the warehouse code.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryKey.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryKey"/> with default values.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryKey.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryKey"/> with the specified values.
            </summary>
            <param name="catalogEntryCode">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryKey.CatalogEntryCode"/>.</param>
            <param name="warehouseCode">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryKey.WarehouseCode"/>.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryKey.#ctor(Mediachase.Commerce.InventoryService.InventoryKey)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryKey"/> as a deep copy of
            <paramref name="other"/>.
            </summary>
            <param name="other">The <see cref="T:Mediachase.Commerce.InventoryService.InventoryKey"/> to copy.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryKey.CreateWritableClone">
            <summary>
                Creates a writable copy of the current object.
            </summary>
            <returns>A writable copy of the current object.</returns>
            <remarks>The cloning is a deep-copy.</remarks>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryKey.EPiServer#Data#Entity#IReadOnly#CreateWritableClone">
            <summary>
                Creates a writable copy of the current object.
            </summary>
            <returns>A writable copy of the current object.</returns>
            <remarks>The cloning is a deep-copy.</remarks>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryKey.MakeReadOnly">
            <summary>
                Changes the object instance into a read-only object.
            </summary>
            <remarks>
                After calling this method, any attempt to change the object instance or any
                contained object will generate a System.NotSupportedException. I.e. the semantics
                is "deep read-only".
                Note! After setting an object to read-only it is not possible to revert back
                to read-write mode.  You will have to call the CreateWritableClone method
                to get a copy that can be modified.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryKey.ThrowIfReadOnly">
            <summary>
            Throws an exception if the instance is read only.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryKey.InventoryKeyComparer.Equals(Mediachase.Commerce.InventoryService.InventoryKey,Mediachase.Commerce.InventoryService.InventoryKey)">
            <inheritdoc/>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryKey.InventoryKeyComparer.GetHashCode(Mediachase.Commerce.InventoryService.InventoryKey)">
            <inheritdoc/>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryKey.PartialInventoryKeyComparer.Equals(Mediachase.Commerce.InventoryService.InventoryKey,Mediachase.Commerce.InventoryService.InventoryKey)">
            <inheritdoc/>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryKey.PartialInventoryKeyComparer.GetHashCode(Mediachase.Commerce.InventoryService.InventoryKey)">
            <inheritdoc/>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.InventoryRecord">
            <summary>
            Represents inventory status for a single catalog entry at a single warehouse.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRecord.IsTracked">
            <summary>
            Gets a value indicating if inventory values are tracked for this item.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseAvailableQuantity">
            <summary>
            Gets the quantity of items available for purchase.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRecord.PreorderAvailableQuantity">
            <summary>
            Gets the quantity of items available for preorder.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRecord.BackorderAvailableQuantity">
            <summary>
            Gets the quantity of items available for backorder.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseRequestedQuantity">
            <summary>
            Gets the quantity of items requested for purchase and not yet completed.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRecord.PreorderRequestedQuantity">
            <summary>
            Gets the quantity of items requested for preorder and not yet completed.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRecord.BackorderRequestedQuantity">
            <summary>
            Gets the quantity of items requested for backorder and not yet completed.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseAvailableUtc">
            <summary>
            Gets the purchase availability date for the item and warehouse, in UTC.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRecord.PreorderAvailableUtc">
            <summary>
            Gets the preorder availability date for the item and warehouse, in UTC.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRecord.BackorderAvailableUtc">
            <summary>
            Gets the backorder availability date for the item and warehouse, in UTC.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRecord.AdditionalQuantity">
            <summary>
            Gets a quantity representing additional quantity at the warehouse that is not available
            for any transactions. This value is not used in business logic, and exists only to
            support backwards compatibility with the reserved quantity field.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRecord.ReorderMinQuantity">
            <summary>
            Gets the reorder minimum quantity. This value is not used in business logic, and exists
            only for backwards compatibility.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryRecord.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/> with default values.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryRecord.#ctor(System.String,System.String,System.Boolean,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.DateTime,System.DateTime,System.DateTime,System.Decimal,System.Decimal)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/> with the specified values.
            </summary>
            <param name="catalogEntryCode">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryKey.CatalogEntryCode"/>.</param>
            <param name="warehouseCode">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryKey.WarehouseCode"/>.</param>
            <param name="isTracked">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.IsTracked"/>.</param>
            <param name="purchaseAvailableQuantity">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseAvailableQuantity"/>.</param>
            <param name="preorderAvailableQuantity">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PreorderAvailableQuantity"/>.</param>
            <param name="backorderAvailableQuantity">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.BackorderAvailableQuantity"/>.</param>
            <param name="purchaseRequestedQuantity">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseRequestedQuantity"/>.</param>
            <param name="preorderRequestedQuantity">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PreorderRequestedQuantity"/>.</param>
            <param name="backorderRequestedQuantity">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.BackorderRequestedQuantity"/>.</param>
            <param name="purchaseAvailableUtc">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PurchaseAvailableUtc"/>.</param>
            <param name="preorderAvailableUtc">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.PreorderAvailableUtc"/>.</param>
            <param name="backorderAvailableUtc">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.BackorderAvailableUtc"/>.</param>
            <param name="additionalQuantity">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.AdditionalQuantity"/>.</param>
            <param name="reorderMinQuantity">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.ReorderMinQuantity"/>.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryRecord.#ctor(Mediachase.Commerce.InventoryService.InventoryRecord)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/> as a deep copy of 
            <paramref name="other"/>.
            </summary>
            <param name="other">The <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/> to copy.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryRecord.CreateWritableClone">
            <summary>
                Creates a writable copy of the current object.
            </summary>
            <returns>A writable copy of the current object.</returns>
            <remarks>The cloning is a deep-copy.</remarks>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.InventoryRequest">
            <summary>
            Represents a request for the inventory system.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRequest.RequestDateUtc">
            <summary>
            Gets or sets the request date, in UTC.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRequest.Items">
            <summary>
            Gets or sets a collection of <see cref="T:Mediachase.Commerce.InventoryService.InventoryRequestItem"/> values.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRequest.Context">
            <summary>
            Gets or sets additional provider-specific data for the request.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryRequest.#ctor">
            <summary>
            Creates an instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryRequest"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryRequest.#ctor(Mediachase.Commerce.InventoryService.InventoryRequest)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryRequest"/> as a deep copy of another 
            <see cref="T:Mediachase.Commerce.InventoryService.InventoryRequest"/>.
            </summary>
            <param name="other">The <see cref="T:Mediachase.Commerce.InventoryService.InventoryRequest"/> to copy.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryRequest.#ctor(System.DateTime,System.Collections.Generic.IList{Mediachase.Commerce.InventoryService.InventoryRequestItem},System.Object)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryRequest"/> with the specified values.
            </summary>
            <param name="requestDateUtc">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRequest.RequestDateUtc"/>.</param>
            <param name="items">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRequest.Items"/>.</param>
            <param name="context">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRequest.Context"/>.</param>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.InventoryRequestItem">
            <summary>
            Represents one item in an <see cref="T:Mediachase.Commerce.InventoryService.InventoryRequest"/>.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRequestItem.ItemIndex">
            <summary>
            Gets or sets the item index. Used to correlate request items with response items.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRequestItem.RequestType">
            <summary>
            Gets or sets the request type. This may be <see cref="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Purchase"/>
            or <see cref="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Backorder"/>.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRequestItem.CatalogEntryCode">
            <summary>
            Gets or sets the requested catalog entry code.
            </summary>
            <remarks>
            The catalog entry code is ignored in completion, cancellation, and backorder redemption requests.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRequestItem.WarehouseCode">
            <summary>
            Gets or sets the code of the warehouse to request inventory from.
            </summary>
            <remarks>
            The warehouse code is ignored in completion, cancellation, and backorder redemption
            requests.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRequestItem.Quantity">
            <summary>
            Gets or sets the requested quantity.
            </summary>
            <remarks>
            The quantity is ignored in completion, cancellation, and backorder redemption requests.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRequestItem.OperationKey">
            <summary>
            Gets or sets an optional operation key to correlate this request with a previous 
            request.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryRequestItem.Context">
            <summary>
            Gets or sets additional provider-specific data for the request.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryRequestItem.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryRequestItem"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryRequestItem.#ctor(Mediachase.Commerce.InventoryService.InventoryRequestItem)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryRequestItem"/> as a deep copy of another 
            <see cref="T:Mediachase.Commerce.InventoryService.InventoryRequestItem"/>.
            </summary>
            <param name="other">The <see cref="T:Mediachase.Commerce.InventoryService.InventoryRequestItem"/> to copy.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryRequestItem.#ctor(System.Int32,Mediachase.Commerce.InventoryService.InventoryRequestType,System.String,System.String,System.Decimal,System.String,System.Object)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryRequestItem"/> with the specified values.
            </summary>
            <param name="itemIndex">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRequestItem.ItemIndex"/>.</param>
            <param name="requestType">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRequestItem.RequestType"/>.</param>
            <param name="catalogEntryCode">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRequestItem.CatalogEntryCode"/>.</param>
            <param name="warehouseCode">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRequestItem.WarehouseCode"/>.</param>
            <param name="quantity">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRequestItem.Quantity"/>.</param>
            <param name="operationKey">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRequestItem.OperationKey"/>.</param>
            <param name="context">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryRequestItem.Context"/>.</param>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.InventoryRequestType">
            <summary>
            The operation being requested by an <see cref="T:Mediachase.Commerce.InventoryService.InventoryRequestItem"/>.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Purchase">
            <summary>
            The request is for a purchase.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Preorder">
            <summary>
            The request is for a preorder.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Backorder">
            <summary>
            The request is for a backorder.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryRequestType.PurchaseOrPreorder">
            <summary>
            The request is for a purchase or a preorder. The system will compare the order date
            with the purchase and preorder availability dates to determine the appropriate 
            operation.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Complete">
            <summary>
            Complete an existing allocation. The operation keys of an existing
            allocation must be specified.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Cancel">
            <summary>
            Cancel an existing allocation. The operation keys of an existing
            allocation must be specified.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Split">
            <summary>
            Splits an existing allocation into two parts. The operation keys of an
            existing allocation must be specified.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Custom">
            <summary>
            Executes a custom, provider-specific operation. The operation should be further
            described in the context property.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.InventoryResponse">
            <summary>
            Represents a response from a call to <see cref="M:Mediachase.Commerce.InventoryService.IInventoryService.Request(Mediachase.Commerce.InventoryService.InventoryRequest)"/>.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryResponse.IsSuccess">
            <summary>
            Gets or sets a value indicating if the overall operation was a success.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryResponse.RequestDateUtc">
            <summary>
            Gets or sets the request date, in UTC. This will be the same request date as specified 
            in the request.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryResponse.Items">
            <summary>
            Gets or sets a collection of responses for each item in the request.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryResponse.Context">
            <summary>
            Gets or sets additional provider-specific data for the response.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryResponse.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryResponse"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryResponse.#ctor(Mediachase.Commerce.InventoryService.InventoryResponse)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryResponse"/> as a deep copy of another <see cref="T:Mediachase.Commerce.InventoryService.InventoryResponse"/>.
            </summary>
            <param name="other">The <see cref="T:Mediachase.Commerce.InventoryService.InventoryResponse"/> to copy.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryResponse.#ctor(System.Boolean,System.DateTime,System.Collections.Generic.IList{Mediachase.Commerce.InventoryService.InventoryResponseItem},System.Object)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryResponse"/> with the specified values.
            </summary>
            <param name="isSuccess">The value for <cref name="IsSuccess"/>.</param>
            <param name="requestDateUtc">The value for <cref name="RequestDateUtc"/>.</param>
            <param name="items">The value for <cref name="Items"/>.</param>
            <param name="context">The value for <cref name="Context"/>.</param>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.InventoryResponseItem">
            <summary>
            Represents one item in a response from the inventory system.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.RequestItem">
            <summary>
            Gets or sets the request data.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.ResponseType">
            <summary>
            Gets or sets the response type.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.ResponseTypeInfo">
            <summary>
            Gets or sets the response subtype.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.WarehouseCode">
            <summary>
            Gets or sets the fulfillment warehouse determined by the inventory system.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.OperationKey">
            <summary>
            Gets or sets the opaque operation key.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.IsTracked">
            <summary>
            Gets or sets a value indicating if inventory values are tracked for this item.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.PurchaseAvailableQuantity">
            <summary>
            Gets or sets the purchase available quantity for the requested item, after any changes
            from the transaction that produced this response.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.PreorderAvailableQuantity">
            <summary>
            Gets or sets the preorder available quantity for the requested item, after any changes
            from the transaction that produced this response.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.BackorderAvailableQuantity">
            <summary>
            Gets or sets the backorder available quantity for the requested item, after any changes
            from the transaction that produced this response.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.PurchaseRequestedQuantity">
            <summary>
            Gets or sets the purchase requested quantitiy for the requested item, after any changes
            from the transaction that produced this response.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.PreorderRequestedQuantity">
            <summary>
            Gets or sets the purchase requested quantitiy for the requested item, after any changes
            from the transaction that produced this response.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.BackorderRequestedQuantity">
            <summary>
            Gets or sets the backorder available quantity for the requested item, after any changes
            from the transaction that produced this response.
            </summary>        
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.PurchaseAvailableUtc">
            <summary>
            Gets or sets the purchase availability date for the requested item, in UTC.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.PreorderAvailableUtc">
            <summary>
            Gets or sets the preorder availability date for the requested item, in UTC.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.BackorderAvailableUtc">
            <summary>
            Gets the backorder availability date for the item and warehouse, in UTC.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryResponseItem.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryResponseItem"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryResponseItem.#ctor(Mediachase.Commerce.InventoryService.InventoryResponseItem)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryResponseItem"/> as a deep copy of another 
            <see cref="T:Mediachase.Commerce.InventoryService.InventoryResponseItem"/>.
            </summary>
            <param name="other">The <see cref="T:Mediachase.Commerce.InventoryService.InventoryResponseItem"/> to copy.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryResponseItem.#ctor(Mediachase.Commerce.InventoryService.InventoryRequestItem,Mediachase.Commerce.InventoryService.InventoryResponseType,Mediachase.Commerce.InventoryService.InventoryResponseTypeInfo,System.String,System.String,System.Boolean,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryResponseItem"/> with the specified values.
            </summary>
            <param name="requestItem">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.RequestItem"/>.</param>
            <param name="responseType">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.ResponseType"/>.</param>
            <param name="responseTypeInfo">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.ResponseTypeInfo"/>.</param>
            <param name="warehouseCode">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.WarehouseCode"/>.</param>
            <param name="operationKey">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.OperationKey"/>.</param>
            <param name="isTracked">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.IsTracked"/>.</param>
            <param name="purchaseAvailableQuantity">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.PurchaseAvailableQuantity"/>.</param>
            <param name="preorderAvailableQuantity">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.PreorderAvailableQuantity"/>.</param>
            <param name="backorderAvailableQuantity">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.BackorderAvailableQuantity"/>.</param>
            <param name="purchaseRequestedQuantity">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.PurchaseRequestedQuantity"/>.</param>
            <param name="preorderRequestedQuantity">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.PreorderRequestedQuantity"/>.</param>
            <param name="backorderRequestedQuantity">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.BackorderRequestedQuantity"/>.</param>
            <param name="purchaseAvailableUtc">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.PurchaseAvailableUtc"/>.</param>
            <param name="preorderAvailableUtc">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.PreorderAvailableUtc"/>.</param>
            <param name="backorderAvailableUtc">The value for <see cref="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.BackorderAvailableUtc"/>.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryResponseItem.ToInventoryRecord">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/> from the values in this
            response item, unless <see cref="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.RequestItem"/> is null. The values of
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.AdditionalQuantity"/> and 
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryRecord.ReorderMinQuantity"/> will be set to zero.
            </summary>
            <returns>
            A new <see cref="T:Mediachase.Commerce.InventoryService.InventoryRecord"/> with values from this
            <see cref="T:Mediachase.Commerce.InventoryService.InventoryResponseItem"/>, or null if <see cref="P:Mediachase.Commerce.InventoryService.InventoryResponseItem.RequestItem"/> is null.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.InventoryResponseType">
            <summary>
            Describes the result of a call to <see cref="M:Mediachase.Commerce.InventoryService.IInventoryService.Request(Mediachase.Commerce.InventoryService.InventoryRequest)"/> for one
            <see cref="T:Mediachase.Commerce.InventoryService.InventoryResponseItem"/>.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryResponseType.Success">
            <summary>
            The operation was successful.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryResponseType.OtherItemFailed">
            <summary>
            This item did not cause failure, but another item in the request failed.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryResponseType.InvalidRequest">
            <summary>
            The request item was invalid.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryResponseType.NotSupported">
            <summary>
            The request type is not supported by the current provider.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryResponseType.ItemNotFound">
            <summary>
            The requested item was not found.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryResponseType.NotEnough">
            <summary>
            There was not enough available stock, preorder stock, or backorder stock for the request.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryResponseType.NotAvailableOnDate">
            <summary>
            The item is not available on the request date.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryResponseType.AmbiguousWarehouse">
            <summary>
            The warehouse for fulfillment could not be determined from the request.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryResponseType.ItemIsUntracked">
            <summary>
            The operation is not valid because the item's inventory is not tracked.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryResponseType.CustomError">
            <summary>
            A custom provider has thrown an error. Additional information should be included in the
            context property.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.InventoryResponseTypeInfo">
            <summary>
            Additional response data about successful split and purcase-or-preorder operations.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryResponseTypeInfo.None">
            <summary>
            The response has no subtype.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryResponseTypeInfo.Purchase">
            <summary>
            The <see cref="F:Mediachase.Commerce.InventoryService.InventoryRequestType.PurchaseOrPreorder"/> request resulted in a purchase.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryResponseTypeInfo.Preorder">
            <summary>
            The <see cref="F:Mediachase.Commerce.InventoryService.InventoryRequestType.PurchaseOrPreorder"/> request resulted in a preorder.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryResponseTypeInfo.SplitFirst">
            <summary>
            This item represents the requested quantity of a 
            <see cref="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Split"/> request.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.InventoryService.InventoryResponseTypeInfo.SplitSecond">
            <summary>
            This item represents the remaining quantity of a
            <see cref="F:Mediachase.Commerce.InventoryService.InventoryRequestType.Split"/> request.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryServiceProvider.#ctor(Mediachase.Commerce.InventoryService.BusinessLogic.RequestProcessorFactory,EPiServer.Framework.Cache.ISynchronizedObjectInstanceCache)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.InventoryServiceProvider"/>.
            </summary>
            <param name="processorFactory">The factory for request processors.</param>
            <param name="cache">The cache.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryServiceProvider.Get(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryServiceProvider.List">
            <inheritdoc/>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryServiceProvider.QueryByEntry(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryServiceProvider.QueryByEntry(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32,System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryServiceProvider.QueryByWarehouse(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryServiceProvider.QueryByWarehouse(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32,System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryServiceProvider.QueryByPartialKey(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryKey})">
            <inheritdoc/>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryServiceProvider.QueryByPartialKey(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryKey},System.Int32,System.Int32,System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryServiceProvider.Request(Mediachase.Commerce.InventoryService.InventoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryServiceProvider.Save(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryRecord})">
            <inheritdoc/>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryServiceProvider.Insert(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryRecord})">
            <inheritdoc/>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryServiceProvider.Update(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryRecord})">
            <inheritdoc/>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryServiceProvider.Delete(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryKey})">
            <inheritdoc/>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryServiceProvider.Adjust(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryChange})">
            <inheritdoc/>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryServiceProvider.DeleteByEntry(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryServiceProvider.DeleteByWarehouse(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.InventoryServiceProvider.GetCacheSkippingInstance">
            <inheritdoc/>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.Storage.IInventoryStorage">
            <summary>
            An internal API describing the operations of the inventory data storage layer.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.IInventoryStorage.AsTransaction(System.Action)">
            <summary>
            Executes <paramref name="action"/> in a transaction.
            </summary>
            <param name="action">The action to execute.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.IInventoryStorage.GetCacheSkippingInstance">
            <summary>
            Gets an <see cref="T:Mediachase.Commerce.InventoryService.Storage.IInventoryStorage"/> that will execute operations against this
            <see cref="T:Mediachase.Commerce.InventoryService.Storage.IInventoryStorage"/>, but will skip the cache on reads. Writes to the
            cache skipping instance will still invalidate cache entries.
            </summary>
            <returns>
            An <see cref="T:Mediachase.Commerce.InventoryService.Storage.IInventoryStorage"/> that will skip the cache on reads.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.Storage.InventoryCache">
            <summary>
            Implements the inventory cache as an <see cref="T:Mediachase.Commerce.InventoryService.Storage.IInventoryStorage"/> layer on top of an
            actual data store.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryCache.#ctor(Mediachase.Commerce.InventoryService.Storage.IInventoryStorage,EPiServer.Framework.Cache.ISynchronizedObjectInstanceCache,Mediachase.Commerce.Catalog.CatalogOptions)">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.Storage.InventoryCache"/>.
            </summary>
            <param name="storage">The underlying data storage.</param>
            <param name="cache">The cache.</param>
            <param name="catalogOptions">catalog options</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryCache.AsTransaction(System.Action)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryCache.GetCacheSkippingInstance">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryCache.GetInventory(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryCache.ListInventory">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryCache.QueryInventory(Mediachase.Commerce.InventoryService.Storage.InventoryKeySet)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryCache.QueryInventoryPaged(Mediachase.Commerce.InventoryService.Storage.InventoryKeySet,System.Int32,System.Int32,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryCache.SaveInventory(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryRecord})">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryCache.InsertInventory(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryRecord})">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryCache.UpdateInventory(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryRecord})">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryCache.DeleteInventory(Mediachase.Commerce.InventoryService.Storage.InventoryKeySet)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryCache.AdjustInventory(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryChange})">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.Storage.InventoryDatabase">
            <summary>
            Implements the database storage for the inventory service.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryDatabase.#ctor(Mediachase.Commerce.Engine.Events.CatalogKeyEventBroadcaster,Mediachase.Commerce.IApplicationContext,Mediachase.Data.Provider.IConnectionStringHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.InventoryService.Storage.InventoryDatabase"/> class.
            </summary>
            <param name="broadcaster">The broadcaster.</param>
            <param name="applicationContext">The application context</param>
            <param name="connectionHandler">The connection handler, which contains connection string to both CMS and Commerce database.</param>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryDatabase.AsTransaction(System.Action)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryDatabase.GetCacheSkippingInstance">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryDatabase.LoadListWithTotalCount``1(Mediachase.Data.Provider.DataCommand,System.Func{System.Data.IDataReader,``0},System.Int32@)">
            <summary>
            The <see cref="T:Mediachase.Data.Provider.DataService"/> implementation of readers does not work with out
            parameters, since it tries to read the out parameter value before the reader is fully
            enumerated. Instead, queries with a total count should return the value as a scalar
            result set before the actual set, and deserialize with this method.
            </summary>
            <typeparam name="T">The type of the items to deserialize.</typeparam>
            <param name="command">The command to execute.</param>
            <param name="deserialize">The function to deserialize each row of the reader.</param>
            <param name="totalCount">
            An output parameter for the total count, taken from the first result set in the reader.
            </param>
            <returns>The deserialized results of the query.</returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryDatabase.Normalize(System.Decimal)">
            <summary>
            Normalize all decimal values to remove trailing zeros.
            </summary>
            <param name="value">Value to normalize.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet">
            <summary>
            A read-only collection of <see cref="T:Mediachase.Commerce.InventoryService.InventoryKey"/> values that may be partial keys. The
            set is minimized to remove redundant items, and the collections are sorted so that two
            instances of <see cref="T:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet"/> that represent the same logical set will be
            identical.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet.IsEmpty">
            <summary>
            Gets true if the <see cref="T:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet"/> was constructed from an empty enumerable;
            otherwise, false.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet.IsEverything">
            <summary>
            Gets true if the <see cref="T:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet"/> matches all records; otherwise, false.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet.CatalogEntryCodes">
            <summary>
            Gets the catalog entry code values to match for any warehouse code. The list is sorted,
            lowercased, and contains no duplicates.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet.WarehouseCodes">
            <summary>
            Gets the warehouse code values to match for any catalog entry code. The list is sorted,
            lowercased, and contains no duplicates.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet.Keys">
            <summary>
            Gets the pairs of catalog entry code and warehouse code for exact matches. The list is
            sorted, lowercased, contains no duplicates, and contains no entries that would be
            matched by a value in <see cref="P:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet.WarehouseCodes"/> or <see cref="P:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet.CatalogEntryCodes"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet.#ctor">
            <summary>
            Instances of <see cref="T:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet"/> should be created with one of the static
            methods which describe how their arguments will be interpreted.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet.ForPartialKeys(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryKey})">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet"/> for the specified partial
            <see cref="T:Mediachase.Commerce.InventoryService.InventoryKey"/> instances. Partial keys may have null or empty values for
            <see cref="P:Mediachase.Commerce.InventoryService.InventoryKey.CatalogEntryCode"/> or <see cref="P:Mediachase.Commerce.InventoryService.InventoryKey.WarehouseCode"/>
            to match any value.
            </summary>
            <param name="partialKeys">
            The collection of <see cref="T:Mediachase.Commerce.InventoryService.InventoryKey"/> values to be interpreted as partial keys.
            </param>
            <returns>
            An <see cref="T:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet"/> representing the set of partial keys.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet.ForCatalogEntryCodes(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet"/> that matches the specified
            catalog entry codes, with any warehouse codes.
            </summary>
            <param name="catalogEntryCodes">The catalog entry codes to match.</param>
            <returns>
            An <see cref="T:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet"/> matching the specified catalog entry codes.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet.ForWarehouseCodes(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet"/> that matches the specified
            warehouse codes, with any catalog entry codes.
            </summary>
            <param name="warehouseCodes">The warehouse codes to match.</param>
            <returns>
            An <see cref="T:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet"/> matching the specified warehouse codes.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet.ForInventoryKeys(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryKey})">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet"/> that matches the specified
            inventory keys. Unlike <see cref="M:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet.ForPartialKeys(System.Collections.Generic.IEnumerable{Mediachase.Commerce.InventoryService.InventoryKey})"/>, the values in 
            <paramref name="inventoryKeys"/> may not have null values.
            </summary>
            <param name="inventoryKeys">The inventory keys to match.</param>
            <returns>
            An <see cref="T:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet"/> matching the specified inventory keys.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.InventoryService.Storage.InventoryServiceCacheBase.CreateCacheKey(System.Object[])">
            <summary>
            Creates a cache key for the specified arguments.
            </summary>
            <param name="keyParts">
            The arguments for the operation. Each value in arguments must be a string, an int, or 
            an <see cref="T:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet"/>. No more than one element may be a 
            <see cref="T:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet"/>.
            </param>
            <returns>A cache key for the specified operation, application id, and values.</returns>
            <remarks>
            The cache key consists of a series of field separated by '$' characters.
            <list type="bullet">
            <item><description>The first field is the cache prefix.</description></item>
            <item><description>
            The fields from <paramref name="keyParts"/>, except for any items of type
            <see cref="T:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet"/>, are added in order. Integer values are added with 
            culture invariant format. Strings are lowercased, and any '$' or '#' characters are
            escaped with a preceding '#' character. Empty strings are encoded as the sequence "#0".
            </description></item>
            <item><description>
            If <paramref name="keyParts"/> contains an item of type <see cref="T:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet"/>,
            it is added as a series of fields. The fields are added after all other items in
            <paramref name="keyParts"/>. The fields added are the count of items in
            <see cref="P:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet.CatalogEntryCodes"/>; the count of items in 
            <see cref="P:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet.WarehouseCodes"/>; the items in 
            <see cref="P:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet.CatalogEntryCodes"/>; the items in
            <see cref="P:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet.WarehouseCodes"/>; and finally the items in
            <see cref="P:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet.Keys"/> with the catalog entry code first and the warehouse
            code second. All fields are subject to the same lowercasing and escaping as other
            strings, and the <see cref="T:Mediachase.Commerce.InventoryService.Storage.InventoryKeySet"/> is expected to return distinct, ordered
            collections.
            </description></item>
            </list>
            </remarks>
        </member>
        <member name="T:Mediachase.Commerce.Inventory.Database.CatalogEntryInventoryDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Inventory.Database.CatalogEntryInventoryDto.CatalogEntryInventoryDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Inventory.Database.CatalogEntryInventoryDto.CatalogEntryInventoryRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Inventory.Database.CatalogEntryInventoryDto.CatalogEntryInventoryRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Inventory.Database.WarehouseContactInformationDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Inventory.Database.WarehouseContactInformationDto.WarehouseContactInformationDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Inventory.Database.WarehouseContactInformationDto.WarehouseContactInformationRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Inventory.Database.WarehouseContactInformationDto.WarehouseContactInformationRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Inventory.Database.WarehouseDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Inventory.Database.WarehouseDto.WarehouseDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Inventory.Database.WarehouseDto.WarehouseRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Inventory.Database.WarehouseDto.WarehouseRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Inventory.InventoryTrackingStatus.Disabled">
            <summary>
            When the Inventory Status is "Disabled", it behaves as if the store is selling digital goods. 
            Any amount can be sold, the requested quantities are updated, but the available counts do not change.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Inventory.InventoryTrackingStatus.Enabled">
            <summary>
            When the Inventory Status is "Enabled", it behaves as if we are tracking the inventory of physical goods, 
            which is a limited amount that can be sold. Stock will be required to be available to process orders, 
            and available counts will be decremented as orders are processed.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Inventory.IWarehouse">
            <summary>
            Abstraction for the Warehouse concept.
            </summary>
            <remarks>
            This abstraction is mostly redundant with the introduction of read-only support (there is only one 
            implementation of IWarehouse and most likely there will never be more). To avoid excessive breaking
            changes the IReadOnly interface is added to IWarehouse rather than Warehouse which would otherwise
            have been more appropriate.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouse.WarehouseId">
            <summary>
            Gets or sets the warehouse id.
            </summary>
            <value>The warehouse id. The id will be null if the object has not been persisted.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouse.Name">
            <summary>
            Gets or sets the warehouse name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouse.CreatorId">
            <summary>
            Gets or sets the creator of the warehouse record.
            </summary>
            <value>The CreatorId.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouse.Created">
            <summary>
            Gets or sets the timestamp at which the warehouse record was created.
            </summary>
            <value>The creation timestamp.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouse.ModifierId">
            <summary>
            Gets or sets the most recent modifier of the warehouse record.
            </summary>
            <value>The ModifierId.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouse.Modified">
            <summary>
            Gets or sets the timestamp at which the warehouse record was most recently updated.
            </summary>
            <value>The most recent update timestamp.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouse.IsActive">
            <summary>
            Indicates whether or not the warehouse is active.
            </summary>
            <value>A boolean indicating whether or not the warehouse is active.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouse.IsPrimary">
            <summary>
            Slated for obsolescence. Indicates whether or not the warehouse is the primary source for fulfillment. Superceeded by the FulfillmentPriorityOrder field.
            </summary>
            <value>A boolean indicating whether or not the warehouse is the primary source for fulfillment.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouse.SortOrder">
            <summary>
            Gets or sets the sort order for display purposes.
            </summary>
            <value>The sort order.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouse.Code">
            <summary>
            Gets or sets the code value.
            </summary>
            <value>The code.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouse.ContactInformation">
            <summary>
            Gets or sets the contact information for the warehouse.
            </summary>
            <value>The contact information for the warehouse.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouse.FulfillmentPriorityOrder">
            <summary>
            Gets or sets the place of the warehouse in the default order in which warehouses are used to fulfill orders.
            </summary>
            <value>The priority order.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouse.IsFulfillmentCenter">
            <summary>
            Indicates whether the warehouse is a fulfillment center. This means orders can be placed from this warehouse for outgoing shipments.
            </summary>
            <value>A boolean indicating whether the warehouse is a fulfillment center.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouse.IsPickupLocation">
            <summary>
            Indicates whether the warehouse is a pick-up location. This means orders can be placed from this warehouse for in-store pickups.
            </summary>
            <value>A boolean indicating whether the warehouse is a pickup location.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouse.IsDeliveryLocation">
            <summary>
            Indicates whether the warehouse is a delivery location. This means this warehouse can be used as a delivery location (i.e. for future in-store pickups).
            </summary>
            <value>A boolean indicating whether the warehouse is a delivery location.</value>
        </member>
        <member name="T:Mediachase.Commerce.Inventory.IWarehouseContactInformation">
            <summary>
            Encapsulation of data fields relating to the physical location and contact information for a warehouse
            </summary>
            <remarks>
            <para>This interface is a candidate for future consolidation with other contact information data models.</para>
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouseContactInformation.FirstName">
            <summary>
            Gets or sets the contacts first name.
            </summary>
            <value>The contacts first name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouseContactInformation.LastName">
            <summary>
            Gets or sets the contacts last name.
            </summary>
            <value>The contacts last name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouseContactInformation.MiddleName">
            <summary>
            Gets the contacts middle name.
            </summary>
            <value>The contacts middle name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouseContactInformation.FullName">
            <summary>
            Gets the contacts full name.
            </summary>
            <value>The contacts name in a preferred format for display and addressing.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouseContactInformation.Organization">
            <summary>
            Gets or sets the contacts organization name.
            </summary>
            <value>The name of the organization to which the contact belongs.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouseContactInformation.Line1">
            <summary>
            Gets or sets the primary line of the contacts physical address.
            </summary>
            <value>The contacts primary physical address information.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouseContactInformation.Line2">
            <summary>
            Gets or sets the secondary line of the contacts physical address.
            </summary>
            <value>Any additional information for the contacts physical address.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouseContactInformation.City">
            <summary>
            Gets or sets the city of the contacts physical address.
            </summary>
            <value>The city name of the contacts physical address.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouseContactInformation.State">
            <summary>
            Gets or sets the state of the contacts physical address.
            </summary>
            <value>The state code or name of the contacts physical address.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouseContactInformation.CountryCode">
            <summary>
            Gets or sets the country code of the contacts physical address.
            </summary>
            <value>The country code of the contacts physical address.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouseContactInformation.CountryName">
            <summary>
            Gets or sets the country of the contacts physical address.
            </summary>
            <value>The name of the country in which the contacts physical address is located.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouseContactInformation.PostalCode">
            <summary>
            Gets or sets the postal code of the contacts physical address.
            </summary>
            <value>The postal code of the contacts physical address.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouseContactInformation.RegionCode">
            <summary>
            Gets or sets the region code of the contacts physical address.
            </summary>
            <value>The code identifying the region in which the contacts physical address is located.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouseContactInformation.RegionName">
            <summary>
            Gets or sets the region name of the contacts physical address.
            </summary>
            <value>The name of the region in which the contacts physical address is located.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouseContactInformation.DaytimePhoneNumber">
            <summary>
            Gets or sets the phone number at which the contact can be reached during regular work hours.
            </summary>
            <value>The contacts phone number during regular work hours.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouseContactInformation.EveningPhoneNumber">
            <summary>
            Gets or sets the phone number at which the contact can be reached outside of regular work hours.
            </summary>
            <value>The contacts phone number outside regular work hours.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouseContactInformation.FaxNumber">
            <summary>
            Gets or sets the phone number at which the contact can be reached by fax.
            </summary>
            <value>The contacts fax line phone number.</value>
        </member>
        <member name="P:Mediachase.Commerce.Inventory.IWarehouseContactInformation.Email">
            <summary>
            Gets or sets the contacts email address.
            </summary>
            <value>The contacts email address.</value>
        </member>
        <member name="M:Mediachase.Commerce.Inventory.IWarehouseContactInformation.ToOrderAddress">
            <summary>
            Converts the warehouse contact information into an order address.
            </summary>
            <returns>An <see cref="T:Mediachase.Commerce.Orders.OrderAddress"/> equivalent with this instance.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Inventory.IWarehouseContactInformation.ToCustomerAddress">
            <summary>
            Converts the warehouse contact information into a customer address.
            </summary>
            <returns>A <see cref="T:Mediachase.Commerce.Customers.CustomerAddress"/> equivalent with this instance.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Inventory.IWarehouseContactInformation.IsSameAddress(Mediachase.Commerce.Orders.OrderAddress)">
            <summary>
            Checks if the order address is equivalent to this contact information.
            </summary>
            <param name="address">The <see cref="T:Mediachase.Commerce.Orders.OrderAddress"/> to compare to.</param>
            <returns>True if the addresses are equivalent, False otherwise.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Inventory.IWarehouseContactInformation.IsSameAddress(Mediachase.Commerce.Customers.CustomerAddress)">
            <summary>
            Checks if the customern address is equivalent to this contact information.
            </summary>
            <param name="address">The <see cref="T:Mediachase.Commerce.Customers.CustomerAddress"/> to compare to.</param>
            <returns>True if the addresses are equivalent, False otherwise.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Inventory.IWarehouseRepository">
            <summary>
            Accessors for warehouse data
            </summary>
            <remarks>
            <para>This interface does not support operations on multiple warehouses fully as these are unlikely in a real environment.</para>
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Inventory.IWarehouseRepository.List">
            <summary>
            Gets all warehouses.
            </summary>
            <returns>All warehouse records, or null if there are no warehouses defined.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Inventory.IWarehouseRepository.Get(System.Int32)">
            <summary>
            Gets a specific warehouse.
            </summary>
            <param name="warehouseId">The warehouse ID to return data for.</param>
            <returns>The requested warehouse record, or null if the Id does not match an existing warehouse.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Inventory.IWarehouseRepository.Get(System.String)">
            <summary>
            Gets a specific warehouse.
            </summary>
            <param name="warehouseCode">The warehouse code to return data for.</param>
            <returns>The requested warehouse record, or null if the Code does not match an existing warehouse.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Inventory.IWarehouseRepository.GetDefaultWarehouse">
            <summary>
            Gets the default warehouse.
            </summary>
            <returns>The default warehouse, or null if no warehouses exist.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Inventory.IWarehouseRepository.Save(Mediachase.Commerce.Inventory.IWarehouse)">
            <summary>
            Saves the provided warehouse record.
            </summary>
            <param name="warehouse">The warehouse to be saved.</param>
            <remarks>
            <para>If the WarehouseId matches the Id of an existing warehouse, the existing record will be updated.</para>
            <para>If the WarehouseId is below zero (0) the warehouse is added with a new Id.</para>
            <para>If the WarehouseId neither matches the Id of an existing warehouse nor is below zero (0), an Exception will be raised.</para>
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Inventory.IWarehouseRepository.Delete(System.Int32)">
            <summary>
            Deletes a specific warehouse record.
            </summary>
            <param name="warehouseId">The catalog entry to delete warehouse for.</param>
        </member>
        <member name="T:Mediachase.Commerce.Marketing.MarketingOptions">
            <summary>
            Contains options for the marketing system.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Marketing.MarketingOptions.StatisticsCacheExpiration">
            <summary>
            The expiration time for marketing statistics.
            </summary>
            <remarks>Default value is 24 hours.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Marketing.MarketingOptions.PromotionInformationCacheExpiration">
            <summary>
            The expiration time for promotion information.
            </summary>
            <remarks>Default value is 10 minutes</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Marketing.MarketingOptions.LinkableTypesEnabled">
            <summary>
            Indicates whether Marketing Links in link selector dialog should be shown or not.
            </summary>
            <remarks>Default value is false</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Marketing.MarketingOptions.EvaluablePromotionCacheExpiration">
            <summary>
            The expiration time for evaluable promotion.
            </summary>
            <remarks>Default value is 30 seconds</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Marketing.MarketingOptions.DiscountedEntryCacheExpiration">
            <summary>
            The expiration time for discounted entries.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Markets.CurrentMarketImpl">
            <summary>
            The default implementation of ICurrentMarket
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Markets.CurrentMarketImpl.GetCurrentMarket">
            <summary>
            Gets the current market.
            </summary>
            <returns>The current market.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Markets.CurrentMarketImpl.SetCurrentMarket(Mediachase.Commerce.MarketId)">
            <summary>
            Sets the current market.
            </summary>
            <param name="marketId">The market id to set.</param>
        </member>
        <member name="T:Mediachase.Commerce.Markets.Database.MarketDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Markets.Database.MarketDto.MarketDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Markets.Database.MarketDto.MarketCountriesDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Markets.Database.MarketDto.MarketCurrenciesDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Markets.Database.MarketDto.MarketLanguagesDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Markets.Database.MarketDto.MarketRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Markets.Database.MarketDto.MarketCountriesRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Markets.Database.MarketDto.MarketCurrenciesRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Markets.Database.MarketDto.MarketLanguagesRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Markets.Database.MarketDto.MarketRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Markets.Database.MarketDto.MarketCountriesRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Markets.Database.MarketDto.MarketCurrenciesRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Markets.Database.MarketDto.MarketLanguagesRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Markets.Database.MarketServiceDatabase">
            <summary>
            Database implementation for IMarketService.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Markets.IMarketService.GetAllMarkets">
            <summary>
            Gets all markets in the system.
            </summary>
            <returns>An enumerable of the markets.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Markets.IMarketService.GetMarket(Mediachase.Commerce.MarketId)">
            <summary>
            Get a single market by ID.
            </summary>
            <param name="marketId">The ID of the market to fetch.</param>
            <returns>The market with the specified ID, or null if the ID is not found.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Markets.IMarketService.CreateMarket(Mediachase.Commerce.IMarket)">
            <summary>
            Adds a new market to the market system.
            </summary>
            <param name="market">The market to add.</param>
        </member>
        <member name="M:Mediachase.Commerce.Markets.IMarketService.UpdateMarket(Mediachase.Commerce.IMarket)">
            <summary>
            Updates an existing market in the market system.
            </summary>
            <param name="market">The market to save over an existing market.</param>
        </member>
        <member name="M:Mediachase.Commerce.Markets.IMarketService.DeleteMarket(Mediachase.Commerce.MarketId)">
            <summary>
            Deletes a market by ID.
            </summary>
            <param name="marketId">The ID of the market to delete.</param>
        </member>
        <member name="T:Mediachase.Commerce.Markets.MarketImpl">
            <summary>
            The default implementation of IMarket.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Markets.MarketImpl.LanguagesCollection">
            <summary>
            Gets a modifiable collection of the available languages.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Markets.MarketImpl.CurrenciesCollection">
            <summary>
            Gets a modifiable collection of the available currencies.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Markets.MarketImpl.CountriesCollection">
            <summary>
            Gets a modifiable collection of the associated countries.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Markets.MarketImpl.PricesIncludeTax">
            <summary>
            Gets the value indicating if the price of the market includes tax or not.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Markets.MarketImpl.#ctor(Mediachase.Commerce.MarketId)">
            <summary>
            Creates an empty IMarket instance with the specified market identifier.
            </summary>
            <param name="marketId"></param>
        </member>
        <member name="M:Mediachase.Commerce.Markets.MarketImpl.#ctor(Mediachase.Commerce.IMarket)">
            <summary>
            Creates a copy of the passed IMarket instance.
            </summary>
            <param name="market">The IMarket instance to copy.</param>
        </member>
        <member name="T:Mediachase.Commerce.Markets.MarketOptions">
            <summary>
            Contains options for the markets system.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Markets.MarketOptions.CacheExpiration">
            <summary>
             The default expiration time.
            </summary>
            <remarks>Default value is 5 minutes.</remarks>
        </member>
        <member name="T:Mediachase.Commerce.Markets.MarketsPermissions">
            <summary>
            Permissions for markets subsytem
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Markets.MarketsPermissions.View">
            <summary>
            Gets the view permission.
            </summary>
            <value>
            The markets view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Markets.MarketsPermissions.Create">
            <summary>
            Gets the create permission.
            </summary>
            <value>
            The markets create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Markets.MarketsPermissions.Edit">
            <summary>
            Gets the edit permission.
            </summary>
            <value>
            The markets edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Markets.MarketsPermissions.Delete">
            <summary>
            Gets the delete permission.
            </summary>
            <value>
            The markets delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Markets.MarketsPermissions.TabView">
            <summary>
            Gets the TabView permission.
            </summary>
            <value>
            The markets tab view PermissionType.
            </value>
        </member>
        <member name="T:Mediachase.Commerce.Money">
            <summary>
            Money is an immutable struct type that encapsulates an amount of money and a currency.
            </summary>
            <remarks>
            To avoid dangerous implicit Currency evaluations, Currency must always be given explicitly. There is one exception
            and that is when doing an explicit cast from a decimal value to Money. In this case the DefaultCurrencyFunction will be 
            invoked to determine what the current Currency should be. This is implemented to ease the porting of old code to
            the new Money based system.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Money.#ctor(System.Decimal,Mediachase.Commerce.Currency)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Money"/> struct.
            </summary>
            <param name="amount">The amount.</param>
            <param name="currency">The currency.</param>
        </member>
        <member name="M:Mediachase.Commerce.Money.CreateMoneyWithDefaultCurrencyFallback(System.Decimal,Mediachase.Commerce.Currency)">
            <summary>
            Creates the money with fallback to default currency if the currency is empty.
            </summary>
            <param name="amount">The amount.</param>
            <param name="currency">The currency.</param>
            <returns>A Money struct.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Money.Amount">
            <summary>
            Gets the amount of money.
            </summary>
            <value>The amount of money.</value>
        </member>
        <member name="P:Mediachase.Commerce.Money.Currency">
            <summary>
            Gets the currency.
            </summary>
            <value>The currency.</value>
        </member>
        <member name="P:Mediachase.Commerce.Money.DefaultCurrencyFunction">
            <summary>
            Gets or sets the function for getting default currency.
            </summary>
            <value>
            The default currency function.
            </value>
        </member>
        <member name="M:Mediachase.Commerce.Money.Round">
            <summary>
            Rounds the amount.
            </summary>
            <returns>Rounded amount following the standard currency decimal digits format.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Cart">
            <summary>
            Represents the Shopping Cart in the system. User can have unlimited number of carts which can be used for such features
            as Wish List, Wedding Registry and so on. Each of them will need to have a unique card name. The Cart with a DefaultName specified
            by the DefaultName property will be considered primary cart.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Cart.IsEmpty">
            <summary>
            Indicated that the cart is empty.
            </summary>
            <returns>True if the cart is empty, otherwise false</returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Cart.CreateOrderNumber">
            <summary>
            Delegate for generating custom order tracking number. Please look at OrderNumberMethod property for details on how it works.
            </summary>
            <param name="cart"></param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Cart.DefaultName">
            <summary>
            Gets the default name for the cart.
            </summary>
            <value>default name for the cart.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Cart.WishListName">
            <summary>
            Gets the name for the Wishlist.
            </summary>
            <value>name for the Wishlist.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Cart.ExchangeName">
            <summary>
            Gets the exchange name for the cart.
            </summary>
            <value>exchange name for the cart.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Cart.OrderNumberMethod">
            <summary>
            Gets or sets the order number method that is used to generate the tracking PO sequence. If none set, the framework will use
            built in function GenerateOrderNumber:
            
            this.OrderNumberMethod = new CreateOrderNumber(GenerateOrderNumber);
            
            private string GenerateOrderNumber(Cart cart)
            {
                string num = new Random().Next(100, 999).ToString();
                return String.Format("PO{0}{1}", cart.OrderGroupId, num);
            }
            </summary>
            <value>The order number method.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Cart.#ctor(System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.Cart"/> class.
            </summary>
            <param name="Name">The name.</param>
            <param name="CustomerId">The customer id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Cart.#ctor(System.Data.IDataReader)">
            <summary>
            Internal constructor required by collection implementation.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Cart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.Cart"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Cart.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.Cart"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Cart.SaveAsPurchaseOrder">
            <summary>
            Saves the cart as purchase order, typically the last step in the checkout.
            The original cart will need to be deleted and is not handled by this script.
            </summary>
            <returns>The purchase order</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Cart.SaveAsPaymentPlan">
            <summary>
            Saves the cart as payment plan, typically the last step in the checkout.
            </summary>
            <returns>The payment plan</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Cart.GenerateOrderNumber(Mediachase.Commerce.Orders.Cart)">
            <summary>
            Generates the order number.
            </summary>
            <param name="cart">The cart.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Cart.LoadByCustomer(System.Guid)">
            <summary>
            Loads carts by customer.
            </summary>
            <param name="customerId">The customer id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Cart.LoadSingleCartByCustomerAndName(System.Guid,System.String)">
            <summary>
            Loads a single cart by customer and cart name.
            </summary>
            <param name="customerId">The customer id.</param>
            <param name="name">The cart name.</param>
            <returns>The matching cart, or null if no matching cart was found.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if multiple matching carts are found.</exception>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Cart.GetCart(System.String,System.Guid,Mediachase.Commerce.MarketId)">
            <summary>
            Gets Cart object for current customer, followed by cart name and market Id. This will check and return item from cache if any.
            </summary>
            <param name="name">Cart name.</param>
            <param name="customerId">Customer Id.</param>
            <param name="marketId">Market Id.</param>
            <returns>Cart object for current customer, followed by cart name and market Id.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Cart.CreateCart(System.String,System.Guid,Mediachase.Commerce.MarketId)">
            <summary>
            Creates the cart.
            </summary>
            <param name="name">Cart name.</param>
            <param name="customerId">The customer id.</param>
            <param name="marketId">The market id.</param>
            <returns>New cart object.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Cart.LoadByOrderGroupId(System.Int32)">
            <summary>
            Loads the by order group id.
            </summary>
            <param name="orderGroupId">The order group identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Cart.Add(Mediachase.Commerce.Orders.OrderGroup)">
            <summary>
            Adds the specified order group to the existing cart.
            </summary>
            <param name="orderGroup">The order group.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Cart.Add(Mediachase.Commerce.Orders.OrderGroup,System.Boolean)">
            <summary>
            Adds the specified order group to the existing cart.
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="lineItemRollup">if set to <c>true</c>, adds to existing quantity, otherwise adds as a new lineitem.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Cart.Search(Mediachase.Commerce.Orders.Search.OrderSearch,System.Int32@)">
            <summary>
            Searches for the cart.
            </summary>
            <param name="search">The search.</param>
            <param name="totalRecords">The total records.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Cart.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Cart.Mediachase#Commerce#Orders#Internal#IDeepCloneable#DeepClone">
            <summary>
            Creates a limited deep clone of this object.
            </summary>
            <returns>A deep clone of this object.</returns>
            <remarks>
            Some reference type properties will NOT be cloned by this method - the original and the clone will share the same instance of:
            <list type="bullet">
            <item><see cref="P:Mediachase.Commerce.Orders.OrderForm.Discounts"/></item>
            <item><see cref="P:Mediachase.Commerce.Orders.Shipment.Discounts"/></item>
            <item><see cref="P:Mediachase.Commerce.Orders.LineItem.Discounts"/></item>
            <item><see cref="P:Mediachase.MetaDataPlus.MetaObject.MetaClass"/></item>
            </list>
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Cart.WriteXml(System.Xml.XmlWriter)">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.Orders.CashCardPayment">
            <summary>
            Represents Cash Card type of payment.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.CashCardPayment.CashCardPaymentMetaClass">
            <summary>
            Gets the cash card payment meta class.
            </summary>
            <value>The cash card payment meta class.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.CashCardPayment.CashCardNumber">
            <summary>
            Gets or sets the cash card number. The field is not encrypted by default. Encryption should be handled by 
            the layer calling the property.
            </summary>
            <value>The credit card number.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.CashCardPayment.CashCardSecurityCode">
            <summary>
            Gets or sets the cash card security code.
            </summary>
            <value>The cash card security code.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.CashCardPayment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.CashCardPayment"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.CashCardPayment.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.CashCardPayment"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.CreditCardPayment">
            <summary>
            Represents Credit Card type of payment.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.CreditCardPayment.CreditCardPaymentMetaClass">
            <summary>
            Gets the credit card payment meta class.
            </summary>
            <value>The credit card payment meta class.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.CreditCardPayment.CardType">
            <summary>
            Gets or sets the type of the card. Types typically are VISA, MasterCard, AMEX.
            </summary>
            <value>The type of the card.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.CreditCardPayment.CreditCardNumber">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Orders.CreditCardPayment.CreditCardSecurityCode">
            <summary>
            Gets or sets the credit card security code.
            </summary>
            <value>The credit card security code.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.CreditCardPayment.ExpirationMonth">
            <summary>
            Gets or sets the expiration month. Goes from 1 to 12.
            </summary>
            <value>The expiration month.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.CreditCardPayment.ProviderProfileId">
            <summary>
            Gets or sets the Provider profile Id.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.CreditCardPayment.ProviderPaymentId">
            <summary>
            Gets or sets the Provider payment Id.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.CreditCardPayment.ExpirationYear">
            <summary>
            Gets or sets the expiration year.
            </summary>
            <value>The expiration year.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.CreditCardPayment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.CreditCardPayment"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.CreditCardPayment.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.CreditCardPayment"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.DataSources.OrderDataSource">
            <summary>
            Implements the operations for the order data source.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.DataSources.OrderDataSource.RMANumber">
            <summary>
            Gets or sets the RMA number.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.DataSources.OrderDataSource.MarketId">
            <summary>
            Gets or sets the Market Id.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.DataSources.OrderDataSource.CreatedFrom">
            <summary>
            Gets or sets the CreatedFrom date.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.DataSources.OrderDataSource.CreatedTo">
            <summary>
            Gets or sets the CreatedTo date.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.DataSources.OrderDataSource.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.DataSources.OrderDataSource.Options">
            <summary>
            Gets or sets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.DataSources.OrderDataSource.GetView(System.String)">
            <summary>
            Gets the named data source view associated with the data source control.
            </summary>
            <param name="viewName">The name of the view to retrieve.</param>
            <returns>
            Returns the named <see cref="T:System.Web.UI.DataSourceView"/> associated with the <see cref="T:System.Web.UI.IDataSource"/>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.DataSources.OrderDataSource.GetViewNames">
            <summary>
            Gets a collection of names representing the list of view objects associated with the <see cref="T:System.Web.UI.IDataSource"/> interface.
            </summary>
            <returns>
            An <see cref="T:System.Collections.ICollection"/> that contains the names of the views associated with the <see cref="T:System.Web.UI.IDataSource"/>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.DataSources.OrderDataSource.OrderDataSourceView">
            <summary>
            Implements operations for the order data source view and inherits the <see cref="T:System.Web.UI.DataSourceView"/> class.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.DataSources.OrderDataSource.OrderDataSourceView.PurchaseOrdersViewName">
            <summary>
            Represents the purchase orders view name.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.DataSources.OrderDataSource.OrderDataSourceView.CartsViewName">
            <summary>
            Represents the carts view name.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.DataSources.OrderDataSource.OrderDataSourceView.PaymentPlansViewName">
            <summary>
            Represents the payment plans view name.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.DataSources.OrderDataSource.OrderDataSourceView.#ctor(System.Web.UI.IDataSource,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.DataSources.OrderDataSource.OrderDataSourceView"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="name">The name.</param>
        </member>
        <member name="P:Mediachase.Commerce.Orders.DataSources.OrderDataSource.OrderDataSourceView.RMANumber">
            <summary>
            Gets or sets the RMA number.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.DataSources.OrderDataSource.OrderDataSourceView.MarketId">
            <summary>
            Gets or sets the Market Id.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.DataSources.OrderDataSource.OrderDataSourceView.CreatedFrom">
            <summary>
            Gets or sets the CreatedFrom date.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.DataSources.OrderDataSource.OrderDataSourceView.CreatedTo">
            <summary>
            Gets or sets the CreateTo date.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.DataSources.OrderDataSource.OrderDataSourceView.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.DataSources.OrderDataSource.OrderDataSourceView.Options">
            <summary>
            Gets or sets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.DataSources.OrderDataSource.OrderDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
            <summary>
            Gets a list of data from the underlying data storage.
            </summary>
            <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments"/> that is used to request operations on the data beyond basic data retrieval.</param>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> list of data from the underlying data storage.
            </returns>
        </member>
        <member name="P:Mediachase.Commerce.Orders.DataSources.OrderDataSource.OrderDataSourceView.CanRetrieveTotalRowCount">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports retrieving the total number of data rows, instead of the data.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Orders.DataSources.OrderDataSource.OrderDataSourceView.CanPage">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports paging through the data retrieved by the <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)"/> method.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Orders.DataSources.OrderDataSource.OrderDataSourceView.CanDelete">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)"/> operation.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Orders.DataSources.OrderDataSource.OrderDataSourceView.CanInsert">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)"/> operation.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The base class implementation returns false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Orders.DataSources.OrderDataSource.OrderDataSourceView.CanUpdate">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView"/> object associated with the current <see cref="T:System.Web.UI.DataSourceControl"/> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)"/> operation.
            </summary>
            <value></value>
            <returns>true if the operation is supported; otherwise, false. The default implementation returns false.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Discount">
            <summary>
            Base class for discounts in the system. All discounts should inherit this class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Discount.DiscountId">
            <summary>
            Gets or sets the discount id.
            </summary>
            <value>The discount id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Discount.OrderGroupId">
            <summary>
            Gets or sets the order group id.
            </summary>
            <value>The order group id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Discount.DiscountAmount">
            <summary>
            Gets or sets the discount amount. Either fixed money value or percentage.
            </summary>
            <value>The discount amount.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Discount.DiscountCode">
            <summary>
            Gets or sets the discount code. Also known as a coupon code.
            </summary>
            <value>The discount code.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Discount.DiscountName">
            <summary>
            Gets or sets the name of the discount.
            </summary>
            <value>The name of the discount.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Discount.DisplayMessage">
            <summary>
            Gets or sets the display message.
            </summary>
            <value>The display message.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Discount.DiscountValue">
            <summary>
            Gets or sets the discount amount. The amount of discount that was applied. It will equal to DiscountAmount
            if it is a fixed monetary value. For the percentage based discount this value will be different.
            </summary>
            <value>The discount value.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Discount.CreateParameters(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Creates the parameters.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Discount.CreateInsertCommand">
            <summary>
            Creates the insert command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Discount.CreateUpdateCommand">
            <summary>
            Creates the update command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Discount.CreateDeleteCommand">
            <summary>
            Creates the delete command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Discount.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.Discount"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Discount.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.Discount"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Discount.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.CountryDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.CountryDto.StateProvinceDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.CountryDto.CountryDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.CountryDto.StateProvinceRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.CountryDto.CountryRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.CountryDto.StateProvinceRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.CountryDto.CountryRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.JurisdictionDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.JurisdictionDto.JurisdictionRelationDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.JurisdictionDto.JurisdictionDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.JurisdictionDto.JurisdictionGroupDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.JurisdictionDto.JurisdictionRelationRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.JurisdictionDto.JurisdictionRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.JurisdictionDto.JurisdictionGroupRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.JurisdictionDto.JurisdictionRelationRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.JurisdictionDto.JurisdictionRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.JurisdictionDto.JurisdictionGroupRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.OrderNoteTypeDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.OrderNoteTypeDto.OrderNoteTypeDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.OrderNoteTypeDto.OrderNoteTypeRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.OrderNoteTypeDto.OrderNoteTypeRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.OrderShipmentStatusDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.OrderShipmentStatusDto.OrderShipmentStatusDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.OrderShipmentStatusDto.OrderShipmentStatusRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.OrderShipmentStatusDto.OrderShipmentStatusRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.OrderStatusDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.OrderStatusDto.OrderStatusDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.OrderStatusDto.OrderStatusRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.OrderStatusDto.OrderStatusRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.PaymentMethodDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.PaymentMethodDto.PaymentMethodDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.PaymentMethodDto.PaymentMethodParameterDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.PaymentMethodDto.ShippingPaymentRestrictionDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.PaymentMethodDto.MarketPaymentMethodsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.PaymentMethodDto.PaymentMethodRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.PaymentMethodDto.PaymentMethodParameterRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.PaymentMethodDto.ShippingPaymentRestrictionRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.PaymentMethodDto.MarketPaymentMethodsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.PaymentMethodDto.PaymentMethodRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.PaymentMethodDto.PaymentMethodParameterRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.PaymentMethodDto.ShippingPaymentRestrictionRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.PaymentMethodDto.MarketPaymentMethodsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.PickListDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.PickListDto.PickListDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.PickListDto.PickListRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.PickListDto.PickListRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ReturnFormStatusDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ReturnFormStatusDto.ReturnFormStatusDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ReturnFormStatusDto.ReturnFormStatusRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ReturnFormStatusDto.ReturnFormStatusRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ReturnReasonsDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ReturnReasonsDto.ReturnReasonDictionaryDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ReturnReasonsDto.ReturnReasonDictionaryRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ReturnReasonsDto.ReturnReasonDictionaryRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingMethodParameterDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingRegionDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingOptionDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingOptionParameterDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingCountryDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingPaymentRestrictionDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingPackageDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.PackageDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingMethodCaseDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.MarketShippingMethodsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingMethodDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingMethodParameterRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingRegionRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingOptionRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingOptionParameterRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingCountryRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingPaymentRestrictionRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingPackageRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.PackageRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingMethodCaseRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.MarketShippingMethodsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingMethodRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingMethodParameterRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingRegionRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingOptionRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingOptionParameterRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingCountryRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingPaymentRestrictionRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingPackageRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.PackageRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingMethodCaseRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.MarketShippingMethodsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.ShippingMethodDto.ShippingMethodRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.TaxDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.TaxDto.TaxDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.TaxDto.TaxLanguageDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.TaxDto.TaxValueDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.TaxDto.TaxRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.TaxDto.TaxLanguageRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.TaxDto.TaxValueRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.TaxDto.TaxRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.TaxDto.TaxLanguageRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Dto.TaxDto.TaxValueRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Exceptions.GatewayNotRespondingException">
            <summary>
            Exception occurs when application fails to contact the gateway.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Exceptions.GatewayNotRespondingException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.Exceptions.GatewayNotRespondingException"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Exceptions.GatewayNotRespondingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.Exceptions.GatewayNotRespondingException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Exceptions.OrderException">
            <summary>
            Implements operations for the order exception class. (Inherits <see cref="T:System.Exception"/>.)
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Exceptions.OrderException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.Exceptions.OrderException"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Exceptions.OrderException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.Exceptions.OrderException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Exceptions.OrderException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.Exceptions.OrderException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Exceptions.OrderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.Exceptions.OrderException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Exceptions.PaymentException">
            <summary>
            Represents payment exception.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Exceptions.PaymentException.ErrorType">
            <summary>
            Represents error type.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Exceptions.PaymentException.ErrorCode">
            <summary>
            Gets or sets the error code.
            </summary>
            <value>The error code.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Exceptions.PaymentException.Type">
            <summary>
            Gets or sets the type of the error.
            </summary>
            <value>The type of the error.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Exceptions.PaymentException.ResponseMessages">
            <summary>
            Gets or sets the response messages.
            </summary>
            <value>The response messages.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Exceptions.PaymentException.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.Exceptions.PaymentException"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="code">The code.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Exceptions.PaymentException.#ctor(System.String,System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.Exceptions.PaymentException"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="code">The code.</param>
            <param name="message">The message.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Exceptions.PaymentException.ToString">
            <summary>
            Creates and returns a string representation of the current exception.
            </summary>
            <returns>
            A string representation of the current exception.
            </returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
            </PermissionSet>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ExchangePayment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.ExchangePayment"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ExchangePayment.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.ExchangePayment"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.GiftCardPayment">
            <summary>
            Represents Gift Card type of payment.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.GiftCardPayment.GiftCardPaymentMetaClass">
            <summary>
            Gets the gift card payment meta class.
            </summary>
            <value>The gift card payment meta class.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.GiftCardPayment.CardType">
            <summary>
            Gets or sets the type of the card. Types typically are VISA, MasterCard, AMEX.
            </summary>
            <value>The type of the card.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.GiftCardPayment.GiftCardNumber">
            <summary>
            Gets or sets the gift card number.
            </summary>
            <value>The gift card number.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.GiftCardPayment.GiftCardSecurityCode">
            <summary>
            Gets or sets the gift card security code.
            </summary>
            <value>The gift card security code.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.GiftCardPayment.ExpirationMonth">
            <summary>
            Gets or sets the expiration month. Goes from 1 to 12.
            </summary>
            <value>The expiration month.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.GiftCardPayment.ExpirationYear">
            <summary>
            Gets or sets the expiration year.
            </summary>
            <value>The expiration year.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.GiftCardPayment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.GiftCardPayment"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.GiftCardPayment.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.GiftCardPayment"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.ILineItemInventory">
            <summary>
            Represents the inventory information to a line item.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.ILineItemInventory.Code">
            <summary>
            Gets the catalog entry code.
            </summary>
            <value>The catalog entry code.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.ILineItemInventory.AllowBackordersAndPreorders">
            <summary>
            Gets or sets a value indicating whether [allow backorders and preorders].
            </summary>
            <value>
            	<c>true</c> if [allow backorders and preorders]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.ILineItemInventory.InStockQuantity">
            <summary>
            Gets or sets the in stock quantity.
            </summary>
            <value>The in stock quantity.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.ILineItemInventory.BackorderQuantity">
            <summary>
            Gets or sets the backorder quantity.
            </summary>
            <value>The backorder quantity.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.ILineItemInventory.PreorderQuantity">
            <summary>
            Gets or sets the preorder quantity.
            </summary>
            <value>The preorder quantity.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.ILineItemInventory.InventoryStatus">
            <summary>
            Gets or sets the inventory status.
            </summary>
            <value>The inventory status.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.ILineItemInventory.MaxQuantity">
            <summary>
            Gets or sets the max quantity.
            </summary>
            <value>The max quantity.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.ILineItemInventory.MinQuantity">
            <summary>
            Gets or sets the min quantity.
            </summary>
            <value>The min quantity.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.ImportExport.OrdersImportExportException">
            <summary>
            Handles exceptions for the import and export operations in the order system and inherits the <see cref="T:System.Exception"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ImportExport.OrdersImportExportException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.ImportExport.OrdersImportExportException"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ImportExport.OrdersImportExportException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.ImportExport.OrdersImportExportException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ImportExport.OrdersImportExportException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.ImportExport.OrdersImportExportException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ImportExport.OrdersImportExportException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.ImportExport.OrdersImportExportException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:Mediachase.Commerce.Orders.ImportExport.TaxImportExportMessageType">
            <summary>
            The ImportExportMessageType enumeration defines the import/export message type.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.ImportExport.TaxImportExportEventArgs">
            <summary>
            Represents the arguments for the import and export events. (Inherits <see cref="T:System.EventArgs"/>.)
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.ImportExport.TaxImportExportEventArgs.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.ImportExport.TaxImportExportEventArgs.CompletedPercentage">
            <summary>
            Gets or sets the completed percentage.
            </summary>
            <value>The completed percentage.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ImportExport.TaxImportExportEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.ImportExport.TaxImportExportEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ImportExport.TaxImportExportEventArgs.#ctor(System.String,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.ImportExport.TaxImportExportEventArgs"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="percentage">The percentage.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.ImportExport.TaxImportExportProgressMessageHandler">
            <summary>
            Handles the import/export progress message.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.ImportExport.TaxImportExport">
            <summary>
            Implements operations for tax import.
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Orders.ImportExport.TaxImportExport.ImportExportProgressMessage">
            <summary>
            Occurs when [import export progress message].
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ImportExport.TaxImportExport.OnImportExportProgressMessage(System.Object,Mediachase.Commerce.Orders.ImportExport.TaxImportExportEventArgs)">
            <summary>
            Raises the <see cref="E:ImportExportProgressMessage"/> event.
            </summary>
            <param name="source">The source.</param>
            <param name="args">The <see cref="T:Mediachase.Commerce.Orders.ImportExport.TaxImportExportEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ImportExport.TaxImportExport.Import(System.String,System.Nullable{System.Guid},System.Char)">
            <summary>
            Imports the specified input.
            </summary>
            <param name="pathToCsvFile">The path to CSV file.</param>
            <param name="siteId">The site id.</param>
            <param name="delimiter">The delimiter.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ImportExport.TaxImportExport.Import(System.String,System.Char)">
            <summary>
            Imports the specified input.
            </summary>
            <param name="pathToCsvFile">The path to CSV file.</param>
            <param name="delimiter">The delimiter.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ImportExport.TaxImportExport.Export(System.String)">
            <summary>
            Exports the all data taxes.
            </summary>
            <param name="pathToCsvFile">The path to CSV file.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Internal.DiscountExpressionHandler.TryGetDiscountValue``2(``0,System.Linq.Expressions.Expression{System.Func{``1,System.Decimal}},System.Collections.Generic.Dictionary{System.String,System.Func{``1,System.Decimal}}@)">
            <summary>
            Access to the line item discount amount writable properties.
            </summary>
            <param name="item">The item to be casted</param>
            <param name="property">The property to get the value from.</param>
            <param name="propertyGetters">
            Property names with function getters. If <paramref name="property"/> does not exist
            in this collection, the reference will be replaced with a clone where the missing
            expression has been added.
            </param>
            <returns>The value from <paramref name="property"/>.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Internal.DiscountExpressionHandler.TrySetDiscountValue``2(``0,System.Linq.Expressions.Expression{System.Func{``1,System.Decimal}},System.Decimal,System.Collections.Generic.Dictionary{System.String,System.Action{``1,System.Decimal}}@)">
            <summary>
            Updates the line item discount with the following action.
            </summary>
            <param name="item">The item.</param>
            <param name="property">The property to set.</param>
            <param name="value">The value to set.</param>
            <param name="propertySetters">
            Property names with action setters. If <paramref name="property"/> does not exist
            in this collection, the reference will be replaced with a clone where the missing
            expression has been added.
            </param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Internal.IDeepCloneable">
            <summary>
            This type/member supports the EPiServer infrastructure and is not intended to be
            used directly from your code.
            
            Supports deep cloning, which creates a new instance of a class and all its properties with the same value as the current instance.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Internal.IDeepCloneable.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of the current instance.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Internal.OrderOptionsExtensions">
            <summary>
            <see cref="T:Mediachase.Commerce.Orders.OrderOptions"/> extensions methods. These methods can be removed when the legacy configuration system is removed.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Internal.OrderShipmentStatusConverter">
            <summary>
            Converter for <see cref="T:Mediachase.Commerce.Orders.OrderShipmentStatus"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Internal.OrderShipmentStatusConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.Internal.OrderShipmentStatusConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.Internal.OrderShipmentStatusConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.Orders.Internal.OrderStatusConverter">
            <summary>
            Converter for <see cref="T:Mediachase.Commerce.Orders.OrderStatus"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Internal.OrderStatusConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.Internal.OrderStatusConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.Internal.OrderStatusConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.Orders.Internal.PaymentFactory">
            <summary>
            This type/member supports the EPiServer infrastructure and is not intended to be
            used directly from your code.
            
            A delegate for creating instance of <see cref="T:EPiServer.Commerce.Order.IPayment"/> implementation.
            </summary>
            <param name="implementationType">The implementation type of <see cref="T:EPiServer.Commerce.Order.IPayment"/>.</param>
            <returns>An instance of <see cref="T:EPiServer.Commerce.Order.IPayment"/>.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.InvoicePayment">
            <summary>
            Represents Invoice type of payment.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.InvoicePayment.InvoicePaymentMetaClass">
            <summary>
            Gets the invoice payment meta class.
            </summary>
            <value>The invoice payment meta class.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.InvoicePayment.InvoiceNumber">
            <summary>
            Gets or sets the invoice number.
            </summary>
            <value>The invoice number.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.InvoicePayment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.InvoicePayment"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.InvoicePayment.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.InvoicePayment"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.IPaymentGateway">
            <summary>
            Authorizes and processes <see cref="T:Mediachase.Commerce.Orders.Payment"/>s.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.IPaymentGateway.Settings">
            <summary>
            Gets or sets the configuration gateway data. This data typically includes
            information like gateway URL, account info and so on.
            </summary>
            <value>The settings.</value>
            <returns>Returns the configuration data associated with a gateway.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.IPaymentGateway.ProcessPayment(Mediachase.Commerce.Orders.Payment,System.String@)">
            <summary>
            Processes a payment. Can be used for both positive and negative transactions.
            </summary>
            <param name="payment">The payment to be processed.</param>
            <param name="message">The message passed back, most often an error if transaction failed.</param>
            <returns><c>True</c> if process successfully; otherwise <c>False</c>.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.IsGiftField">
            <summary>
            Represents the Meta field to define if the lineitem is a gift item.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.IsGiftField.FieldName">
            <summary>
            The field name of meta field IsGift.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.IsGiftField.UseStandardEditControl">
            <inheridoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.IsGiftField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.IsGiftField"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.IsGiftField.GetMetaField(Mediachase.MetaDataPlus.MetaDataContext)">
            <inheridoc />
        </member>
        <member name="T:Mediachase.Commerce.Orders.IShippingGateway">
            <summary>
            Provides the methods necessary for the shipping gateway.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.IShippingGateway.GetRate(Mediachase.Commerce.IMarket,System.Guid,Mediachase.Commerce.Orders.Shipment,System.String@)">
            <summary>
            Returns the package option array when method id and package that needs to be send is passed.
            Use passed message string to pass errors back to the application if any occurred.
            </summary>
            <param name="market">The market.</param>
            <param name="methodId">The method id.</param>
            <param name="shipment">The shipment.</param>
            <param name="message">The message.</param>
            <returns>
            Empty array if no results found.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.IShippingPlugin">
            <summary>
            Provides the methods necessary for the shipping plugin.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.IShippingPlugin.GetRate(Mediachase.Commerce.IMarket,System.Guid,EPiServer.Commerce.Order.IShipment,System.String@)">
            <summary>
            Returns the package option array when method id and package that needs to be send is passed.
            Use passed message string to pass errors back to the application if any occurred.
            </summary>
            <param name="market">The market.</param>
            <param name="methodId">The shipping method id.</param>
            <param name="shipment">The shipment.</param>
            <param name="message">The message.</param>
            <returns>
            Empty array if no results found.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.ISplitPaymentGateway">
            <summary>
            Interface to process payment associated with shipment.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ISplitPaymentGateway.ProcessPayment(Mediachase.Commerce.Orders.Payment,Mediachase.Commerce.Orders.Shipment,System.String@)">
            <summary>
            Process payment associated with shipment.
            </summary>
            <param name="payment">The payment</param>
            <param name="shipment">The shipment</param>
            <param name="message">The message</param>
            <returns>True if process successful, otherwise false</returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.LineItemTaxAffectedPropertyChangedHandler">
            <summary>
            A delegate for handling tax afftected property changed of a <see cref="T:Mediachase.Commerce.Orders.LineItem"/>.
            </summary>
            <param name="needUpdateShippingTax">The flag indicating whether the property changed affects to the shipping tax of the <see cref="T:Mediachase.Commerce.Orders.Shipment"/>.</param>
            <param name="needUpdateShippingCost">The flag indicating whether the property changed affects to the shipping cost of the <see cref="T:Mediachase.Commerce.Orders.Shipment"/>.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.LineItem">
            <summary>
            Represents Line Item in the system. The actual item that is bought.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.LineItemCalculator">
            <summary>
            The order calculator
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.Discounts">
            <summary>
            Gets the list of discounts that were applied to that particular line item.
            </summary>
            <value>The discounts.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.Parent">
            <summary>
            Gets the parent Order Form.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.LineItem"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.LineItemId">
            <summary>
            Gets the line item id.
            </summary>
            <value>The line item id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.OrderFormId">
            <summary>
            Gets or sets the order form id.
            </summary>
            <value>The order form id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.OrderGroupId">
            <summary>
            Gets or sets the order group id.
            </summary>
            <value>The order group id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.Catalog">
            <summary>
            Gets or sets the catalog.
            </summary>
            <value>The catalog.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.CatalogNode">
            <summary>
            Gets or sets the catalog node.
            </summary>
            <value>The catalog node.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.ParentCatalogEntryId">
            <summary>
            Gets or sets the parent catalog entry id. Typically for Product/Sku(Variation) types of products, this will be a product code.
            </summary>
            <value>The parent catalog entry id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.Code">
            <summary>
            Gets or sets the catalog entry code.
            </summary>
            <value>The catalog entry id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.Quantity">
            <summary>
            Gets or sets the quantity.
            </summary>
            <value>The quantity.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.MinQuantity">
            <summary>
            Gets or sets the min quantity.
            </summary>
            <value>The min quantity.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.MaxQuantity">
            <summary>
            Gets or sets the max quantity.
            </summary>
            <value>The max quantity.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.PlacedPrice">
            <summary>
            Gets or sets the placed price.
            </summary>
            <value>The placed price.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.ListPrice">
            <summary>
            Gets or sets the list price. The price that the item is listed in the catalog.
            </summary>
            <value>The list price.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.LineItemDiscountAmount">
            <summary>
            Gets or sets the line item discount amount.
            </summary>
            <value>The line item discount amount.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.OrderLevelDiscountAmount">
            <summary>
            Gets or sets the order level discount amount.
            </summary>
            <value>The order level discount amount.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.ShippingAddressId">
            <summary>
            Gets or sets the shipping address name.
            </summary>
            <value>The shipping address id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.ShippingMethodName">
            <summary>
            Gets or sets the name of the shipping method.
            </summary>
            <value>The name of the shipping method.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.ShippingMethodId">
            <summary>
            Gets or sets the shipping method id.
            </summary>
            <value>The shipping method id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.ExtendedPrice">
            <summary>
            Gets or sets the extended price.
            </summary>
            <value>The extended price.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.DisplayName">
            <summary>
            Gets or sets the name of the display.
            </summary>
            <value>The name of the display.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.AllowBackordersAndPreorders">
            <summary>
            Gets or sets a value indicating whether [allow backorders and preorders].
            </summary>
            <value>
            	<c>true</c> if [allow backorders and preorders]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.InStockQuantity">
            <summary>
            Gets or sets the in stock quantity.
            </summary>
            <value>The in stock quantity.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.PreorderQuantity">
            <summary>
            Gets or sets the preorder quantity.
            </summary>
            <value>The preorder quantity.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.BackorderQuantity">
            <summary>
            Gets or sets the backorder quantity.
            </summary>
            <value>The backorder quantity.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.InventoryStatus">
            <summary>
            Gets or sets the inventory status.
            </summary>
            <value>The inventory status.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.LineItemOrdering">
            <summary>
            Gets or sets the line item ordering.
            </summary>
            <value>The line item ordering.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.ConfigurationId">
            <summary>
            Gets or sets the configuration id. The external component configuration id, used by bundle, kits and other
            combination products.
            </summary>
            <value>The configuration id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.ProviderId">
            <summary>
            Gets or sets the provider id. Used to identify the line item in the extrnal system.
            </summary>
            <value>The provider id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.ReturnReason">
            <summary>
            Gets or sets the reason for RMA line item. ("Corrupted", "Mismatch" etc..).
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.ReturnQuantity">
            <summary>
            Gets or sets the returned in stock quantity.
            </summary>
            <value>The return quantity.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.OrigLineItemId">
            <summary>
            Gets or sets the identity orig line item for RMA line item.
            </summary>
            <value>The rma orig line item id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.IsInventoryAllocated">
            <summary>
            Gets a value indicating if the inventory for this item has already been allocated from
            the inventory system.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.OldQuantity">
            <summary>
            Gets the old quantity.
            </summary>
            <value>The old quantity.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.IsGift">
            <summary>
            Gets or sets a value indicating whether the line item is a gift item.
            </summary>
            <value>
              <c>true</c> if the line item is a gift item; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.PricesIncludeTax">
            <summary>
            Gets the setting of including tax in price from the order group.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItem.SetParent(System.Object)">
            <summary>
            Sets the parent.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItem.MarkNew">
            <summary>
            Marks current instance as new which will cause new record to be created in the database for the specified object.
            This is useful for creating duplicates of existing objects.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItem.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItem.PopulateCollectionsInternal(System.Data.DataTableCollection,System.String)">
            <summary>
            Populates the collections internal.
            </summary>
            <param name="tables">The tables.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItem.PopulateCollections(System.Data.DataTableCollection,System.String)">
            <summary>
            Populates collections within table. The tables used will be removed from
            the table collection.
            Override this method to populate your custom collection objects.
            </summary>
            <param name="tables">The tables.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.LineItem"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItem.ReadXml(System.Xml.XmlReader)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItem.WriteXml(System.Xml.XmlWriter)">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.ParentOrderGroup">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.EPiServer#Commerce#Order#ILineItem#TaxCategoryId">
            <summary>
            Gets or sets the tax category id for the line item.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.EPiServer#Commerce#Order#ILineItem#InventoryTrackingStatus">
            <summary>
            Gets or sets the inventory tracking status on whether to check inventory.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.EPiServer#Commerce#Order#ILineItemDiscountAmount#EntryAmount">
            <summary>
            Gets or sets the line item discount amount.
            </summary>
            <value>The line item discount amount.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.EPiServer#Commerce#Order#ILineItemDiscountAmount#OrderAmount">
            <summary>
            Gets or sets the order level discount amount.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.EPiServer#Commerce#Order#Internal#ILineItemCalculatedAmount#SalesTax">
            <summary>
            Gets or sets the sales tax amount.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.EPiServer#Commerce#Order#Internal#ILineItemCalculatedAmount#IsSalesTaxUpToDate">
            <summary>
            Gets or sets the flag indicating whether the <see cref="P:EPiServer.Commerce.Order.Internal.ILineItemCalculatedAmount.SalesTax"/> is up-to-date.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.EPiServer#Commerce#Storage#IExtendedProperties#Properties">
            <summary>
            Gets the property bag for dealing with custom meta fields.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItem.EPiServer#Commerce#Order#IReturnLineItem#OriginalLineItemId">
            <summary>
            Gets or sets the identity original line item id for RMA line item.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.LineItemCollection">
            <summary>
            A collection of line items in the system.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItemCollection.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemCollection.SetParent(Mediachase.Commerce.Orders.OrderForm)">
            <summary>
            Sets the parent Order Form.
            </summary>
            <param name="form">The form.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemCollection.#ctor(Mediachase.Commerce.Orders.OrderForm)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.LineItemCollection"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.LineItemCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemCollection.Add(Mediachase.Commerce.Orders.LineItem)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemCollection.Add(Mediachase.Commerce.Orders.LineItem,System.Boolean)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="lineItemRollup">if set to <c>true</c>, adds to existing quantity, otherwise adds as a new lineitem.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemCollection.AddNew">
            <summary>
            Adds a new LineItem to the collection and assigns it unique LineItemId
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemCollection.FindItem(System.Int32)">
            <summary>
            Finds LineItem with specified LineItemId in the collection.
            </summary>
            <param name="lineItemId"></param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemCollection.FindItemByCatalogEntryId(System.String)">
            <summary>
            Finds LineItem with specified entry id in the collection.
            </summary>
            <param name="catalogEntryId">The id of the entry to search for.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItemCollection.DeletedLineItems">
            <summary>
            Gets the deleted line items.
            </summary>
            <value>The deleted line items.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemCollection.GetFormattedString(System.Int32,System.String)">
            <summary>
            Returns string of properties specified by <paramref name="type"/> parameter separated by <paramref name="separator"/>.
            </summary>
            <param name="type"></param>
            <param name="separator"></param>
            <returns></returns>
            <remarks>Type can be one of the following: 1 - LineItemIds, 2 - CatalogEntryIds, 3 - DisplayName</remarks>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemCollection.ToString">
            <summary>
            Returns comma-separated list of LineItemIds.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.LineItemDiscount">
            <summary>
            Line Item type of discount.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItemDiscount.Parent">
            <summary>
            Gets the LineItem object discount belongs to.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemDiscount.SetParent(Mediachase.Commerce.Orders.LineItem)">
            <summary>
            Sets the parent line item.
            </summary>
            <param name="lineItem">The line item.</param>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItemDiscount.LineItemDiscountId">
            <summary>
            Gets or sets the line item discount id.
            </summary>
            <value>The line item discount id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItemDiscount.LineItemId">
            <summary>
            Gets or sets the line item id.
            </summary>
            <value>The line item id.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemDiscount.CreateParameters(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Creates the parameters.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemDiscount.OnSaved(Mediachase.Data.Provider.DataResult)">
            <summary>
            Called when [saved].
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemDiscount.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemDiscount.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.LineItemDiscount"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemDiscount.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.LineItemDiscount"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemDiscount.MarkNew">
            <summary>
            Marks current instance as new which will cause new record to be created in the database for the specified object.
            This is useful for creating duplicates of existing objects.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.LineItemDiscountCollection">
            <summary>
            Collection of line item discounts.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItemDiscountCollection.Parent">
            <summary>
            Gets the parent line item collection belongs to.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemDiscountCollection.#ctor(Mediachase.Commerce.Orders.LineItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.LineItemDiscountCollection"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemDiscountCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.LineItemDiscountCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemDiscountCollection.Add(Mediachase.Commerce.Orders.LineItemDiscount)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemDiscountCollection.SetParent(Mediachase.Commerce.Orders.LineItem)">
            <summary>
            Sets the parent line item.
            </summary>
            <param name="lineitem">The lineitem.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Managers.CountryManager">
            <summary>
            Country manager acts as proxy between methods that call data layer functions and the facade layer.
            The methods here check if the appropriate security is set and that the data is cached.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.CountryManager.GetCountries">
            <summary>
            Returns all visible countries and regions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.CountryManager.GetCountries(System.Boolean)">
            <summary>
            Gets the countries.
            </summary>
            <param name="returnInactive">If true, all countries will be returned, otherwise only visible.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.CountryManager.GetCountry(System.Int32,System.Boolean)">
            <summary>
            Gets the country by id.
            </summary>
            <param name="countryId">Id of the country.</param>
            <param name="returnInactive">If true, all regions will be returned, otherwise only visible.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.CountryManager.GetCountry(System.String,System.Boolean)">
            <summary>
            Gets the country by code.
            </summary>
            <param name="code">Country code.</param>
            <param name="returnInactive">If true, all regions will be returned, otherwise only visible.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.CountryManager.SaveCountry(Mediachase.Commerce.Orders.Dto.CountryDto)">
            <summary>
            Saves changes in CountryDto. Not implemented!
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Managers.JurisdictionManager">
            <summary>
            Jurisdiction manager acts as proxy between methods that call data layer functions and the facade layer.
            The methods here check if the appropriate security is set and that the data is cached.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Managers.JurisdictionManager.JurisdictionType">
            <summary>
            JurisdictionType enumeration.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.JurisdictionManager.GetJurisdictions(System.Nullable{Mediachase.Commerce.Orders.Managers.JurisdictionManager.JurisdictionType})">
            <summary>
            Gets the jurisdictions and jurisdiction groups for the specified jurisdiction type.
            </summary>
            <param name="jurisdictionType">JurisdictionType. 1 - tax, 2 - shipping. null - all jurisdictions.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.JurisdictionManager.GetJurisdictionGroups(System.Nullable{Mediachase.Commerce.Orders.Managers.JurisdictionManager.JurisdictionType})">
            <summary>
            Returns jurisdiction groups.
            </summary>
            <param name="jurisdictionType">JurisdictionType. 1 - tax, 2 - shipping. null - all jurisdictions.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.JurisdictionManager.GetJurisdictionGroup(System.Int32)">
            <summary>
            Returns JurisdictionGroup by id.
            </summary>
            <param name="jurisdictionGroupId">The JurisdictionGroupId.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.JurisdictionManager.GetJurisdictionGroup(System.String)">
            <summary>
            Returns JurisdictionGroup by code.
            </summary>
            <param name="code">The JurisdictionGroup Code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.JurisdictionManager.GetJurisdiction(System.Int32,System.Boolean)">
            <summary>
            Returns Jurisdiction by id.
            </summary>
            <param name="jurisdictionId">The jurisdictionId.</param>
            <param name="returnAllGroups">True, to return all jurisdiction groups.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.JurisdictionManager.GetJurisdiction(System.Int32)">
            <summary>
            Calls <see cref="M:Mediachase.Commerce.Orders.Managers.JurisdictionManager.GetJurisdiction(System.Int32,System.Boolean)"/> with returnAllGroups = false
            </summary>
            <param name="jurisdictionId">The jurisdictionId.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.JurisdictionManager.GetJurisdiction(System.String,System.Boolean)">
            <summary>
            Returns Jurisdiction by code.
            </summary>
            <param name="code">The jurisdiction code.</param>
            <param name="returnAllGroups">True, to return all jurisdiction groups.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.JurisdictionManager.GetJurisdiction(System.String)">
            <summary>
            Calls <see cref="M:Mediachase.Commerce.Orders.Managers.JurisdictionManager.GetJurisdiction(System.String,System.Boolean)"/> with returnAllGroups = false
            </summary>
            <param name="code">The jurisdiction code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.JurisdictionManager.SaveJurisdiction(Mediachase.Commerce.Orders.Dto.JurisdictionDto)">
            <summary>
            Saves the jurisdiction.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Managers.OrderGroupLockManager">
            <summary>
            Represents OrderGroup Lock manager
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderGroupLockManager.IsUserHasLockedOrderGroup(System.Int32,System.Guid)">
            <summary>
            Determines the specified user has locked order
            </summary>
            <param name="orderGroupId">The order group id.</param>
            <param name="userId">The user id.</param>
            <returns>
            	<c>true</c> if [is user has locked order group] [the specified order group id]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderGroupLockManager.IsOrderGroupLocked(System.Int32,System.Nullable{System.Guid}@)">
            <summary>
            Determines whether [is order group locked] [the specified order group id].
            </summary>
            <param name="orderGroupId">The order group id.</param>
            <param name="customerId">The customer id.</param>
            <returns>
            	<c>true</c> if [is order group locked] [the specified order group id]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderGroupLockManager.LockOrderGroup(System.Int32,System.Guid)">
            <summary>
            Locks the order group.
            </summary>
            <param name="orderGroupId">The order group id.</param>
            <param name="userId">The user id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderGroupLockManager.UnlockOrderGroup(System.Int32)">
            <summary>
            Unlocks the order group.
            </summary>
            <param name="orderGroupId">The order group id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderGroupLockManager.UnlockAllUserLocks(System.Guid)">
            <summary>
            Unlocks all user locks.
            </summary>
            <param name="userId">The user id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderGroupWorkflowManager.RunWorkflow(Mediachase.Commerce.Orders.OrderGroup,System.String)">
            <summary>
            Runs the specified workflow, exception will be thrown and should be handled by the caller. The execution will be synchronious.
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderGroupWorkflowManager.RunWorkflow(Mediachase.Commerce.Orders.OrderGroup,System.String,System.Boolean)">
            <summary>
            Runs the specified workflow.
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="name">The name.</param>
            <param name="throwException">if set to <c>true</c> the exception will be thrown and should be handled by the caller.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderGroupWorkflowManager.RunWorkflow(Mediachase.Commerce.Orders.OrderGroup,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Executes an order workflow.
            </summary>
            <param name="orderGroup">The order group to execute the workflow against.</param>
            <param name="name">The name of the workflow to execute.</param>
            <param name="throwException">
            If true, and the target workflow throws an exception, an <see cref="T:System.ApplicationException"/>
            will be throw with the inner exception set to the exception thrown by the workflow.
            </param>
            <param name="param">The parameters to pass to the workflow.</param>
            <returns>
            A workflow result created from the arguments to the last idle, completed, terminated, 
            or aborted event from the order runtime with the instance ID of this cart.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderNotesManager.AddSystemNoteToPurchaseOrder(Mediachase.Commerce.Orders.PurchaseOrder,System.String)">
            <summary>
            Adds the system note to purchase order.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <param name="noteDetails">The note details.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderNotesManager.AddNoteToPurchaseOrder(Mediachase.Commerce.Orders.PurchaseOrder,System.String,Mediachase.Commerce.Orders.OrderNoteTypes,System.Guid)">
            <summary>
            Adds the note to purchase order.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <param name="noteDetails">The note details.</param>
            <param name="type">The type.</param>
            <param name="originator">The originator.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderNotesManager.RemoveNotesFromPurchaseOrder(Mediachase.Commerce.Orders.PurchaseOrder,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Remove specific notes belong to a purchase order.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <param name="orderNoteIds">The list of order note ids.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderNotesManager.AddSystemNoteToPaymentPlan(Mediachase.Commerce.Orders.PaymentPlan,System.String)">
            <summary>
            Adds the system note to payment plan.
            </summary>
            <param name="plan">The plan.</param>
            <param name="noteDetails">The note details.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderNotesManager.AddNoteToPaymentPlan(Mediachase.Commerce.Orders.PaymentPlan,System.String,Mediachase.Commerce.Orders.OrderNoteTypes,System.Guid)">
            <summary>
            Adds the note to payment plan.
            </summary>
            <param name="plan">The plan.</param>
            <param name="noteDetails">The note details.</param>
            <param name="type">The type.</param>
            <param name="originator">The originator.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Managers.OrderStatusManager">
            <summary>
            OrderStatus manager acts as proxy between methods that call data layer functions and the facade layer.
            The methods here check whether the appropriate security is set and that the data is cached.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderStatusManager.RecalculatePurchaseOrder(Mediachase.Commerce.Orders.PurchaseOrder)">
            <summary>
            Recalculates the purchase order.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderStatusManager.RecalculatePurchaseOrder(Mediachase.Commerce.Orders.PurchaseOrder,System.Boolean)">
            <summary>
            Recalculates the purchase order.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderStatusManager.RecalculatePurchaseOrder(Mediachase.Commerce.Orders.PurchaseOrder,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Recalculates the purchase order.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <param name="param">The additional input parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderStatusManager.RecalculatePurchaseOrder(Mediachase.Commerce.Orders.PaymentPlan)">
            <summary>
            Recalculates the purchase order.
            </summary>
            <param name="plan">The plan.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderStatusManager.RecalculatePurchaseOrder(Mediachase.Commerce.Orders.PaymentPlan,System.Boolean)">
            <summary>
            Recalculates the purchase order.
            </summary>
            <param name="plan">The plan.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderStatusManager.IsOrderPaid(Mediachase.Commerce.Orders.PurchaseOrder)">
            <summary>
            Determines whether [is order paid] [the specified purchase order].
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <returns>
            	<c>true</c> if [is order paid] [the specified purchase order]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderStatusManager.IsOrderPaid(Mediachase.Commerce.Orders.PaymentPlan)">
            <summary>
            Determines whether [is order paid] [the specified plan].
            </summary>
            <param name="plan">The plan.</param>
            <returns>
            	<c>true</c> if [is order paid] [the specified plan]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderStatusManager.IsOrderCancellable(Mediachase.Commerce.Orders.PurchaseOrder)">
            <summary>
            Determines whether order can be cancelled.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <returns>
            	<c>true</c> if order can be cancelled; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderStatusManager.IsOrderHoldable(Mediachase.Commerce.Orders.PurchaseOrder)">
            <summary>
            Determines if order can be put on hold.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <returns>
            	<c>true</c> if can be put on hold; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderStatusManager.IsOrderHaveAwaitingStockReturns(Mediachase.Commerce.Orders.PurchaseOrder)">
            <summary>
            Determines whether the order has any waiting stock return form.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <returns>
            	<c>true</c> if [is order awaiting stock returns] [the specified purchase order]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderStatusManager.IsOrderHaveAwaitingReturnCompletable(Mediachase.Commerce.Orders.PurchaseOrder)">
            <summary>
            Determines whether order has any awaiting completion return form.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <returns>
            	<c>true</c> if [is order awaiting return completable] [the specified purchase order]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderStatusManager.PickForPackingOrderShipment(Mediachase.Commerce.Orders.Shipment)">
            <summary>
            Picks the shipment for packing.
            </summary>
            <param name="shipment">The shipment.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderStatusManager.ReturnFromPackingOrderShipment(Mediachase.Commerce.Orders.Shipment)">
            <summary>
            Returns the shipment from packing to release.
            </summary>
            <param name="shipment">The shipment.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderStatusManager.GetPurchaseOrderStatus(Mediachase.Commerce.Orders.PurchaseOrder)">
            <summary>
            Gets the purchase order status.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderStatusManager.GetPurchaseOrderStatus(Mediachase.Commerce.Orders.PaymentPlan)">
            <summary>
            Gets the purchase order status.
            </summary>
            <param name="plan">The plan.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderStatusManager.GetOrderGroupStatus(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Gets <see cref="T:Mediachase.Commerce.Orders.OrderStatus"/> of an order group.
            </summary>
            <param name="orderGroup">The order group.</param>
            <returns>The order group status.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderStatusManager.GetOrderShipmentStatus(Mediachase.Commerce.Orders.Shipment)">
            <summary>
            Gets the order shipment status.
            </summary>
            <param name="shipment">The shipment.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderStatusManager.GetDefinedOrderStatuses">
            <summary>
            Gets the order status.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.OrderStatusManager.SaveOrderStatus(Mediachase.Commerce.Orders.Dto.OrderStatusDto)">
            <summary>
            Saves changes in OrderStatusDto. Not implemented!
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Managers.PaymentManager">
            <summary>
            Payment manager acts as proxy between methods that call data layer functions and the facade layer.
            The methods here check if the appropriate security is set and that the data is cached.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentManager.GetPaymentMethods(System.String,System.Boolean)">
            <summary>
            Gets the payment methods.
            </summary>
            <param name="languageid">The languageid.</param>
            <param name="returnInactive">if set to <c>true</c> [return inactive].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentManager.GetPaymentMethods(System.String)">
            <summary>
            Returns list of active payment methods.
            </summary>
            <param name="languageid">The languageid.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentManager.GetPaymentMethodsByMarket(System.String,System.String,System.Boolean)">
            <summary>
            Gets the payment methods.
            </summary>
            <param name="languageid">The languageid.</param>
            <param name="marketid">The marketId.</param>
            <param name="returnInactive">if set to <c>true</c> [return inactive].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentManager.GetPaymentMethodsByMarket(System.String)">
            <summary>
            Returns list of active payment methods.
            </summary>
            <param name="marketid">The marketid.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentManager.GetPaymentMethodsByMarket(System.String,System.String)">
            <summary>
            Returns list of active payment methods.
            </summary>
            <param name="languageid">The languageid.</param>
            <param name="marketid">The marketid.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentManager.GetPaymentMethod(System.Guid,System.Boolean)">
            <summary>
            Returns payment method by id.
            </summary>
            <param name="paymentMethodId">PaymentMethodId</param>
            <param name="returnInactive">if set to <c>true</c> [return inactive].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentManager.GetPaymentMethod(System.Guid)">
            <summary>
            Returns active payment method by id.
            </summary>
            <param name="paymentMethodId">The payment method id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentManager.GetPaymentMethodBySystemName(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Returns payment method by system name.
            </summary>
            <param name="name">PaymentMethod SystemKeyword</param>
            <param name="languageid">The languageid.</param>
            <param name="marketId">The marketid.</param>
            <param name="returnInactive">if set to <c>true</c> [return inactive].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentManager.GetPaymentMethodBySystemName(System.String,System.String)">
            <summary>
            Returns active payment method by system name.
            </summary>
            <param name="name">The name.</param>
            <param name="languageid">The languageid.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentManager.GetPaymentMethodBySystemName(System.String,System.String,System.Boolean)">
            <summary>
            Returns active payment method by system name.
            </summary>
            <param name="name">The name.</param>
            <param name="languageid">The languageid.</param>
            <param name="returnInactive">if set to <c>true</c> [return inactive].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentManager.GetPaymentMethodBySystemName(System.String,System.String,System.String)">
            <summary>
            Returns active payment method by system name.
            </summary>
            <param name="name">The name.</param>
            <param name="languageid">The languageid.</param>
            <param name="marketId">The marketid</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentManager.SavePayment(Mediachase.Commerce.Orders.Dto.PaymentMethodDto)">
            <summary>
            Saves the payment.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentStatusManager.IsPaymentProcessable(Mediachase.Commerce.Orders.Payment)">
            <summary>
            Determines whether is payment processable for the specified payment.
            </summary>
            <param name="payment">The payment.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">payment</exception>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentStatusManager.ProcessPayment(Mediachase.Commerce.Orders.Payment)">
            <summary>
            Processes the payment.
            </summary>
            <param name="payment">The payment.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentStatusManager.ProcessPayment(EPiServer.Commerce.Order.IPayment)">
            <summary>
            Processes the payment.
            </summary>
            <param name="payment">The payment.</param>
            <returns>The <see cref="T:EPiServer.Commerce.Order.IPayment"/>.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentStatusManager.FailPayment(Mediachase.Commerce.Orders.Payment)">
            <summary>
            Fails the payment.
            </summary>
            <param name="payment">The payment.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentStatusManager.FailPayment(EPiServer.Commerce.Order.IPayment)">
            <summary>
            Fails the payment.
            </summary>
            <param name="payment">The payment.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentStatusManager.GetPaymentStatus(EPiServer.Commerce.Order.IPayment)">
            <summary>
            Gets the payment status.
            </summary>
            <param name="payment">The payment.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentStatusManager.GetPaymentStatus(Mediachase.Commerce.Orders.Payment)">
            <summary>
            Gets the payment status.
            </summary>
            <param name="payment">The payment.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentTransactionTypeManager.GetResultingPaymentsByTransactionTypes(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Orders.Payment},System.Collections.Generic.IEnumerable{Mediachase.Commerce.Orders.TransactionType})">
            <summary>
            Gets the resulting payments by transaction types.
            </summary>
            <param name="payments">The payments.</param>
            <param name="tranTypes">The tran types.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentTransactionTypeManager.GetResultingPaymentsByTransactionType(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Orders.Payment},Mediachase.Commerce.Orders.TransactionType)">
            <summary>
            Gets the type of the resulting payments by transaction.
            </summary>
            <remarks>This method and all related methods in this class has been copied over to Mediachase.Commerce.Workflow.Activities.OrderGroupActivityBase/> 
            to allow customers to customize this method's behaviors. This method itself will be left here to be used by other parts of the Commerce solution until
            the appropriate time.</remarks>
            <param name="payments">The payments.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentTransactionTypeManager.GetAvailablePaymentsByTransactionType(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Orders.Payment},Mediachase.Commerce.Orders.TransactionType)">
            <summary>
            Returns payments that can be used as base for creating a new payment for the specified transaction type.
            </summary>
            <param name="payments">The payments.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentTransactionTypeManager.GetPaymentTransactionType(Mediachase.Commerce.Orders.Payment)">
            <summary>
            Gets the type of the payment transaction.
            </summary>
            <param name="payment">The payment.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PaymentTransactionTypeManager.GetAllRelatedPayments(Mediachase.Commerce.Orders.Payment)">
            <summary>
            Gets all related payments. On Order.
            </summary>
            <param name="payment">The payment.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Managers.PickListManager">
            <summary>
            Implements operations for the pick list manager.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PickListManager.GetDto">
            <summary>
            Gets pick lists.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PickListManager.GetPickListById(Mediachase.Commerce.Orders.Dto.PickListDto,System.Int32)">
            <summary>
            Gets the pick list by id.
            </summary>
            <param name="dto">The dto.</param>
            <param name="pickListId">The pick list id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PickListManager.GetPickListsByWarehouse(Mediachase.Commerce.Orders.Dto.PickListDto,System.String,System.Boolean)">
            <summary>
            Gets pick lists for the specified warehouse code.
            </summary>
            <param name="dto">The dto.</param>
            <param name="warehouseCode">The warehouse code.</param>
            <param name="returnAll">Return all pick lists regardless of warehouse code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PickListManager.SaveDto(Mediachase.Commerce.Orders.Dto.PickListDto)">
            <summary>
            Saves changes in PickListDto.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PickListManager.GetPackingShipmentsCount(System.Int32)">
            <summary>
            Gets the packing shipments count for the given pick list.
            </summary>
            <param name="pickListId">The pick list id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PickListManager.ClearDtoCache">
            <summary>
            Clears the DTO cache.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PickListManager.ClearShipmentsCache">
            <summary>
            Clears the picklist cache.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PickListManager.ClearPicklistCache">
            <summary>
            Clears the picklist cache.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.GetNewPurchaseOrderFromCart(Mediachase.Commerce.Orders.Cart)">
            <summary>
            Gets the new purchase order from cart.
            </summary>
            <param name="cart">The cart.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.GetNewPaymentPlanFromCart(Mediachase.Commerce.Orders.Cart)">
            <summary>
            Gets the new payment plan from cart.
            </summary>
            <param name="cart">The cart.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.MoveLineItemToShipment(Mediachase.Commerce.Orders.PurchaseOrder,System.Int32,Mediachase.Commerce.Orders.Shipment,Mediachase.Commerce.Orders.Shipment,System.Decimal)">
            <summary>
            Moves the line item to shipment.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <param name="lineItemId">The line item id.</param>
            <param name="srcShipment">The SRC shipment.</param>
            <param name="dstShipment">The DST shipment.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.MoveLineItemToShipment(Mediachase.Commerce.Orders.PaymentPlan,System.Int32,Mediachase.Commerce.Orders.Shipment,Mediachase.Commerce.Orders.Shipment,System.Decimal)">
            <summary>
            Moves the line item to shipment.
            </summary>
            <param name="plan">The plan.</param>
            <param name="lineItemId">The line item id.</param>
            <param name="srcShipment">The SRC shipment.</param>
            <param name="dstShipment">The DST shipment.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.MoveLineItemToShipment(Mediachase.Commerce.Orders.OrderGroup,System.Int32,Mediachase.Commerce.Orders.Shipment,Mediachase.Commerce.Orders.Shipment,System.Decimal)">
            <summary>
            Moves one or several line item SKU:s from one shipment to another.
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="lineItemId">The line item identifier of the original line item.</param>
            <param name="srcShipment">The source shipment.</param>
            <param name="dstShipment">The destination shipment.</param>
            <param name="quantity">The quantity that should be moved to the destination shipment.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.AddLineItemToShipment(Mediachase.Commerce.Orders.OrderGroup,System.Int32,Mediachase.Commerce.Orders.Shipment,System.Decimal)">
            <summary>
            Adds the line item to shipment.
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="lineItemId">The line item identifier.</param>
            <param name="shipment">The shipment.</param>
            <param name="quantity">The quantity.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="orderGroup"/> is null.</exception>
            <exception cref="T:System.NullReferenceException">The <paramref name="shipment"/> is null, or the line item with <paramref name="lineItemId"/> is not found.</exception>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.AddLineItemToShipment(Mediachase.Commerce.Orders.PurchaseOrder,System.Int32,Mediachase.Commerce.Orders.Shipment,System.Decimal)">
            <summary>
            Adds the line item to shipment.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <param name="lineItemId">The line item id.</param>
            <param name="shipment">The shipment.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.AddLineItemToShipment(Mediachase.Commerce.Orders.PaymentPlan,System.Int32,Mediachase.Commerce.Orders.Shipment,System.Decimal)">
            <summary>
            Adds the line item to shipment.
            </summary>
            <param name="plan">The plan.</param>
            <param name="lineItemId">The line item id.</param>
            <param name="shipment">The shipment.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.AddLineItemToFirstShipmentInOrder(Mediachase.Commerce.Orders.PurchaseOrder,System.Int32,System.Decimal)">
            <summary>
            Adds the line item to first shipment in order.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <param name="lineItemId">The line item id.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.AddLineItemToFirstShipmentInOrder(Mediachase.Commerce.Orders.PaymentPlan,System.Int32,System.Decimal)">
            <summary>
            Adds the line item to first shipment in order.
            </summary>
            <param name="plan">The plan.</param>
            <param name="lineItemId">The line item id.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.AddLineItemToShipmentDetectedByLineItemShipmentInfo(Mediachase.Commerce.Orders.PurchaseOrder,System.Int32,System.Decimal)">
            <summary>
            Adds the line item to shipment detected by line item shipment info.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <param name="lineItemId">The line item id.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.AddLineItemToShipmentDetectedByLineItemShipmentInfo(Mediachase.Commerce.Orders.PaymentPlan,System.Int32,System.Decimal)">
            <summary>
            Adds the line item to shipment detected by line item shipment info.
            </summary>
            <param name="plan">The plan.</param>
            <param name="lineItemId">The line item id.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.AddLineItemToShipmentDetectedByLineItemShipmentInfo(Mediachase.Commerce.Orders.OrderGroup,System.Int32,System.Decimal)">
            <summary>
            Adds the line item to shipment detected by line item shipment information.
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="lineItemId">The line item identifier.</param>
            <param name="quantity">The quantity.</param>
            <exception cref="T:System.ArgumentNullException">purchaseOrder</exception>
            <exception cref="T:System.NullReferenceException">lineItem</exception>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.RemoveLineItemFromOrder(Mediachase.Commerce.Orders.PurchaseOrder,System.Int32)">
            <summary>
            Removes the line item from order.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <param name="lineItemId">The line item id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.RemoveLineItemFromOrder(Mediachase.Commerce.Orders.OrderGroup,System.Int32)">
            <summary>
            Removes the line item from order group.
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="lineItemId">The line item identifier.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.RemoveLineItemFromOrder(EPiServer.Commerce.Order.IOrderGroup,System.Int32)">
            <summary>
            Removes the line item from order group.
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="lineItemId">The line item identifier.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.RemoveLineItemFromOrder(EPiServer.Commerce.Order.IOrderGroup,System.Int32,System.Int32)">
            <summary>
            Removes the line item from shipment of order group.
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="shipmentId">The shipment identifier.</param>
            <param name="lineItemId">The line item identifier.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.ReindexLineItems(Mediachase.Commerce.Orders.Shipment,System.Int32)">
            <summary>
            Re-index the line items because one of the line item was removed from the orderform, then the indices of lineitems changed.
            </summary>
            <param name="shipment"></param>
            <param name="indexToRemove"></param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.RemoveLineItemFromOrder(Mediachase.Commerce.Orders.PaymentPlan,System.Int32)">
            <summary>
            Removes the line item from order.
            </summary>
            <param name="plan">The plan.</param>
            <param name="lineItemId">The line item id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.RemoveLineItemFromShipment(Mediachase.Commerce.Orders.OrderGroup,System.Int32,System.Int32)">
            <summary>
            Removes the line item from shipment.
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="lineItemId">The line item id.</param>
            <param name="shipmentId">The shipment id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.RemoveLineItemFromShipment(Mediachase.Commerce.Orders.PurchaseOrder,System.Int32,System.Int32)">
            <summary>
            Removes the line item from shipment.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <param name="lineItemId">The line item id.</param>
            <param name="shipmentId">The shipment id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.RemoveLineItemFromShipment(Mediachase.Commerce.Orders.PaymentPlan,System.Int32,System.Int32)">
            <summary>
            Removes the line item from shipment.
            </summary>
            <param name="plan">The plan.</param>
            <param name="lineItemId">The line item id.</param>
            <param name="shipmentId">The shipment id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.RemoveLineItemFromShipment(Mediachase.Commerce.Orders.PurchaseOrder,System.Int32,Mediachase.Commerce.Orders.Shipment)">
            <summary>
            Removes the line item from shipment.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <param name="lineItemId">The line item id.</param>
            <param name="shipment">The shipment.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.RemoveLineItemFromShipment(Mediachase.Commerce.Orders.OrderGroup,System.Int32,Mediachase.Commerce.Orders.Shipment)">
            <summary>
            Removes the line item from shipment.
            </summary>
            <param name="orderGroup">The purchase order.</param>
            <param name="lineItemId">The line item id.</param>
            <param name="shipment">The shipment.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.RemoveLineItemFromShipment(Mediachase.Commerce.Orders.PaymentPlan,System.Int32,Mediachase.Commerce.Orders.Shipment)">
            <summary>
            Removes the line item from shipment.
            </summary>
            <param name="plan">The plan.</param>
            <param name="lineItemId">The line item id.</param>
            <param name="shipment">The shipment.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.RemoveLineItemFromShipment(Mediachase.Commerce.Orders.PurchaseOrder,System.Int32,Mediachase.Commerce.Orders.Shipment,System.Decimal)">
            <summary>
            Removes the line item from shipment.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <param name="lineItemId">The line item id.</param>
            <param name="shipment">The shipment.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.RemoveLineItemFromShipment(Mediachase.Commerce.Orders.OrderGroup,System.Int32,Mediachase.Commerce.Orders.Shipment,System.Decimal)">
            <summary>
            Removes the line item from shipment.
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="lineItemId">The line item identifier.</param>
            <param name="shipment">The shipment.</param>
            <param name="quantity">The quantity.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="orderGroup"/> or <paramref name="shipment"/> is null.</exception>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.RemoveLineItemFromShipment(Mediachase.Commerce.Orders.PaymentPlan,System.Int32,Mediachase.Commerce.Orders.Shipment,System.Decimal)">
            <summary>
            Removes the line item from shipment.
            </summary>
            <param name="plan">The plan.</param>
            <param name="lineItemId">The line item id.</param>
            <param name="shipment">The shipment.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.UpdateShipmentLineItemQuantity(Mediachase.Commerce.Orders.PurchaseOrder,System.Int32,Mediachase.Commerce.Orders.Shipment,System.Decimal)">
            <summary>
            Updates the shipment line item quantity.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <param name="lineItemId">The line item id.</param>
            <param name="shipment">The shipment.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.UpdateShipmentLineItemQuantity(Mediachase.Commerce.Orders.PaymentPlan,System.Int32,Mediachase.Commerce.Orders.Shipment,System.Decimal)">
            <summary>
            Updates the shipment line item quantity.
            </summary>
            <param name="plan">The plan.</param>
            <param name="lineItemId">The line item id.</param>
            <param name="shipment">The shipment.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.GetFulfilledReturnItemCodes(EPiServer.Commerce.Order.IPurchaseOrder)">
            <summary>
            Get codes of line items in the order which have been returned all quantity.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <returns>The list of item codes.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.PurchaseOrderManager.GetFulfilledReturnItemCodes(EPiServer.Commerce.Order.IPurchaseOrder,EPiServer.Commerce.Order.IShipment)">
            <summary>
            Get codes of line items in the shipment which have been returned all quantity.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <param name="originalShipment">The original shipment.</param>
            <returns>The list of item codes.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ReturnExchangeManager.AddNewReturnFormToPurchaseOrder(Mediachase.Commerce.Orders.PurchaseOrder)">
            <summary>
            Adds the new return form to purchase order.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ReturnExchangeManager.AddNewReturnLineItemToReturnForm(Mediachase.Commerce.Orders.OrderForm,Mediachase.Commerce.Orders.LineItem,System.Decimal,System.String)">
            <summary>
            Adds the new return line item to return form.
            </summary>
            <param name="returnForm">The return form.</param>
            <param name="origLineItem">The orig line item.</param>
            <param name="returnQuantity">The return quantity.</param>
            <param name="returnReason">The return reason.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ReturnExchangeManager.AddNewShipmentToReturnForm(Mediachase.Commerce.Orders.OrderForm,Mediachase.Commerce.Orders.Shipment)">
            <summary>
            Adds the new shipment to return form.
            </summary>
            <param name="returnForm">The return form.</param>
            <param name="orginalShipment">The orginal shipment.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ReturnExchangeManager.CreateExchangeOrderForReturnForm(Mediachase.Commerce.Orders.OrderForm,Mediachase.Commerce.Orders.Shipment)">
            <summary>
            Creates the exchange order for return form.
            </summary>
            <param name="returnForm">The return form.</param>
            <param name="shipment">The shipment.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ReturnExchangeManager.GetExchangeOrderForReturnForm(Mediachase.Commerce.Orders.OrderForm)">
            <summary>
            Gets the exchange order for return form.
            </summary>
            <param name="returnForm">The return form.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ReturnExchangeManager.GetReturnFormById(Mediachase.Commerce.Orders.PurchaseOrder,System.Int32)">
            <summary>
            Gets the return form by id.
            </summary>
            <param name="purchaseOrder">The purchase order.</param>
            <param name="returnId">The return id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ReturnExchangeManager.GetReturnFormOriginalShipment(Mediachase.Commerce.Orders.OrderForm)">
            <summary>
            Gets the return form original shipment.
            </summary>
            <param name="returnForm">The return form.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ReturnExchangeManager.GetAvailableForReturnLineItems(Mediachase.Commerce.Orders.Shipment)">
            <summary>
            Gets the available for return line items.
            </summary>
            <param name="shipment">The shipment.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ReturnExchangeManager.GetAvailableForReturnQuantity(Mediachase.Commerce.Orders.Shipment,System.Int32)">
            <summary>
            Gets the available for return line item quantity.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="lineItemId">The line item.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ReturnFormStatusManager.GetDefinedReturnFormStatuses">
            <summary>
            Gets the defined return form statuses.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Managers.ReturnReasonsManager">
            <summary>
            Implements operations for the return reasons manager.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ReturnReasonsManager.GetReturnReasonsDto(System.Boolean)">
            <summary>
            Gets the return reasons dto.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ReturnReasonsManager.GetReturnReasonById(System.Int32)">
            <summary>
            Gets the return reasons dto by returnReasonId.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ReturnReasonsManager.GetReturnReasonByName(System.String)">
            <summary>
            Gets the return reasons dto by returnReasonId.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ReturnReasonsManager.SaveReturnReason(Mediachase.Commerce.Orders.Dto.ReturnReasonsDto)">
            <summary>
            Saves the return reasons.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Managers.ShippingManager">
            <summary>
            Shipping manager acts as proxy between methods that call data layer functions and the facade layer.
            The methods here check if the appropriate security is set and that the data is cached.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.GetDefinedShipmentStatuses">
            <summary>
            Gets the defined shipment statuses.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.GetShippingMethodsByMarket(System.String,System.Boolean)">
            <summary>
            Gets all the shipping methods that are available for a Market.
            </summary>
            <param name="marketid">The Market ID.</param>
            <param name="returnInactive">if set to <c>true</c> [return inactive].</param>
            <returns></returns>
            <remarks>
            Note that shipping methods are not directly associated to Markets. We use language as a proxy by checking all languages
            that are available to the passed Market. This is likely to change in a future pass.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.GetShippingMethods(System.String,System.Boolean)">
            <summary>
            Gets the shipping methods.
            </summary>
            <param name="languageid">The languageid.</param>
            <param name="returnInactive">if set to <c>true</c> [return inactive].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.GetShippingMethods(System.String)">
            <summary>
            Returns list of active shipping methods.
            </summary>
            <param name="languageid">The languageid.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.GetShippingOption(System.Guid,System.Boolean)">
            <summary>
            Returns shippping option by shipping option id.
            </summary>
            <param name="shippingOptionId">The shipping option id.</param>
            <param name="returnInactive">If true, return inactive shipping methods based on specified ShippingOption</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.GetShippingOption(System.Guid)">
            <summary>
            Returns shippping option by shipping option id.
            </summary>
            <param name="shippingOptionId">The shipping option id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.GetShippingMethod(System.Guid,System.Boolean)">
            <summary>
            Returns shippping method by shipping method id.
            </summary>
            <param name="shippingMethodId">The shipping method id.</param>
            <param name="returnInactive">If true, return inactive shipping methods</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.GetShippingMethod(System.Guid)">
            <summary>
            Returns active shippping method by shipping method id.
            </summary>
            <param name="shippingMethodId">The shipping method id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.GetShippingPackages">
            <summary>
            Returns shippping package by shipping option id.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.GetShippingPackage(System.Int32)">
            <summary>
            Returns shippping package by packageId.
            </summary>
            <param name="packageId">The packageId.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.GetShippingPackage(System.String)">
            <summary>
            Returns shippping package by package name.
            </summary>
            <param name="name">The package name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.GetShippingPackageIdByName(System.String)">
            <summary>
            Gets the ShippingPackage id by name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.GetShippingMethodCases(System.Guid)">
            <summary>
            Returns shippping method cases by shipping method id.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.GetShippingMethodCases(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal})">
            <summary>
            Returns shippping method cases by shipping method id.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.GetShipments(Mediachase.Commerce.Shared.SearchParameters,Mediachase.Commerce.Shared.SearchOptions,System.Int32@)">
            <summary>
            Return shipments by paging.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.AddressIsHandoffLocation(Mediachase.Commerce.Orders.OrderAddress)">
            <summary>
            Checks an address to determine whether it matches a pickup warehouse
            </summary>
            <remarks>
            Will return a warehouse match even if it is inactive
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.AddressIsHandoffLocation(Mediachase.Commerce.Customers.CustomerAddress)">
            <summary>
            Checks an address to determine whether it matches a pickup warehouse
            </summary>
            <remarks>
            Will return a warehouse match even if it is inactive
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.AddressIsHandoffLocation(System.String)">
            <summary>
            Checks an address name to determine whether it matches a pickup warehouse
            </summary>
            <remarks>
            Will return a warehouse match even if it is inactive
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.IsHandoffShippingMethod(System.String)">
            <summary>
            Checks a shipping method name to see if it matches one of the (predefined) pickup shipping methods
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.GetHandoffLocationFromAddressName(System.String)">
            <summary>
            Matches an address name to the available pickup warehouses and returns the match (if any)
            </summary>
            <returns>
            The matching IWarehouse, or null if there is no match
            </returns>
            <remarks>
            Will return a warehouse match even if it is inactive
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.SaveShipping(Mediachase.Commerce.Orders.Dto.ShippingMethodDto)">
            <summary>
            Saves the shipping.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.ShippingManager.SavePackage(Mediachase.Commerce.Orders.Dto.ShippingMethodDto)">
            <summary>
            Saves the package.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Managers.TaxManager">
            <summary>
            Implements operations for the tax manager.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.TaxManager.GetTaxDto(System.Nullable{Mediachase.Commerce.Orders.TaxType})">
            <summary>
            Gets all tax rows for the current application and optionally a specific tax type.
            </summary>
            <param name="type">The type of the taxes to return, or all types if null.</param>
            <returns>A <see cref="T:Mediachase.Commerce.Orders.Dto.TaxDto"/> containing the specified rows.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.TaxManager.GetTax(System.Int32)">
            <summary>
            Gets the tax by id.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.TaxManager.GetTax(System.String)">
            <summary>
            Gets the tax by name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.TaxManager.GetTaxes(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets the taxes.
            </summary>
            <param name="siteId">The site id.</param>
            <param name="taxCategory">The tax category.</param>
            <param name="languageCode">The language code.</param>
            <param name="countryCode">The country code.</param>
            <param name="stateProvinceCode">The state province code.</param>
            <param name="zipPostalCode">The zip postal code.</param>
            <param name="district">The district.</param>
            <param name="county">The county.</param>
            <param name="city">The city.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Managers.TaxManager.SaveTax(Mediachase.Commerce.Orders.Dto.TaxDto)">
            <summary>
            Saves changes in TaxDto.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OperationKeyMapper">
            <summary>
            Class to parse operation key to a dictionary and vice versa.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OperationKeyMapper.Parse(System.String,System.Collections.Concurrent.ConcurrentDictionary{System.Int32,System.Collections.Generic.IEnumerable{System.String}})">
            <summary>
            Parses the operation key to the a dictionary.
            </summary>
            <param name="operationKeyString">The operation key string.</param>
            <param name="operationKeysMap">The operation keys map.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OperationKeyMapper.GetString(System.Collections.Generic.IDictionary{System.Int32,System.Collections.Generic.IEnumerable{System.String}})">
            <summary>
            Gets the operation key from a dictionary.
            </summary>
            <param name="operationKeysMap">The operation keys map.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OperationKeyMapper.RemoveOperationKey(System.Int32,System.String,System.Collections.Generic.IDictionary{System.Int32,System.Collections.Generic.IEnumerable{System.String}})">
            <summary>
            Removes the operation key.
            </summary>
            <param name="index">The index.</param>
            <param name="operationKey">The operation key.</param>
            <param name="operationKeysMap">The operation keys map.</param>
            <returns>
            True if the key was successfully removed. False otherwise
            </returns>
            <exception cref="T:System.ArgumentException">index must be positive</exception>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OperationKeyMapper.InsertOperationKeys(System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.Int32,System.Collections.Generic.IEnumerable{System.String}})">
            <summary>
            Inserts the operation key.
            </summary>
            <param name="index">The index.</param>
            <param name="operationKeys">The operation keys.</param>
            <param name="operationKeysMap">The operation keys map.</param>
            <returns>
            True if operation key was successfully inserted. False otherwise.
            </returns>
            <exception cref="T:System.ArgumentException">index must be positive</exception>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderAddress">
            <summary>
            Order address.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.Parent">
            <summary>
            Gets the parent Order group.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderAddress.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderAddress"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderAddress.#ctor(Mediachase.Commerce.Customers.AddressEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderAddress"/> class and copies the fields
            from an existing customer address.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.EPiServer#Commerce#Storage#IExtendedProperties#Properties">
            <summary>
            Gets the property bag for dealing with custom meta fields.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.OrderGroupAddressId">
            <summary>
            Gets the order group address id.
            </summary>
            <value>The order group address id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.OrderGroupId">
            <summary>
            Gets or sets the order group id.
            </summary>
            <value>The order group id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
            <value>The name of the first.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.LastName">
            <summary>
            Gets or sets last name.
            </summary>
            <value>The name of the last.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.Organization">
            <summary>
            Gets or sets the organization.
            </summary>
            <value>The organization.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.Line1">
            <summary>
            Gets or sets the line1.
            </summary>
            <value>The line1.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.Line2">
            <summary>
            Gets or sets the line2.
            </summary>
            <value>The line2.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.City">
            <summary>
            Gets or sets the city.
            </summary>
            <value>The city.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.CountryCode">
            <summary>
            Gets or sets the country code.
            </summary>
            <value>The country code.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.CountryName">
            <summary>
            Gets or sets the name of the country.
            </summary>
            <value>The name of the country.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.PostalCode">
            <summary>
            Gets or sets the postal code.
            </summary>
            <value>The postal code.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.RegionCode">
            <summary>
            Gets or sets the region code.
            </summary>
            <value>The region code.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.RegionName">
            <summary>
            Gets or sets the name of the region.
            </summary>
            <value>The name of the region.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.DaytimePhoneNumber">
            <summary>
            Gets or sets the daytime phone number.
            </summary>
            <value>The daytime phone number.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.EveningPhoneNumber">
            <summary>
            Gets or sets the evening phone number.
            </summary>
            <value>The evening phone number.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.FaxNumber">
            <summary>
            Gets or sets the fax number.
            </summary>
            <value>The fax number.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>The email.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderAddress.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderAddress.SetParent(System.Object)">
            <summary>
            Sets the parent.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderAddress.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderAddress.CopyOrderAddressToCustomerAddress(Mediachase.Commerce.Orders.OrderAddress,Mediachase.Commerce.Customers.AddressEntity)">
            <summary>
            Copies the fields from an instance of an OrderAddress object to an instance of a CustomerAddress object.
            </summary>
            <param name="orderAddress"></param>
            <param name="customerAddress"></param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderAddress.UpdateShipmentsAddress(System.String,System.String)">
            <summary>
            Updates the shipments address.
            </summary>
            <param name="oldAddressId">The old address id.</param>
            <param name="newAddressId">The new address id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderAddress.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderAddress"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderAddress.WriteXml(System.Xml.XmlWriter)">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddress.Shipment">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderAddress.ShippingAddressChanged">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderAddressCollection">
            <summary>
            A collection of addresses for the particular order.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderAddressCollection.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderAddressCollection.#ctor(Mediachase.Commerce.Orders.OrderGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderAddressCollection"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderAddressCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderAddressCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderAddressCollection.Add(Mediachase.Commerce.Orders.OrderAddress)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderAddressCollection.SetParent(Mediachase.Commerce.Orders.OrderGroup)">
            <summary>
            Sets the parent.
            </summary>
            <param name="orderGroup">The order group.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderAddressCollection.AddNew">
            <summary>
            Adds the new.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderAddressHelper">
            <summary>
            Helper class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderAddressHelper.GetAddressString(Mediachase.Commerce.Orders.OrderAddress)">
            <summary>
            Converts address to a string (in HTML format) without phone numbers.
            </summary>
            <param name="address"></param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderAddressHelper.GetAddressString(Mediachase.Commerce.Orders.OrderAddress,System.Boolean,System.Boolean)">
            <summary>
            Converts address to a string (in HTML format).
            </summary>
            <param name="address"></param>
            <param name="includeNames"></param>
            <param name="includePhones"></param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderAddressHelper.Clone(Mediachase.Commerce.Orders.OrderGroup,Mediachase.Commerce.Orders.OrderAddress)">
            <summary>
            Clones the specified address.
            </summary>
            <param name="og">The og.</param>
            <param name="srcAddress">The SRC address.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderCache">
            <summary>
            Implements operations for the order cache.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderCache.CreateCacheKey(System.String[])">
            <summary>
            Creates the cache key with current UI culture.
            </summary>
            <param name="keys">The keys.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderCache.CreateCacheKey(System.Globalization.CultureInfo,System.String[])">
            <summary>
            Creates the cache key.
            </summary>
            <param name="culture">The culture.</param>
            <param name="keys">The keys.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderCache.Clear">
            <summary>
            Removes all items from the Cache
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderCache.Remove(System.String)">
            <summary>
            Removes the specified key from the cache
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderCache.ReadThrough``1(System.String,System.Collections.Generic.IEnumerable{System.String},System.TimeSpan,System.Func{``0})">
            <summary>
            Read-through cache handling.
            </summary>
            <typeparam name="T">Type of the value to read.</typeparam>
            <param name="key">The key.</param>
            <param name="masterKeys">The master keys that the cached item should depend on.</param>
            <param name="timeout">The cache timeout.</param>
            <param name="load">The function to invoke for retrieving the value if it does not exist in the cache.</param>
            <returns>
            The object associated with the key, if it exists or is read thru the readValue fuction. Otherwise returns null.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderCache.Insert(System.String,System.Object,System.TimeSpan)">
            <summary>
            Inserts the value into the cache with the specified key, with dependency to a master key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value to cache.</param>
            <param name="timeout">The cache timeout.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderCache.Insert(System.String,System.Object,System.Collections.Generic.IEnumerable{System.String},System.TimeSpan)">
            <summary>
            Inserts the value into the cache with the specified key, with dependency to a set of master keys.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value to cache.</param>
            <param name="masterKeys">The master keys that we depend upon. These don't have to exist in the cache,
            they will be inserted if they don't exist.</param>
            <param name="timeout">The cache timeout.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderCache.Get(System.String)">
            <summary>
            Gets the cached value for the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderCache.GetLock(System.String)">
            <summary>
            Gets the lock.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.SensitiveDataPersistance">
            <summary>
            Defines way the sensitive data is persisted in the order system.
            The examples of sensitive data are credit card numbers and PIN codes.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.SensitiveDataPersistance.DoNotPersist">
            <summary>
            The sensitive data will be removed as soon as transaction is completed.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.SensitiveDataPersistance.Partial">
            <summary>
            Only parts of the data will be persisted. For example last 4 digits of the credit card number. 
            Data will be encrypted when payment plans are created.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.SensitiveDataPersistance.Encrypted">
            <summary>
            Full data will be persisted in encrypted format.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderConfiguration">
            <summary>
            Implemented as a thread-safe singleton class
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.Instance">
            <summary>
            Singleton instance
            </summary>
            <value>The instance.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.NewOrderStatus">
            <summary>
            Gets the new order status.
            </summary>
            <value>The new order status.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.SensitiveDataMode">
            <summary>
            Gets the sensitive data mode, indicating if sensitive data (such as credit card number) should be removed, remain partially unmasked or be encrypted.
            </summary>
            <value>The sensitive data mode.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.AutoConfigure">
            <summary>
            Gets a value indicating whether to auto configure the Order System when first initialized.
            </summary>
            <value><c>true</c> if auto configuration should happen; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.MetaClasses">
            <summary>
            Contains the names of meta classes for orders that are stored in the configuration file
            </summary>
            <value>The meta classes.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderConfiguration.MetaClassNames">
            <summary>
            Gets the name of the default meta class.
            </summary>
            <value>The name of the default meta class.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderConfiguration.MetaClassNames.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderConfiguration.MetaClassNames"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.MetaClassNames.PurchaseOrderClass">
            <summary>
            Gets the purchase order class.
            </summary>
            <value>The purchase order class.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.MetaClassNames.PaymentPlanClass">
            <summary>
            Gets the payment plan class.
            </summary>
            <value>The payment plan class.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.MetaClassNames.ShoppingCartClass">
            <summary>
            Gets the shopping cart class.
            </summary>
            <value>The shopping cart class.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.MetaClassNames.OrderFormClass">
            <summary>
            Gets the order form class.
            </summary>
            <value>The order form class.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.MetaClassNames.LineItemClass">
            <summary>
            Gets the line item class.
            </summary>
            <value>The line item class.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.MetaClassNames.ShipmentClass">
            <summary>
            Gets the shipment class.
            </summary>
            <value>The shipment class.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.MetaClassNames.OrderAddressClass">
            <summary>
            Gets the order address class.
            </summary>
            <value>The order address class.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderConfiguration.PurchaseOrderMetaClass">
            <summary>
            Purchase order meta class configuration.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderConfiguration.PurchaseOrderMetaClass.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderConfiguration.PurchaseOrderMetaClass"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.PurchaseOrderMetaClass.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderConfiguration.PaymentPlanMetaClass">
            <summary>
            Payment plan meta class configuration element.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderConfiguration.PaymentPlanMetaClass.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderConfiguration.PaymentPlanMetaClass"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.PaymentPlanMetaClass.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderConfiguration.ShoppingCartMetaClass">
            <summary>
            Shopping cart meta class configuration element.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderConfiguration.ShoppingCartMetaClass.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderConfiguration.ShoppingCartMetaClass"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.ShoppingCartMetaClass.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderConfiguration.OrderFormMetaClass">
            <summary>
            Order Form meta class configuration element.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderConfiguration.OrderFormMetaClass.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderConfiguration.OrderFormMetaClass"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.OrderFormMetaClass.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderConfiguration.LineItemMetaClass">
            <summary>
            Line Item meta class configuration element.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderConfiguration.LineItemMetaClass.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderConfiguration.LineItemMetaClass"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.LineItemMetaClass.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderConfiguration.ShipmentMetaClass">
            <summary>
            Shipment meta class configuration element.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderConfiguration.ShipmentMetaClass.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderConfiguration.ShipmentMetaClass"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.ShipmentMetaClass.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderConfiguration.OrderAddressMetaClass">
            <summary>
            Order Address meta class configuration element.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderConfiguration.OrderAddressMetaClass.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderConfiguration.OrderAddressMetaClass"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.OrderAddressMetaClass.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.MappedTypes">
            <summary>
            Gets the mapping of order-related entities to actual implementation classes.
            </summary>
            <value>The mapped types.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.Connections">
            <summary>
            OrderConnection defines the database connection name
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderConfiguration.ConfigureMetaData">
            <summary>
            Configures the meta data.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.Cache">
            <summary>
            Config settings which define where caching is enabled and timeouts related to it.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderConfiguration.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Configuration.ConfigurationElement"></see> object is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Configuration.ConfigurationElement"></see> object is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.Roles">
            <summary>
            Configuration element defines the mapping of mapped types to type names specified
            in configuration file
            </summary>
            <value>The mapped types.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderConfiguration.GetRole(System.String)">
            <summary>
            Returns class names mapped to the event key (name)
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConfiguration.ShipmentAutoReleaseTimeout">
            <summary>
            Gets or sets the shipment auto release timeout.
            </summary>
            <value>The shipment auto release timeout.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderConnection">
            <summary>
            Order Connection Element
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderConnection"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConnection.ConfigurationConnectionStringName">
            <summary>
            Gets or sets the name of the configuration connection string.
            </summary>
            <value>The name of the configuration connection string.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConnection.ConfigurationAppDatabase">
            <summary>
            Uses ConnectionStringName property to retrieve connection string from
            ConnectionStrings portion of app/web.config file
            </summary>
            <value>The configuration app database.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConnection.TransactionConnectionStringName">
            <summary>
            Gets or sets the name of the transaction connection string.
            </summary>
            <value>The name of the transaction connection string.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderConnection.TransactionAppDatabase">
            <summary>
            Uses ConnectionStringName property to retrieve connection string from
            ConnectionStrings portion of app/web.config file
            </summary>
            <value>The transaction app database.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderConnection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.MappedTypes">
            <summary>
            Represents the mapped order types. (Inherits <see cref="T:System.Configuration.ConfigurationElement"/>.)
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.MappedTypes.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.MappedTypes"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.MappedTypes.ShoppingCartType">
            <summary>
            Gets the type of the shopping cart.
            </summary>
            <value>The type of the shopping cart.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.MappedTypes.PurchaseOrderType">
            <summary>
            Gets the type of the purchase order.
            </summary>
            <value>The type of the purchase order.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.MappedTypes.OrderFormType">
            <summary>
            Gets the type of the order form.
            </summary>
            <value>The type of the order form.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.MappedTypes.PaymentPlanType">
            <summary>
            Gets the type of the payment plan.
            </summary>
            <value>The type of the payment plan.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.MappedTypes.LineItemType">
            <summary>
            Gets the type of the line item.
            </summary>
            <value>The type of the line item.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.MappedTypes.OrderGroupAddressType">
            <summary>
            Gets the type of the order group address.
            </summary>
            <value>The type of the order group address.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.MappedTypes.ShipmentType">
            <summary>
            Gets the type of the shipment.
            </summary>
            <value>The type of the shipment.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.MappedTypes.OrderSearchType">
            <summary>
            Gets the type of the order search.
            </summary>
            <value>The type of the order search.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.ShoppingCartType">
            <summary>
            Represents the shopping cart type. (Inherits <see cref="T:System.Configuration.ConfigurationElement"/>.)
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ShoppingCartType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.ShoppingCartType"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.ShoppingCartType.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.PurchaseOrderType">
            <summary>
            Represents the purchase order type. (Inherits <see cref="T:System.Configuration.ConfigurationElement"/>.)
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrderType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.PurchaseOrderType"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PurchaseOrderType.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderFormType">
            <summary>
            Represents the order form type. (Inherits <see cref="T:System.Configuration.ConfigurationElement"/>.)
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderFormType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderFormType"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderFormType.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.PaymentPlanType">
            <summary>
            Represents the payment plan type. (Inherits <see cref="T:System.Configuration.ConfigurationElement"/>.)
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentPlanType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.PaymentPlanType"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentPlanType.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.LineItemType">
            <summary>
            Represents the line item type. (Inherits <see cref="T:System.Configuration.ConfigurationElement"/>.)
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.LineItemType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.LineItemType"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.LineItemType.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderGroupAddressType">
            <summary>
            Represents the order group address type. (Inherits <see cref="T:System.Configuration.ConfigurationElement"/>.)
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroupAddressType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderGroupAddressType"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroupAddressType.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.ShipmentType">
            <summary>
            Shipment Type configuration element.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ShipmentType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.ShipmentType"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.ShipmentType.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderSearchType">
            <summary>
            Represents the order group search type.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderSearchType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderSearchType"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderSearchType.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.RoleCollection">
            <summary>
            Collection of RoleDefinition objects
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.RoleCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Mediachase.Commerce.Security.Configuration.RoleDefinitionElement"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.RoleCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.RoleCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.RoleDefinition">
            <summary>
            Definition of single role element in web.config file
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.RoleDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.RoleDefinition"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.RoleDefinition.Name">
            <summary>
            Gets the system name (the predefined key for the role type).
            </summary>
            <value>The system name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.RoleDefinition.Value">
            <summary>
            Gets the configured role name.
            </summary>
            <value>The configured role name.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderRoles">
            <summary>
            Order Roles
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderRoles.OrderSupervisorRole">
            <summary>
            Gets the order supervisor role.
            </summary>
            <value>The order supervisor role.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderRoles.OrderManagerRole">
            <summary>
            Gets the order manager role.
            </summary>
            <value>The order manager role.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderRoles.ShippingManagerRole">
            <summary>
            Gets the shiping manager role.
            </summary>
            <value>The shiping manager role.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderRoles.ReceivingManagerRole">
            <summary>
            Gets the receiving manager role.
            </summary>
            <value>The receiving manager role.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.CacheConfiguration">
            <summary>
            Config settings which define where caching is enabled and timeouts related to it.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.CacheConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.CacheConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.CacheConfiguration.IsEnabled">
            <summary>
            Attribute determines whether in-memory caching is enabled or not.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.CacheConfiguration.ShippingCollectionTimeout">
            <summary>
            Gets or sets the shipping collection timeout.
            </summary>
            <value>The shipping collection timeout.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.CacheConfiguration.PaymentCollectionTimeout">
            <summary>
            Gets or sets the payment collection timeout.
            </summary>
            <value>The payment collection timeout.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.CacheConfiguration.StatusCollectionTimeout">
            <summary>
            Gets or sets the status collection timeout.
            </summary>
            <value>The status collection timeout.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.CacheConfiguration.CountryCollectionTimeout">
            <summary>
            Gets or sets the country collection timeout.
            </summary>
            <value>The country collection timeout.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.CacheConfiguration.TaxCollectionTimeout">
            <summary>
            Gets or sets the tax collection timeout.
            </summary>
            <value>The tax collection timeout.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.CacheConfiguration.JurisdictionCollectionTimeout">
            <summary>
            Gets or sets the jurisdiction collection timeout.
            </summary>
            <value>The jurisdiction collection timeout.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.CacheConfiguration.PickListCollectionTimeout">
            <summary>
            Gets or sets the pick list collection timeout.
            </summary>
            <value>The pick list collection timeout.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.CacheConfiguration.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderContext">
            <summary>
            The Order Context class is used to access all the functions of the Order System.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.Current">
            <summary>
            Gets the current context.
            </summary>
            <value>The current.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.MetaDataContext">
            <summary>
            Gets or sets the meta data context.
            </summary>
            <value>The meta data context.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.TrackingNumberPattern">
            <summary>
            Gets or sets the pattern for tracking number.
            By default, only numbers and characters are allowed.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.RaiseOrderGroupUpdatedEvent(EPiServer.Commerce.Order.IOrderGroup,Mediachase.Commerce.Orders.OrderGroupEventArgs)">
            <summary>
            Raises the order group updated event.
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="eventArgs">The <see cref="T:Mediachase.Commerce.Orders.OrderGroupEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.RaiseOrderGroupDeletedEvent(EPiServer.Commerce.Order.IOrderGroup,Mediachase.Commerce.Orders.OrderGroupEventArgs)">
            <summary>
            Raises the order group deleted event.
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="eventArgs">The <see cref="T:Mediachase.Commerce.Orders.OrderGroupEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Mediachase.Commerce.Orders.OrderContext.OrderGroupUpdated">
            <summary>
            Occurs when [order group updated].
            </summary>
        </member>
        <member name="E:Mediachase.Commerce.Orders.OrderContext.OrderGroupDeleted">
            <summary>
            Occurs when [order group deleted].
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.ExecutionManager">
            <summary>
            Gets the ActivityFlow execution manager.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.GetTaxes(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets the taxes.
            </summary>
            <param name="siteId">The site id.</param>
            <param name="taxCategory">The tax category.</param>
            <param name="languageCode">The language code.</param>
            <param name="countryCode">The country code.</param>
            <param name="stateProvinceCode">The state province code.</param>
            <param name="zipPostalCode">The zip postal code.</param>
            <param name="district">The district.</param>
            <param name="county">The county.</param>
            <param name="city">The city.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.GetTaxes(System.Guid,System.String,System.String,EPiServer.Commerce.Order.IOrderAddress)">
            <summary>
            Gets the taxes.
            </summary>
            <param name="siteId">The site identifier.</param>
            <param name="taxCategory">The tax category.</param>
            <param name="languageCode">The language code.</param>
            <param name="orderAddress">The order address.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.GetCart(System.String,System.Guid)">
            <summary>
            Returns the cart by name and customer id in current market. If non found creates a new cart.
            </summary>
            <param name="name">The name.</param>
            <param name="customerId">The customer id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.GetCart(System.String,System.Guid,Mediachase.Commerce.MarketId)">
            <summary>
            Returns the cart by name and customer id in a specific market. If non found creates a new cart.
            </summary>
            <param name="name">The name.</param>
            <param name="customerId">The customer id.</param>
            <param name="marketId">The market id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.GetCart(System.Int32)">
            <summary>
            Returns the cart by customer id and order group id.
            </summary>
            <param name="orderGroupId">The order group id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.FindCarts(Mediachase.Commerce.Orders.Search.OrderSearchParameters,Mediachase.Commerce.Orders.Search.OrderSearchOptions)">
            <summary>
            Finds the carts.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="options">The options.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.FindCarts(Mediachase.Commerce.Orders.Search.OrderSearchParameters,Mediachase.Commerce.Orders.Search.OrderSearchOptions,System.Int32@)">
            <summary>
            Finds the carts.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="options">The options.</param>
            <param name="totalRecords">The total records.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.GetPurchaseOrderById(System.Int32)">
            <summary>
            Gets the purchase order by id.
            </summary>
            <param name="orderGroupId">The order group id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.GetPurchaseOrders(System.Guid)">
            <summary>
            Gets the purchase orders.
            </summary>
            <param name="customerId">The customer id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.GetMostRecentPurchaseOrder(System.Guid)">
            <summary>
             Gets the most recent purchase order.
             </summary>
             <param name="customerId">The customer id.</param>
             <returns>The most recent purchase order</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.GetPurchaseOrder(System.String)">
            <summary>
            Gets the purchase order by tracking number.
            </summary>
            <param name="trackingNumber">The tracking number.</param>
            <returns>The first matching purchase order. Null if no order found.</returns>
            <remarks>trackingNumber will be validated against <see cref="P:Mediachase.Commerce.Orders.OrderContext.TrackingNumberPattern"/>.
            If it is not valid, null will be returned.
            You can change <see cref="P:Mediachase.Commerce.Orders.OrderContext.TrackingNumberPattern"/> to be more strict, or more relax.
            However, a relaxed pattern should only be used with care.</remarks>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.GetPurchaseOrder(System.Int32)">
            <summary>
            Gets the purchase order.
            </summary>
            <param name="orderGroupId">The order group id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.FindPurchaseOrders(Mediachase.Commerce.Orders.Search.OrderSearchParameters,Mediachase.Commerce.Orders.Search.OrderSearchOptions)">
            <summary>
            Finds the purchase orders.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="options">The options.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.FindPurchaseOrders(Mediachase.Commerce.Orders.Search.OrderSearchParameters,Mediachase.Commerce.Orders.Search.OrderSearchOptions,System.Int32@)">
            <summary>
            Finds the purchase orders.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="options">The options.</param>
            <param name="totalRecords">The total records.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.FindPurchaseOrdersByStatus(Mediachase.Commerce.Orders.OrderStatus[])">
            <summary>
            Finds purchase orders with given statuses.
            </summary>
            <param name="statuses">One or more order statuses to search for.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.FindActiveOrders">
            <summary>
            Finds purchase orders with InProgress or PartiallyShipped status.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.GetPaymentPlans(System.Guid)">
            <summary>
            Gets the payment plans.
            </summary>
            <param name="customerId">The customer id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.GetPaymentPlan(System.Int32)">
            <summary>
            Gets the payment plan.
            </summary>
            <param name="orderGroupId">The order group id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.FindPaymentPlans(Mediachase.Commerce.Orders.Search.OrderSearchParameters,Mediachase.Commerce.Orders.Search.OrderSearchOptions)">
            <summary>
            Finds the payment plans.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="options">The options.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.FindPaymentPlans(Mediachase.Commerce.Orders.Search.OrderSearchParameters,Mediachase.Commerce.Orders.Search.OrderSearchOptions,System.Int32@)">
            <summary>
            Finds the payment plans.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="options">The options.</param>
            <param name="totalRecords">The total records.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.Get``1(System.Int32)">
            <summary>
            Loads a specific <see cref="T:Mediachase.Commerce.Orders.OrderGroup"/> of specified type.
            </summary>
            <typeparam name="T">The real type.</typeparam>
            <param name="orderGroupId">The order group id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.LoadByCustomerIdInternal``1(System.Guid)">
            <summary>
            Searches for order groups made for a specific customer.
            </summary>
            <param name="customerId">The customer id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.LoadByCustomerId``1(System.Guid)">
            <summary>
            Searches for order groups made for a specific customer.
            </summary>
            <param name="customerId">The customer id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.SearchInternal``1(Mediachase.Commerce.Orders.Search.OrderSearch)">
            <summary>
            Searches for order groups.
            </summary>
            <param name="search">The search.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.Search``1(Mediachase.Commerce.Orders.Search.OrderSearchParameters,Mediachase.Commerce.Orders.Search.OrderSearchOptions)">
            <summary>
            Searches for order groups of specified type.
            </summary>
            <param name="parameters">The search parameter.</param>
            <param name="options">The search options.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.Search``1(Mediachase.Commerce.Orders.Search.OrderSearchParameters,Mediachase.Commerce.Orders.Search.OrderSearchOptions,System.Int32@)">
            <summary>
            Searches for order groups of specified type.
            </summary>
            <param name="parameters">The search parameter.</param>
            <param name="options">The search options.</param>
            <param name="totalRecords">The total records.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.Search``1(Mediachase.Commerce.Orders.Search.OrderSearch,System.Int32@)">
            <summary>
            Searches for order groups.
            </summary>
            <param name="search">The search.</param>
            <param name="totalRecords">The total records.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.Serialize(System.Xml.XmlTextWriter,Mediachase.Commerce.Orders.OrderGroup)">
            <summary>
            Serializes the specified writer.
            </summary>
            <param name="writer">The writer.</param>
            <param name="orderGroup">The order group.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.Deserialize(System.Xml.XmlNode,System.Type)">
            <summary>
            Deserializes the specified node.
            </summary>
            <param name="node">The node.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.PurchaseOrderMetaClass">
            <summary>
            Gets the purchase order meta class.
            </summary>
            <value>The purchase order meta class.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.ShoppingCartMetaClass">
            <summary>
            Gets the shopping cart meta class.
            </summary>
            <value>The shopping cart meta class.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.OrderGroupMetaClass">
            <summary>
            Gets the order group meta class.
            </summary>
            <value>
            The order group meta class.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.OrderFormMetaClass">
            <summary>
            Gets the order form meta class.
            </summary>
            <value>The order form meta class.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.OrderItemMetaClass">
            <summary>
            Gets the order item meta class.
            </summary>
            <value>The order item meta class.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.PaymentPlanMetaClass">
            <summary>
            Gets the payment plan meta class.
            </summary>
            <value>The payment plan meta class.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.LineItemMetaClass">
            <summary>
            Gets the line item meta class.
            </summary>
            <value>The line item meta class.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.ShipmentMetaClass">
            <summary>
            Gets the shipment meta class.
            </summary>
            <value>The shipment meta class.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.OrderAddressMetaClass">
            <summary>
            Gets the order address meta class.
            </summary>
            <value>The order address meta class.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.CreditCardPaymentMetaClass">
            <summary>
            Gets the credit card payment meta class.
            </summary>
            <value>
            The credit card payment meta class.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.CashCardPaymentMetaClass">
            <summary>
            Gets the cash card payment meta class.
            </summary>
            <value>
            The cash card payment meta class.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.ExchangePaymentMetaClass">
            <summary>
            Gets the exchange payment meta class.
            </summary>
            <value>
            The exchange payment meta class.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.GiftCardPaymentMetaClass">
            <summary>
            Gets the gift card payment meta class.
            </summary>
            <value>
            The gift card payment meta class.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.InvoicePaymentMetaClass">
            <summary>
            Gets the invoice payment meta class.
            </summary>
            <value>
            The invoice payment meta class.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.OtherPaymentMetaClass">
            <summary>
            Gets the other payment meta class.
            </summary>
            <value>
            The other payment meta class.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.ShoppingCartClassInfo">
            <summary>
            Gets the shopping cart class info.
            </summary>
            <value>The shopping cart class info.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.PurchaseOrderClassInfo">
            <summary>
            Gets the purchase order class info.
            </summary>
            <value>The purchase order class info.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.OrderFormClassInfo">
            <summary>
            Gets the order form class info.
            </summary>
            <value>The order form class info.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.PaymentPlanClassInfo">
            <summary>
            Gets the payment plan class info.
            </summary>
            <value>The payment plan class info.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.OrderAddressClassInfo">
            <summary>
            Gets the order address class info.
            </summary>
            <value>The order address class info.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.ShipmentClassInfo">
            <summary>
            Gets the shipment class info.
            </summary>
            <value>The shipment class info.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.LineItemClassInfo">
            <summary>
            Gets the line item class info.
            </summary>
            <value>The line item class info.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderContext.OrderSearchClassInfo">
            <summary>
            Gets the order search class info.
            </summary>
            <value>The order search class info.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderContext"/> class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderDataHelper">
            <summary>
            Helper class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderDataHelper.CreateConfigDataCommand">
            <summary>
            Creates the config data command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderDataHelper.CreateTranDataCommand">
            <summary>
            Creates the tran data command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.ReturnType">
            <summary>
            Struct containing constants used by the order form.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.ReturnType.Refund">
            <summary>
            Refund order.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.ReturnType.Exchange">
            <summary>
            Exchange order,
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderForm">
            <summary>
            Contains the order information.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.Shipments">
            <summary>
            Gets the shipments.
            </summary>
            <value>The shipments.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.Payments">
            <summary>
            Gets the payments.
            </summary>
            <value>The payments.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.LineItems">
            <summary>
            Gets the line items.
            </summary>
            <value>The line items.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.Discounts">
            <summary>
            Gets the discounts.
            </summary>
            <value>The discounts.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.EPiServer#Commerce#Order#IOrderForm#ParentOrderGroup">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.EPiServer#Commerce#Order#IOrderForm#Promotions">
            <summary>
            Gets the promotions that have been applied this order form.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.EPiServer#Commerce#Order#IOrderForm#Shipments">
            <summary>
            Gets the shipments on the order form.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.EPiServer#Commerce#Order#IOrderForm#CouponCodes">
            <summary>
            Gets the supplied coupon codes.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.DefaultName">
            <summary>
            Gets the default name for the order form.
            </summary>
            <value>default name for the order form.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.ReturnName">
            <summary>
            Gets the name of the return.
            </summary>
            <value>The name of the return.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.Parent">
            <summary>
            Gets the parent Order Group.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.ReturnComment">
            <summary>
            Gets or sets the rma comment.
            </summary>
            <value>The rma comment.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.ReturnType">
            <summary>
            Gets or sets the Return Type. For example can be "Refund", "Exchange" etc.
            </summary>
            <value>The type of the Rma request.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.ReturnAuthCode">
            <summary>
            Gets or sets the RMA auth code. Using for procedure RMA authentication.
            </summary>
            <value>The rma auth code.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.OrigOrderFormId">
            <summary>
            Gets or sets the Parent OrderForm identity for RMA request
            </summary>
            <value>The orig order form id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.ExchangeOrderGroupId">
            <summary>
            Gets or sets the  related this RMA request Exchange order identity 
            </summary>
            <value>The exchange order group id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.OrderFormId">
            <summary>
            Gets the order form id.
            </summary>
            <value>The order form id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.OrderGroupId">
            <summary>
            Gets the order group id.
            </summary>
            <value>The order group id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.BillingAddressId">
            <summary>
            Gets or sets the billing address id. The id is the name of the address in OrderAddress collection.
            </summary>
            <value>The billing address id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.ShippingTotal">
            <summary>
            Gets or sets the shipping total, does not includes discounts that have been applied to each shipment.
            </summary>
            <value>The shipping total.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.HandlingTotal">
            <summary>
            Gets or sets the handling total.
            </summary>
            <value>The handling total.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.TaxTotal">
            <summary>
            Gets or sets the tax total.
            </summary>
            <value>The tax total.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.DiscountAmount">
            <summary>
            Gets or sets the discount amount. This amount includes shipping discounts as well.
            </summary>
            <value>The discount amount.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.SubTotal">
            <summary>
            Gets or sets the sub total.
            </summary>
            <value>The sub total.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.Total">
            <summary>
            Gets or sets the total.
            </summary>
            <value>The total.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.ProviderId">
            <summary>
            Gets or sets the provider id.
            </summary>
            <value>The provider id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.RMANumber">
            <summary>
            Gets or sets the RMA number.
            </summary>
            <value>The RMA number.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.AuthorizedPaymentTotal">
            <summary>
            Gets or sets the authorized payment total.
            </summary>
            <value>The authorized payment total.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.CapturedPaymentTotal">
            <summary>
            Gets or sets the captured payment total.
            </summary>
            <value>The captured payment total.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.PricesIncludeTax">
            <summary>
            Gets the setting of including tax in price from the order group.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.EPiServer#Commerce#Storage#IExtendedProperties#Properties">
            <summary>
            Gets the property bag for dealing with custom meta fields.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderForm.EPiServer#Commerce#Order#IReturnOrderForm#Status">
            <summary>
            Gets or sets the <see cref="T:EPiServer.Commerce.Order.IReturnOrderForm"/> status.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderForm"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.#ctor(System.Data.IDataReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderForm"/> class.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.InitializeMetaFields">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.IsReturnOrderForm(Mediachase.Commerce.Orders.OrderForm)">
            <summary>
            Determines whether OrderForm is Return order form
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.SetParent(System.Object)">
            <summary>
            Sets the parent order group.
            </summary>
            <param name="parentGroup">The parent group.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.MarkNew">
            <summary>
            Marks current instance as new which will cause new record to be created in the database for the specified object.
            This is useful for creating duplicates of existing objects.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.Delete">
            <summary>
            Deletes this instance.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.PopulateCollectionsInternal(System.Data.DataTableCollection,System.String)">
            <summary>
            Populates the collections internal.
            </summary>
            <param name="tables">The tables.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.PopulateCollections(System.Data.DataTableCollection,System.String)">
            <summary>
            Populates collections within table. The tables used will be removed from
            the table collection.
            Override this method to populate your custom collection objects.
            </summary>
            <param name="tables">The tables.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.LoadLineItems(System.Data.DataTableCollection,System.String)">
            <summary>
            Fill line items collection. 
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.LoadPayments(System.Data.DataTableCollection,System.String)">
            <summary>
            Loads the payments from the returned dataset and adds them to the payments collection.
            </summary>
            <param name="tables">The tables.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.LoadPayment(System.Data.DataView)">
            <summary>
            Loads the payment from the reader object and adds it to the payments collection.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.LoadPayment(System.Data.DataRow[])">
            <summary>
            Loads the payment from the reader object and adds it to the payments collection.
            </summary>
            <param name="rows">The rows.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderForm"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.ReadXml(System.Xml.XmlReader)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.WriteXml(System.Xml.XmlWriter)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.ResetShipments">
            <summary>
            Resets the <see cref="P:EPiServer.Commerce.Order.IOrderForm.Shipments"/> collection.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.ResetPayments">
            <summary>
            Resets the <see cref="P:EPiServer.Commerce.Order.IOrderForm.Payments"/> collection.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.SaveOrderAddress(EPiServer.Commerce.Order.IOrderAddress)">
            <summary>
                Saves an order address to the order address collection.
            </summary>
            <param name="orderAddress">The order address to save.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderForm.DeepCloneImplementation">
            <summary>
            Extends base implementation with deep cloning of <see cref="P:EPiServer.Commerce.Order.IOrderForm.CouponCodes"/>,
            <see cref="P:Mediachase.Commerce.Orders.OrderForm.LineItems"/>, <see cref="P:Mediachase.Commerce.Orders.OrderForm.Payments"/>, <see cref="P:EPiServer.Commerce.Order.IOrderForm.Promotions"/>
            and <see cref="P:Mediachase.Commerce.Orders.OrderForm.Shipments"/>.
            </summary>
            <returns>A new object that is a deep copy of the current instance.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderFormCollection">
            <summary>
            Collection of order forms.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderFormCollection.Parent">
            <summary>
            Gets the parent order group.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderFormCollection.#ctor(Mediachase.Commerce.Orders.OrderGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderFormCollection"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderFormCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderFormCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderFormCollection.Add(Mediachase.Commerce.Orders.OrderForm)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderFormCollection.AddNew">
            <summary>
            Adds a new OrderForm to the collection and assigns it unique OrderFormId
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderFormCollection.SetParent(Mediachase.Commerce.Orders.OrderGroup)">
            <summary>
            Sets the parent.
            </summary>
            <param name="orderGroup">The order group.</param>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderFormCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Mediachase.Commerce.Orders.OrderForm"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderFormDiscount">
            <summary>
            Order form discount class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderFormDiscount.Parent">
            <summary>
            Gets the parent OrderForm.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderFormDiscount.SetParent(Mediachase.Commerce.Orders.OrderForm)">
            <summary>
            Sets the parent OrderForm.
            </summary>
            <param name="orderForm">The order form.</param>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderFormDiscount.OrderFormDiscountId">
            <summary>
            Gets or sets the order form discount id.
            </summary>
            <value>The order form discount id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderFormDiscount.OrderFormId">
            <summary>
            Gets or sets the order form id.
            </summary>
            <value>The order form id.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderFormDiscount.CreateParameters(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Creates the parameters.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderFormDiscount.OnSaved(Mediachase.Data.Provider.DataResult)">
            <summary>
            Called when [saved].
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderFormDiscount.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderFormDiscount.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderFormDiscount"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderFormDiscount.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderFormDiscount"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderFormDiscount.MarkNew">
            <summary>
            Marks current instance as new which will cause new record to be created in the database for the specified object.
            This is useful for creating duplicates of existing objects.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderFormDiscountCollection">
            <summary>
            Collection of Order Forms.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderFormDiscountCollection.Parent">
            <summary>
            Gets the parent OrderForm.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderFormDiscountCollection.#ctor(Mediachase.Commerce.Orders.OrderForm)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderFormDiscountCollection"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderFormDiscountCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderFormDiscountCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderFormDiscountCollection.Add(Mediachase.Commerce.Orders.OrderFormDiscount)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderFormDiscountCollection.SetParent(Mediachase.Commerce.Orders.OrderForm)">
            <summary>
            Sets the parent Order Form.
            </summary>
            <param name="orderForm">The order form.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderGroup">
            <summary>
            Order group contains multiple order forms.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.OrderForms">
            <summary>
            Gets the order forms.
            </summary>
            <value>The order forms.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.OrderAddresses">
            <summary>
            Gets the order addresses.
            </summary>
            <value>The order addresses.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.OrderNotes">
            <summary>
            Gets or sets the order notes.
            </summary>
            <value>The order notes.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.OrderGroupId">
            <summary>
            Gets the order group id.
            </summary>
            <value>The order group id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.InstanceId">
            <summary>
            Gets or sets the instance id.
            </summary>
            <value>The instance id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.AffiliateId">
            <summary>
            Gets or sets the affiliate id.
            </summary>
            <value>The affiliate id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.CustomerId">
            <summary>
            Gets or sets the customer id.
            </summary>
            <value>The customer id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.CustomerName">
            <summary>
            Gets or sets the name of the customer.
            </summary>
            <value>The name of the customer.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.AddressId">
            <summary>
            Gets or sets the address id.
            </summary>
            <value>The address id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.ShippingTotal">
            <summary>
            Gets or sets the shipping total.
            </summary>
            <value>The shipping total.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.HandlingTotal">
            <summary>
            Gets or sets the handling total.
            </summary>
            <value>The handling total.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.TaxTotal">
            <summary>
            Gets or sets the tax total.
            </summary>
            <value>The tax total.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.SubTotal">
            <summary>
            Gets or sets the sub total.
            </summary>
            <value>The sub total.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.Total">
            <summary>
            Gets or sets the total.
            </summary>
            <value>The total.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.BillingCurrency">
            <summary>
            Gets or sets the billing currency.
            </summary>
            <value>The billing currency.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.ProviderId">
            <summary>
            Gets or sets the provider id.
            </summary>
            <value>The provider id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.OwnerOrg">
            <summary>
            Gets or sets the owner org.
            </summary>
            <value>The owner org.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.SiteId">
            <summary>
            Gets or sets the site id.
            </summary>
            <value>The site id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.MarketId">
            <summary>
            Gets or sets the market id.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.#ctor(System.Guid,Mediachase.MetaDataPlus.Configurator.MetaClass,System.Data.IDataReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderGroup"/> class.
            </summary>
            <param name="CustomerId">The customer id.</param>
            <param name="metaClass">The meta class.</param>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.#ctor(Mediachase.MetaDataPlus.Configurator.MetaClass,System.Data.IDataReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderGroup"/> class.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.#ctor(System.Guid,Mediachase.MetaDataPlus.Configurator.MetaClass)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderGroup"/> class.
            </summary>
            <param name="CustomerId">The customer id.</param>
            <param name="metaClass">The meta class.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderGroup"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.#ctor(Mediachase.MetaDataPlus.Configurator.MetaClass,System.Func{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Mediachase.Commerce.Orders.OrderGroup"/> class from being created.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.Initialize(System.Guid)">
            <summary>
            Initializes the specified customer id.
            </summary>
            <param name="customerId">The customer id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.Initialize(Mediachase.Commerce.Orders.OrderGroup)">
            <summary>
            Initializes the object with data from the specified order group.
            </summary>
            <param name="orderGroup">The order group.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.PopulateCollection``1(Mediachase.Commerce.ClassInfo,Mediachase.Commerce.Storage.MetaStorageCollectionBase{``0},System.Data.DataSet)">
            <summary>
            Populates the collection.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="classInfo">The class info.</param>
            <param name="collection">The collection.</param>
            <param name="dataSet">The data set.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.PopulateCollections(System.Data.DataTableCollection,System.String)">
            <summary>
            Populates collections within table. The tables used will be removed from
            the table collection.
            Override this method to populate your custom collection objects.
            </summary>
            <param name="tables">The tables.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.CheckForLocked">
            <summary>
            Checks for lock.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.SetParent(System.Object)">
            <summary>
            Sets the parent.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.MarkNew">
            <summary>
            Marks current instance as new which will cause new record to be created in the database for the specified object.
            This is useful for creating duplicates of existing objects.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.Delete">
            <summary>
            Deletes this instance.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.RunWorkflow(System.String)">
            <summary>
            Runs the specified workflow, exception will be thrown and should be handled by the caller. The execution will be synchronious.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.RunWorkflow(System.String,System.Boolean)">
            <summary>
            Runs the specified workflow.
            </summary>
            <param name="name">The name.</param>
            <param name="throwException">if set to <c>true</c> the exception will be thrown and should be handled by the caller.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.RunWorkflow(System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Runs the specified workflow.
            </summary>
            <param name="name">The name.</param>
            <param name="throwException">if set to <c>true</c> the exception will be thrown and should be handled by the caller.</param>
            <param name="param">The additional input parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.DeepCloneImplementation">
            <summary>
            Extends base implementation with deep cloning of <see cref="P:Mediachase.Commerce.Orders.OrderGroup.OrderAddresses"/>,
            <see cref="P:Mediachase.Commerce.Orders.OrderGroup.OrderForms"/>, and <see cref="P:Mediachase.Commerce.Orders.OrderGroup.OrderNotes"/>.
            </summary>
            <returns>A new object that is a deep copy of the current instance.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.ReadXml(System.Xml.XmlReader)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.WriteXml(System.Xml.XmlWriter)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroup.CanEdit(System.Int32,System.Guid)">
            <summary>
            Returns true, if user with id=<paramref name="userId"/> user can edit order with the specified order
            </summary>
            <param name="orderGroupId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.EPiServer#Commerce#Order#IOrderGroup#Forms">
            <summary>
            Gets the order forms.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.EPiServer#Commerce#Order#IOrderGroup#Notes">
            <summary>
            Gets the order notes.
            </summary>
            <value>The order notes.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.EPiServer#Commerce#Order#IOrderGroup#OrderLink">
            <summary>
            Gets a link to the order connected to this order group, if one exists.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.EPiServer#Commerce#Order#IOrderGroup#Market">
            <summary>
            Gets or sets the market.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.EPiServer#Commerce#Order#IOrderGroup#Currency">
            <summary>
            Gets or sets the currency used in the order.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.EPiServer#Commerce#Order#IOrderGroup#Organization">
            <summary>
            Gets or sets the organization.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.EPiServer#Commerce#Order#IOrderGroup#OrderStatus">
            <summary>
            Gets or sets the order status.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.EPiServer#Commerce#Storage#IExtendedProperties#Properties">
            <summary>
            Gets the property bag for dealing with custom meta fields.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.EPiServer#Commerce#Order#IOrderGroup#Created">
            <summary>
            Gets the created date.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.EPiServer#Commerce#Order#IOrderGroup#Modified">
            <summary>
            Gets the modified date.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.EPiServer#Commerce#Order#Internal#IOrderGroupCalculatedAmount#IsTaxTotalUpToDate">
            <summary>
            Gets or sets the flag indicating whether the <see cref="P:EPiServer.Commerce.Order.Internal.IOrderGroupCalculatedAmount.TaxTotal"/> is up-to-date.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroup.EPiServer#Commerce#Order#Internal#IOrderGroupCalculatedAmount#TaxTotal">
            <summary>
            Gets or sets the tax total.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderGroupEventArgs">
            <summary>
            Order Group event arguments
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderGroupEventArgs.#ctor(System.Int32,Mediachase.Commerce.Orders.OrderGroupEventType)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderGroupEventArgs"/> class.
            </summary>
            <param name="orderGroupId">The order group identifier.</param>
            <param name="orderGroupType">Type of the order group.</param>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroupEventArgs.OrderGroupId">
            <summary>
            Gets the order identifier.
            </summary>
            <value>
            The order identifier.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderGroupEventArgs.OrderGroupType">
            <summary>
            Gets the type of the order group.
            </summary>
            <value>
            The type of the order group.
            </value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderGroupEventType">
            <summary>
            Represents different types of OrderGroup
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.OrderGroupEventType.Cart">
            <summary>
            The cart
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.OrderGroupEventType.PurchaseOrder">
            <summary>
            The purchase order
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.OrderGroupEventType.PaymentPlan">
            <summary>
            The payment plan
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderNote">
            <summary>
            Represents a note on an order.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderNote.OrderGroupId">
            <summary>
            Gets or sets the order note ID.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderNote.OrderNoteId">
            <summary>
            Gets or sets the order note ID.  Set is available for backwards compatibility only.
            </summary>        
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderNote.Created">
            <summary>
            Gets or sets the created date.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderNote.CustomerId">
            <summary>
            Gets or sets the customer id.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderNote.Detail">
            <summary>
            Gets or sets the detail.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderNote.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderNote.Type">
            <summary>
            Gets or sets the note type.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderNote.LineItemId">
            <summary>
            Gets or sets the lineitem .
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderNote.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of the current instance.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderNoteCollection">
            <summary>
            Represents a collection of order notes.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderNoteCollection.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderNoteCollection.#ctor(Mediachase.Commerce.Orders.OrderGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderNoteCollection"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderNoteCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderNoteCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderNoteCollection.AddNew">
            <summary>
            Adds the new.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderNoteCollection.SetOriginalOrderNotes">
            <summary>
            Set the _original value by current order notes items.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderOptions">
            <summary>
            Contains options for the order system.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderOptions.UseCache">
            <summary>
             Indicates if the cache is enabled.
            </summary>
            <remarks>Default value is true.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderOptions.IsOrderRepositoryCacheDisabled">
            <summary>
             Indicates if the order repository cache is disabled.
            </summary>
            <remarks>Default value is false.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderOptions.JurisdictionCacheExpiration">
            <summary>
             The expiration time for jurisdictions.
            </summary>
            <remarks>Default value is 1 hour.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderOptions.TaxCacheExpiration">
            <summary>
             The expiration time for taxes.
            </summary>
            <remarks>Default value is 1 hour.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderOptions.CountryCacheExpiration">
            <summary>
             The expiration time for countries.
            </summary>
            <remarks>Default value is 1 hour.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderOptions.PaymentCacheExpiration">
            <summary>
             The expiration time for payments.
            </summary>
            <remarks>Default value is 24 hours.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderOptions.ShippingCacheExpiration">
            <summary>
             The expiration time for shipping.
            </summary>
            <remarks>Default value is 24 hours.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderOptions.StatusCacheExpiration">
            <summary>
             The expiration time for status. 
            </summary>
            <remarks>Default value is 10 seconds.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderOptions.PickListCacheExpiration">
            <summary>
             The expiration time for pick lists.
            </summary>
            <remarks>Default value is 20 seconds.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderOptions.OrderCacheExpirationLegacy">
            <summary>
             The expiration time for legacy ordergroups.
            </summary>
            <remarks>Default value is 10 minutes.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderOptions.OrderCacheExpiration">
            <summary>
             The expiration time for ordergroups.
            </summary>
            <remarks>Default value is 10 minutes.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderOptions.UserOrderCacheExpiration">
            <summary>
             The expiration time for user order.
            </summary>
            <remarks>Default value is 5 minutes.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderOptions.DisableOrderDataLocalization">
            <summary>
            A flag to indicate if we disable the order data localization.
            </summary>
            <remarks>Default value is false.</remarks>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderResources.OrderSystem">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderShipmentStatus">
            <summary>
            Represents possible statuses of a shipment.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderShipmentStatus.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Mediachase.Commerce.Orders.OrderStatus"/>.
            </summary>
            <param name="value"></param>
            <param name="name"></param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderShipmentStatus.ToString">
            <summary>
            Converts this status to a string.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderShipmentStatus.Name">
            <summary>
            Gets name of the status.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderShipmentStatus.Id">
            <summary>
            Gets id of the status
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderShipmentStatus.TryParse(System.String,Mediachase.Commerce.Orders.OrderShipmentStatus@)">
            <summary>
            Tries to parse a name to a known <see cref="T:Mediachase.Commerce.Orders.OrderShipmentStatus"/>
            </summary>
            <param name="status">The name to parse.</param>
            <param name="orderStatus">The known status.</param>
            <returns>True if parsed successfully, false otherwise.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderShipmentStatus.TryParse(System.Int32,Mediachase.Commerce.Orders.OrderShipmentStatus@)">
            <summary>
            Tries to parse a value to a known <see cref="T:Mediachase.Commerce.Orders.OrderShipmentStatus"/>
            </summary>
            <param name="status">The value to parse.</param>
            <param name="orderStatus">The known status.</param>
            <returns>True if parsed successfully, false otherwise.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderShipmentStatus.RegisterStatus(Mediachase.Commerce.Orders.OrderShipmentStatus)">
            <summary>
            Registers a new order status.
            </summary>
            <param name="status"></param>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderShipmentStatus.RegisteredStatuses">
            <summary>
            Registered order shipment statuses.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderShipmentStatus.Equals(Mediachase.Commerce.Orders.OrderShipmentStatus)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderShipmentStatus.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderShipmentStatus.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderShipmentStatusExtensions.IsReleaseable(Mediachase.Commerce.Orders.OrderShipmentStatus)">
            <summary>
            Checks if a shipment with this status can be released.
            </summary>
            <returns>True if that shipment can be released. Otherwise, false.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderShipmentStatusExtensions.IsCancellable(Mediachase.Commerce.Orders.OrderShipmentStatus)">
            <summary>
            Checks if a shipment with this status can be cancelled.
            </summary>
            <returns>True if that shipment can be cancelled. Otherwise, false.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderShipmentStatusExtensions.IsEditable(Mediachase.Commerce.Orders.OrderShipmentStatus)">
            <summary>
            Checks if a shipment with this status can be edited.
            </summary>
            <returns>True if that shipment can be edited. Otherwise, false.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderShipmentStatusExtensions.IsAddressEditable(Mediachase.Commerce.Orders.OrderShipmentStatus)">
            <summary>
            Checks if the shipping address of a shipment with this status can be edited.
            </summary>
            <returns>True if that address can be edited. Otherwise, false.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderShipmentStatusService.IsReleaseable(Mediachase.Commerce.Orders.OrderShipmentStatus)">
            <summary>
            Checks if a shipment with this status can be released.
            </summary>
            <returns>True if that shipment can be released. Otherwise, false.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderShipmentStatusService.IsCancellable(Mediachase.Commerce.Orders.OrderShipmentStatus)">
            <summary>
            Checks if a shipment with this status can be cancelled.
            </summary>
            <returns>True if that shipment can be cancelled. Otherwise, false.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderShipmentStatusService.IsEditable(Mediachase.Commerce.Orders.OrderShipmentStatus)">
            <summary>
            Checks if a shipment with this status can be edited.
            </summary>
            <returns>True if that shipment can be edited. Otherwise, false.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderShipmentStatusService.IsAddressEditable(Mediachase.Commerce.Orders.OrderShipmentStatus)">
            <summary>
            Checks if the shipping address of a shipment with this status can be edited.
            </summary>
            <returns>True if that address can be edited. Otherwise, false.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrdersPermissions">
            <summary>
            Permissions for Order subsytem
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.View">
            <summary>
            Gets the view permission.
            </summary>
            <value>
            The order view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.Create">
            <summary>
            Gets the create permission.
            </summary>
            <value>
            The order create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.Edit">
            <summary>
            Gets the edit permission.
            </summary>
            <value>
            The order edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.Delete">
            <summary>
            Gets the delete permission.
            </summary>
            <value>
            The order delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.Notify">
            <summary>
            Gets the notify permission.
            </summary>
            <value>
            The order notify PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.Payments">
            <summary>
            Gets the Payments permission.
            </summary>
            <value>
            The order payments PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.SplitShipments">
            <summary>
            Gets the SplitShipments permission.
            </summary>
            <value>
            The order split shipments PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.DiscretionaryCreditPayment">
            <summary>
            Gets the DiscretionaryCreditPayment permission.
            </summary>
            <value>
            The order discretionary credit payment PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.Discount">
            <summary>
            Gets the Discount permission.
            </summary>
            <value>
            The order discount PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ChangePrice">
            <summary>
            Gets the ChangePrice permission.
            </summary>
            <value>
            The order change price PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ReturnCreate">
            <summary>
            Gets the ReturnCreate permission.
            </summary>
            <value>
            The order return create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ReturnCreateExchange">
            <summary>
            Gets the ReturnCreateExchange permission.
            </summary>
            <value>
            The order return create exchange PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ReturnReceiving">
            <summary>
            Gets the ReturnReceiving permission.
            </summary>
            <value>
            The order return receiving PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ShipmentPackaging">
            <summary>
            Gets the ShipmentPackaging permission.
            </summary>
            <value>
            The order shipment packaging PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ShipmentComplete">
            <summary>
            Gets the ShipmentComplete permission.
            </summary>
            <value>
            The order shipment complete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.MetaClassView">
            <summary>
            Gets the MetaClassView permission.
            </summary>
            <value>
            The order meta class view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.MetaClassDelete">
            <summary>
            Gets the MetaClassDelete permission.
            </summary>
            <value>
            The order meta class delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.MetaClassCreate">
            <summary>
            Gets the MetaClassCreate permission.
            </summary>
            <value>
            The order meta class create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.MetaClassEdit">
            <summary>
            Gets the MetaClassEdit permission.
            </summary>
            <value>
            The order meta class edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.MetaFieldView">
            <summary>
            Gets the MetaFieldView permission.
            </summary>
            <value>
            The order meta field view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.MetaFieldDelete">
            <summary>
            Gets the MetaFieldDelete permission.
            </summary>
            <value>
            The order meta field delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.MetaFieldCreate">
            <summary>
            Gets the MetaFieldCreate permission.
            </summary>
            <value>
            The order meta field create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.MetaFieldEdit">
            <summary>
            Gets the MetaFieldEdit permission.
            </summary>
            <value>
            The order meta field edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ViewPayments">
            <summary>
            Gets the ViewPayments permission.
            </summary>
            <value>
            The order view payments PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ViewPaymentsDelete">
            <summary>
            Gets the ViewPaymentsDelete permission.
            </summary>
            <value>
            The order view payments delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ViewPaymentsCreate">
            <summary>
            Gets the ViewPaymentsCreate permission.
            </summary>
            <value>
            The order view payments create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ViewPaymentsEdit">
            <summary>
            Gets the ViewPaymentsEdit permission.
            </summary>
            <value>
            The order view payments edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ShippingJurView">
            <summary>
            Gets the ShippingJurView permission.
            </summary>
            <value>
            The order shipping jurisdiction PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ShippingJurDelete">
            <summary>
            Gets the ShippingJurDelete permission.
            </summary>
            <value>
            The order shipping jurisdiction PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ShippingJurCreate">
            <summary>
            Gets the ShippingJurCreate permission.
            </summary>
            <value>
            The order shipping jurisdiction create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ShippingJurEdit">
            <summary>
            Gets the ShippingJurEdit permission.
            </summary>
            <value>
            The order shipping jurisdiction edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ShippingProvView">
            <summary>
            Gets the ShippingProvView permission.
            </summary>
            <value>
            The order shipping provider view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ShippingProvDelete">
            <summary>
            Gets the ShippingProvDelete permission.
            </summary>
            <value>
            The order shipping provider delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ShippingProvCreate">
            <summary>
            Gets the ShippingProvCreate permission.
            </summary>
            <value>
            The order shipping provider create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ShippingProvEdit">
            <summary>
            Gets the ShippingProvEdit permission.
            </summary>
            <value>
            The order shipping provider edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ShippingPckgView">
            <summary>
            Gets the ShippingPckgView permission.
            </summary>
            <value>
            The order shipping package view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ShippingPckgDelete">
            <summary>
            Gets the ShippingPckgDelete permission.
            </summary>
            <value>
            The order shipping package delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ShippingPckgCreate">
            <summary>
            Gets the ShippingPckgCreate permission.
            </summary>
            <value>
            The order shipping package create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ShippingPckgEdit">
            <summary>
            Gets the ShippingPckgEdit permission.
            </summary>
            <value>
            The order shipping package edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ShippingMethodsView">
            <summary>
            Gets the ShippingMethodsView permission.
            </summary>
            <value>
            The order shipping methods view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ShippingMethodsDelete">
            <summary>
            Gets the ShippingMethodsDelete permission.
            </summary>
            <value>
            The order shipping methods delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ShippingMethodsCreate">
            <summary>
            Gets the ShippingMethodsCreate permission.
            </summary>
            <value>
            The order shipping methods create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.ShippingMethodsEdit">
            <summary>
            Gets the ShippingMethodsEdit permission.
            </summary>
            <value>
            The order shipping methods edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.TaxesView">
            <summary>
            Gets the TaxesView permission.
            </summary>
            <value>
            The order taxes view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.TaxesDelete">
            <summary>
            Gets the TaxesDelete permission.
            </summary>
            <value>
            The order taxes delete PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.TaxesCreate">
            <summary>
            Gets the TaxesCreate permission.
            </summary>
            <value>
            The order taxes create PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.TaxesEdit">
            <summary>
            Gets the TaxesEdit permission.
            </summary>
            <value>
            The order taxes edit PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.TaxesImport">
            <summary>
            Gets the TaxesImport permission.
            </summary>
            <value>
            The order taxes import PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrdersPermissions.TabView">
            <summary>
            Gets the TabView permission.
            </summary>
            <value>
            The order taxes import PermissionType.
            </value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderStatus">
            <summary>
            Represents possible statuses of an order.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderStatus.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Mediachase.Commerce.Orders.OrderStatus"/>.
            </summary>
            <param name="value"></param>
            <param name="name"></param>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderStatus.Name">
            <summary>
            Gets the name of the status.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderStatus.Id">
            <summary>
            Gets the value of the status.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderStatus.TryParse(System.String,Mediachase.Commerce.Orders.OrderStatus@)">
            <summary>
            Tries to parse a name to a known <see cref="T:Mediachase.Commerce.Orders.OrderStatus"/>
            </summary>
            <param name="status">The name to parse.</param>
            <param name="orderStatus">The known status.</param>
            <returns>True if parsed successfully, false otherwise.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderStatus.TryParse(System.Int32,Mediachase.Commerce.Orders.OrderStatus@)">
            <summary>
            Tries to parse a name to a known <see cref="T:Mediachase.Commerce.Orders.OrderShipmentStatus"/>
            </summary>
            <param name="status">The name to parse.</param>
            <param name="orderStatus">The known status.</param>
            <returns>True if parsed successfully, false otherwise.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderStatus.RegisterStatus(Mediachase.Commerce.Orders.OrderStatus)">
            <summary>
            Registers a new order status.
            </summary>
            <param name="status"></param>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OrderStatus.RegisteredStatuses">
            <summary>
            Registered statuses.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderStatus.Equals(Mediachase.Commerce.Orders.OrderStatus)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderStatus.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderStatus.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderStatusExtensions">
            <summary>
            Extension methods for <see cref="T:Mediachase.Commerce.Orders.OrderStatus"/>.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderStatusExtensions.IsHoldable(Mediachase.Commerce.Orders.OrderStatus)">
            <summary>
            Checks if an order this status can be put on hold.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderStatusExtensions.IsCancellable(Mediachase.Commerce.Orders.OrderStatus)">
            <summary>
            Checks if an order with this status can be cancelled.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderStatusService">
            <summary>
            Handles 
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderStatusService.IsHoldable(Mediachase.Commerce.Orders.OrderStatus)">
            <summary>
            Checks if an order this status can be put on hold.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderStatusService.IsCancellable(Mediachase.Commerce.Orders.OrderStatus)">
            <summary>
            Checks if an order with this status can be cancelled.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OrderStorageBase">
            <summary>
            Implements operations for the order storage base. (Inherits <see cref="T:Mediachase.Commerce.Storage.MetaStorageBase"/>, <see cref="T:System.Runtime.Serialization.ISerializable"/>.)
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderStorageBase.#ctor(Mediachase.MetaDataPlus.Configurator.MetaClass,System.Data.IDataReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Storage.MetaStorageBase"/> class.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderStorageBase.#ctor(Mediachase.MetaDataPlus.Configurator.MetaClass)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Storage.MetaStorageBase"/> class.
            </summary>
            <param name="metaClass">The meta class.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderStorageBase.#ctor(Mediachase.MetaDataPlus.Configurator.MetaClass,System.Func{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderStorageBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OrderStorageBase"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderStorageBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderStorageBase.AcceptChanges(System.Boolean)">
            <summary>
            Accepts the changes.
            </summary>
            <param name="saveSystem">if set to <c>true</c> [save system].</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OrderStorageBase.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.OtherPayment">
            <summary>
            Represents Other type of payment.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.OtherPayment.OtherPaymentMetaClass">
            <summary>
            Gets the invoice payment meta class.
            </summary>
            <value>The invoice payment meta class.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OtherPayment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OtherPayment"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.OtherPayment.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.OtherPayment"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Payment">
            <summary>
            Base class for Payments, every payment accepted by the order system should be inherited from this class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Payment.Parent">
            <summary>
            Gets the parent OrderForm payment belongs to.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Payment.#ctor(Mediachase.MetaDataPlus.Configurator.MetaClass)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.Payment" /> class.
            </summary>
            <param name="metaClass">The meta class.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Payment.#ctor(Mediachase.MetaDataPlus.Configurator.MetaClass,System.Func{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.Payment.GetTypeName(System.Type)">
            <summary>
            Gets the type name including assembly name but no version information.
            </summary>
            <param name="type">The type.</param>
            <returns>The type name on the format 'Namespace.TypeName,AssemblyName'.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Payment.SetParent(System.Object)">
            <summary>
            Sets the parent.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Payment.PaymentId">
            <summary>
            Gets the payment id.
            </summary>
            <value>The payment id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Payment.OrderFormId">
            <summary>
            Gets or sets the order form id.
            </summary>
            <value>The order form id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Payment.OrderGroupId">
            <summary>
            Gets or sets the order group id.
            </summary>
            <value>The order group id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Payment.BillingAddressId">
            <summary>
            Gets or sets the billing address id.
            </summary>
            <value>The billing address id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Payment.PaymentMethodId">
            <summary>
            Gets or sets the payment method id.
            </summary>
            <value>The payment method id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Payment.PaymentMethodName">
            <summary>
            Gets or sets the name of the payment method.
            </summary>
            <value>The name of the payment method.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Payment.CustomerName">
            <summary>
            Gets or sets the name of the customer.
            </summary>
            <value>The name of the customer.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Payment.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
            <value>The amount.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Payment.PaymentType">
            <summary>
            Gets or sets the type of the payment. Types are CreditCard, CashCard, Invoice, GiftCard, Other
            </summary>
            <value>The type of the payment.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Payment.ValidationCode">
            <summary>
            Gets or sets the validation code.
            </summary>
            <value>The validation code.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Payment.AuthorizationCode">
            <summary>
            Gets or sets the authorization code.
            </summary>
            <value>The authorization code.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Payment.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Payment.ImplementationClass">
            <summary>
            Gets or sets the implementation class.
            </summary>
            <value>The implementation class.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Payment.TransactionType">
            <summary>
            Gets or sets the type of the transaction.
            </summary>
            <value>The type of the transaction. Mapped to TransactionType enumeration.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Payment.TransactionID">
            <summary>
            Gets or sets the transaction ID.
            </summary>
            <value>The transaction ID.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Payment.ProviderTransactionID">
            <summary>
            Gets or sets the transaction ID which is returned from Payment Provider.
            </summary>
            <value>The transaction ID.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Payment.EPiServer#Commerce#Storage#IExtendedProperties#Properties">
            <summary>
            Gets the property bag for dealing with custom meta fields.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Payment.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Payment.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.Payment"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Payment.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Payment.WriteXml(System.Xml.XmlWriter)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.Payment.Delete">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.Orders.PaymentCollection">
            <summary>
            Collection of payments.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentCollection.Parent">
            <summary>
            Gets the parent OrderForm.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentCollection.#ctor(Mediachase.Commerce.Orders.OrderForm)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.PaymentCollection"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.PaymentCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentCollection.Add(Mediachase.Commerce.Orders.Payment)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentCollection.SetParent(Mediachase.Commerce.Orders.OrderForm)">
            <summary>
            Sets the parent Order Form.
            </summary>
            <param name="form">The form.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentCollection.AddNew(System.Type)">
            <summary>
            Adds the new Payment.
            </summary>
            <param name="paymentType">Type of the payment.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.PaymentConverter">
            <summary>
            Converts asbtract Payment to implementatopm
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentConverter.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:Newtonsoft.Json.JsonConverter" /> can write JSON.
            </summary>
            <value>
            <c>true</c> if this <see cref="T:Newtonsoft.Json.JsonConverter" /> can write JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.PaymentMethod">
            <summary>
            This is a wrapper class for the PaymentMethodDto.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentMethod.#ctor(Mediachase.Commerce.Orders.Dto.PaymentMethodDto.PaymentMethodRow)">
            <summary>
            The constructor.  Please note that this is the default:  since this is a wrapper class, the only way to instantiate
            it is to provide a PaymentMethodDto as an input.
            </summary>
            <param name="paymentMethodRow"></param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentMethod.SaveChanges">
            <summary>
            Save the changes back into the database.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentMethod.SetPaymentParameters(Mediachase.Commerce.Orders.Dto.PaymentMethodDto.PaymentMethodRow)">
            <summary>
            Called from the constructor.  This goes through each entry in the PaymentMethodParameters table and inserts the values into
            a list.
            </summary>
            <param name="paymentMethodRow"></param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentMethod.SetShippingPaymentRestrictions(Mediachase.Commerce.Orders.Dto.PaymentMethodDto.PaymentMethodRow)">
            <summary>
            Called from the constructor.  This goes through each entry in the ShippingPaymentRestrictions table and inserts the values into
            a list.
            </summary>
            <param name="paymentMethodRow"></param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentMethod.SetMarketIds(Mediachase.Commerce.Orders.Dto.PaymentMethodDto.PaymentMethodRow)">
            <summary>
            Called from the construcctor.  This goes through each entry in the MarketPaymentMethods table and inserts the values into
            a list.
            </summary>
            <param name="paymentMethodRow"></param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentMethod.SavePaymentParameters(Mediachase.Commerce.Orders.Dto.PaymentMethodDto)">
            <summary>
            Called from the public SaveChanges() method.  This performs several steps:
            1.  It deletes anything from the DTO that is not in the PaymentMethodParameters list.
            2.  It adds any new entries in the PaymentMethodParameters list.
            Note:  we do not save the PaymentMethodId from the PaymentMethodParameter object.  We instead use the read-only value from the current instance of this class
            This is to ensure that even if the user has modified it, the Parameter remains tied to the current Payment Method.
            </summary>
            <param name="paymentMethodDto"></param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentMethod.SaveShippingRestrictions(Mediachase.Commerce.Orders.Dto.PaymentMethodDto)">
            <summary>
            Called from the public SaveChanges() method.  This performs several steps:
            1.  It deletes anything from the DTO that is not in the SaveShippingRestrictions list.
            2.  It adds any new entries in the SaveShippingRestrictions list.
            Note:  we do not save the PaymentMethodId from the MarketId object.  We instead use the read-only value from the current instance of this class
            This is to ensure that even if the user has modified it, the MarketId remains tied to the current Payment Method.
            </summary>
            <param name="paymentMethodDto"></param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentMethod.SaveMarketIds(Mediachase.Commerce.Orders.Dto.PaymentMethodDto)">
            <summary>
            Called from the public SaveChanges() method.  This performs several steps:
            1.  It deletes anything from the DTO that is not in the MarketId list.
            2.  It adds any new entries in the MarketId list.
            </summary>
            <param name="paymentMethodDto"></param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.PaymentMethodParameter">
            <summary>
            A very basic class to store the data from the PaymentMethodParameter table.  Mainly used with the PaymentMethod class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.PaymentPlanCycle">
            <summary>
            Payment plan cycles.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.PaymentPlanCycle.None">
            <summary>
            Unknown Plan Cycle
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.PaymentPlanCycle.Days">
            <summary>
            Daily Cycle
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.PaymentPlanCycle.Weeks">
            <summary>
            Weekly Cycle
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.PaymentPlanCycle.Months">
            <summary>
            Monthly Cycle
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.PaymentPlanCycle.Years">
            <summary>
            Yearly Cycle
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.PaymentPlanCycle.Custom1">
            <summary>
            Custom1 Cycle, use your own time frame.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.PaymentPlanCycle.Custom2">
            <summary>
            Custom2 Cycle, use your own time frame.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.PaymentPlan">
            <summary>
            Payment Plan is a type of order that will be a recurring order.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.PaymentPlan.CreateOrderNumber">
            <summary>
            Delegate for generating custom order tracking number. Please look at OrderNumberMethod property for details on how it works.
            </summary>
            <param name="cart"></param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentPlan.OrderNumberMethod">
            <summary>
            Gets or sets the order number method that is used to generate the tracking PO sequence. If none set, the framework will use
            built in function GenerateOrderNumber:
            
            this.OrderNumberMethod = new CreateOrderNumber(GenerateOrderNumber);
            
            private string GenerateOrderNumber(Cart cart)
            {
                string num = new Random().Next(100, 999).ToString();
                return String.Format("PO{0}{1}", cart.OrderGroupId, num);
            }
            </summary>
            <value>The order number method.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentPlan.CycleMode">
            <summary>
            Gets or sets the cycle mode. Cycle modes available are days, weeks, months and years as well as None, Custom1 and Custom2.
            </summary>
            <value>The cycle mode.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentPlan.CycleLength">
            <summary>
            Gets or sets the length of the cycle. For example to charge customer monthly, set this value
            to 1 and CycleMode to Months.
            </summary>
            <value>The length of the cycle.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentPlan.MaxCyclesCount">
            <summary>
            Gets or sets the max cycles count. So for instance if you want to charge customer for a year each month,
            set CycleMode to month, CycleLength to 1 and MaxCyclesCount to 12.
            Leave at 0 if you never want this cycle to end.
            </summary>
            <value>The max cycles count.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentPlan.CompletedCyclesCount">
            <summary>
            Gets or sets the completed cycles count. This property will be auto increased on each new generated sale.
            </summary>
            <value>The completed cycles count.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentPlan.StartDate">
            <summary>
            Gets or sets the start date for first payment.
            </summary>
            <value>The start date.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentPlan.EndDate">
            <summary>
            Gets or sets the stop date for the last payment.
            </summary>
            <value>The stop date.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentPlan.LastTransactionDate">
            <summary>
            Gets or sets the last transaction date.
            </summary>
            <value>The last transaction date.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentPlan.IsActive">
            <summary>
            Gets or sets a value indicating whether this Payment Plan is active.
            </summary>
            <value><c>true</c> if this plan is active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentPlan.IsDue">
            <summary>
            Returns true if payment plan payment is due
            </summary>
            <value><c>true</c> if this instance is due; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentPlan.NextTransactionDate">
            <summary>
            Returns the date of the next transaction.
            </summary>
            <value>The next transaction date. In UTC Format.</value>
            <remarks>
            Gets the Date for the next transaction based on the type of
            Payment Plan
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentPlan.#ctor(System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.PaymentPlan"/> class.
            </summary>
            <param name="Name">The name.</param>
            <param name="CustomerId">The customer id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentPlan.#ctor(System.Data.IDataReader)">
            <summary>
            Internal constructor required by collection implementation.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentPlan.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.PaymentPlan"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentPlan.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.PaymentPlan"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentPlan.Initialize">
            <summary>
            Initializes this instance with default values.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentPlan.LoadByOrderGroupId(System.Int32)">
            <summary>
            Loads the by order group identifier.
            </summary>
            <param name="orderGroupId">The order group identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentPlan.LoadByCustomer(System.Guid)">
            <summary>
            Loads the Payment Plan by customer.
            </summary>
            <param name="customerId">The customer id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentPlan.PopulateFromCart(Mediachase.Commerce.Orders.Cart)">
            <summary>
            Populates from cart.
            </summary>
            <param name="cart">The cart.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentPlan.Search(Mediachase.Commerce.Orders.Search.OrderSearch,System.Int32@)">
            <summary>
            Searches for payment plan.
            </summary>
            <param name="search">The search.</param>
            <param name="totalRecords">The total records.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentPlan.SaveAsPurchaseOrder">
            <summary>
            Saves as purchase order. This method should be called when recurring payment is processed. So for instance if it is a monthly plan,
            call this method on monthly basis.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentPlan.GenerateOrderNumber(Mediachase.Commerce.Orders.PaymentPlan)">
            <summary>
            Generates the order number.
            </summary>
            <param name="plan">The plan.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentPlan.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentPlan.Mediachase#Commerce#Orders#Internal#IDeepCloneable#DeepClone">
            <summary>
            Creates a limited deep clone of this object.
            </summary>
            <returns>A deep clone of this object.</returns>
            <remarks>
            Some reference type properties will NOT be cloned by this method - the original and the clone will share the same instance of:
            <list type="bullet">
            <item><see cref="P:Mediachase.Commerce.Orders.OrderForm.Discounts"/></item>
            <item><see cref="P:Mediachase.Commerce.Orders.Shipment.Discounts"/></item>
            <item><see cref="P:Mediachase.Commerce.Orders.LineItem.Discounts"/></item>
            <item><see cref="P:Mediachase.MetaDataPlus.MetaObject.MetaClass"/></item>
            </list>
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PaymentPlan.WriteXml(System.Xml.XmlWriter)">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentPlan.EPiServer#Commerce#Order#IPaymentPlan#CycleMode">
            <summary>
            Gets or sets the cycle mode. Cycle modes available are days, weeks, months and years as well as None, Custom1 and Custom2.
            </summary>
            <value>The cycle mode.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentPlan.EPiServer#Commerce#Order#IPaymentPlan#CycleLength">
            <summary>
            Gets or sets the length of the cycle. For example to charge customer monthly, set this value
            to 1 and CycleMode to Months.
            </summary>
            <value> The length of the cycle.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentPlan.EPiServer#Commerce#Order#IPaymentPlan#MaxCyclesCount">
            <summary>
            Gets or sets the max cycles count. So for instance if you want to charge customer for a year each month,
            set CycleMode to month, CycleLength to 1 and MaxCyclesCount to 12.
            Leave at 0 if you never want this cycle to end.
            </summary>
            <value>The max cycles count.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentPlan.EPiServer#Commerce#Order#IPaymentPlan#CompletedCyclesCount">
            <summary>
            Gets or sets the completed cycles count. This property will be auto increased on each new generated sale.
            </summary>
            <value>The completed cycles count.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentPlan.EPiServer#Commerce#Order#IPaymentPlan#StartDate">
            <summary>
            Gets or sets the start date for first payment.
            </summary>
            <value>The start date.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentPlan.EPiServer#Commerce#Order#IPaymentPlan#EndDate">
            <summary>
            Gets or sets the stop date for the last payment.
            </summary>
            <value>The stop date.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentPlan.EPiServer#Commerce#Order#IPaymentPlan#LastTransactionDate">
            <summary>
            Gets or sets the last transaction date.
            </summary>
            <value>The last transaction date.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PaymentPlan.EPiServer#Commerce#Order#IPaymentPlan#IsActive">
            <summary>
            Gets or sets a value indicating whether this Payment Plan is active.
            </summary>
            <value><c>true</c> if this plan is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.PaymentType">
            <summary>
            Defines the general categories of payment types supported by the Order System
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.PaymentType.CreditCard">
            <summary>
            Typical credit card payment.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.PaymentType.CashCard">
            <summary>
            Cash card is a company issued card for making purchases.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.PaymentType.Invoice">
            <summary>
            Typically business to business payment type.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.PaymentType.GiftCard">
            <summary>
            Gift card issued by the store.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.PaymentType.Other">
            <summary>
            Custom implementation.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.PaymentType.Exchange">
            <summary>
            Exchange payment
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.PurchaseOrder">
            <summary>
            Purchase Order is the actual recorded sale.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.#ctor(System.Guid,System.Data.IDataReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.PurchaseOrder"/> class.
            </summary>
            <param name="customerId">The customer id.</param>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.PurchaseOrder"/> class.
            </summary>
            <param name="customerId">The customer id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.#ctor(System.Data.IDataReader)">
            <summary>
            Internal constructor required by collection implementation.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.PurchaseOrder"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.PurchaseOrder"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.Initialize(System.Boolean)">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PurchaseOrder.ParentOrderGroupId">
            <summary>
            Gets or sets the parent order group id. This can be used to relate purchase orders to a payment plan or other order.
            </summary>
            <value>The parent order group instance id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PurchaseOrder.TrackingNumber">
            <summary>
            Gets or sets the tracking number. Automatically generated or can be generated using provided function.
            </summary>
            <value>The tracking number.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PurchaseOrder.ExpirationDate">
            <summary>
            Gets or sets the expiration date. Expiration date can be used for subscription type of orders.
            </summary>
            <value>The expiration date.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PurchaseOrder.ReturnOrderForms">
            <summary>
            Gets the rma request list.
            </summary>
            <value>The rma request list.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.LoadByOrderGroupId(System.Int32)">
            <summary>
            Loads the by order group identifier.
            </summary>
            <param name="orderGroupId">The order group identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.GetMostRecentPurchaseOrder(System.Guid)">
            <summary>
            Loads the purchase order by customer.
            </summary>
            <param name="customerId">The customer id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.LoadByCustomer(System.Guid)">
            <summary>
            Loads the purchase order by customer.
            </summary>
            <param name="customerId">The customer id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.Search(Mediachase.Commerce.Orders.Search.OrderSearch,System.Int32@)">
            <summary>
            Searches for Purchase Order.
            </summary>
            <param name="search">The search.</param>
            <param name="totalRecords">The total records.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.PopulateFromCart(Mediachase.Commerce.Orders.Cart)">
            <summary>
            Populates from cart.
            </summary>
            <param name="cart">The cart.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.MoveLineItemToShipment(System.Int32,Mediachase.Commerce.Orders.Shipment,Mediachase.Commerce.Orders.Shipment,System.Decimal)">
            <summary>
            Moves the line item to shipment.
            </summary>
            <param name="lineItemId">The line item id.</param>
            <param name="srcShipment">The SRC shipment.</param>
            <param name="dstShipment">The DST shipment.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.AddLineItemToShipment(System.Int32,Mediachase.Commerce.Orders.Shipment,System.Decimal)">
            <summary>
            Adds the line item to shipment.
            </summary>
            <param name="lineItemId">The line item id.</param>
            <param name="shipment">The shipment.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.AddLineItemToFirstShipmentInOrder(System.Int32,System.Decimal)">
            <summary>
            Adds the line item to first shipment in order.
            </summary>
            <param name="lineItemId">The line item id.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.AddLineItemToShipmentDetectedByLineItemShipmentInfo(System.Int32,System.Decimal)">
            <summary>
            Adds the line item to shipment detected by line item shipment info.
            </summary>
            <param name="lineItemId">The line item id.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.RemoveLineItemFromOrder(System.Int32)">
            <summary>
            Removes the line item from order.
            </summary>
            <param name="lineItemId">The line item id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.RemoveLineItemFromShipment(System.Int32,Mediachase.Commerce.Orders.Shipment,System.Decimal)">
            <summary>
            Removes the line item from shipment.
            </summary>
            <param name="lineItemId">The line item id.</param>
            <param name="shipment">The shipment.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.UpdateShipmentLineItemQuantity(System.Int32,Mediachase.Commerce.Orders.Shipment,System.Decimal)">
            <summary>
            Updates the shipment line item quantity.
            </summary>
            <param name="lineItemId">The line item id.</param>
            <param name="shipment">The shipment.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.PopulateCollections(System.Data.DataTableCollection,System.String)">
            <summary>
            Loads RMA requests
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.LoadReturnOrderForms(System.Data.DataTableCollection,System.String)">
            <summary>
            Fill rma self line items collection. 
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.Mediachase#Commerce#Orders#Internal#IDeepCloneable#DeepClone">
            <summary>
            Creates a limited deep clone of this object.
            </summary>
            <returns>A deep clone of this object.</returns>
            <remarks>
            Some reference type properties will NOT be cloned by this method - the original and the clone will share the same instance of:
            <list type="bullet">
            <item><see cref="P:Mediachase.Commerce.Orders.OrderForm.Discounts"/></item>
            <item><see cref="P:Mediachase.Commerce.Orders.Shipment.Discounts"/></item>
            <item><see cref="P:Mediachase.Commerce.Orders.LineItem.Discounts"/></item>
            <item><see cref="P:Mediachase.MetaDataPlus.MetaObject.MetaClass"/></item>
            </list>
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.DeepCloneImplementation">
            <summary>
            Extends base implementation with deep cloning of <see cref="P:Mediachase.Commerce.Orders.PurchaseOrder.ReturnOrderForms"/>.
            </summary>
            <returns>A new object that is a deep copy of the current instance.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.ReadXml(System.Xml.XmlReader)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.PurchaseOrder.WriteXml(System.Xml.XmlWriter)">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Orders.PurchaseOrder.EPiServer#Commerce#Order#IPurchaseOrder#OrderNumber">
            <summary>
            Gets or sets the order number.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PurchaseOrder.EPiServer#Commerce#Order#IPurchaseOrder#ExpirationDate">
            <summary>
            Gets or sets the expiration date. Expiration date can be used for subscription type of orders
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.PurchaseOrder.EPiServer#Commerce#Order#IPurchaseOrder#ReturnForms">
            <summary>
            Gets the return forms.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Search.OrderSearch">
            <summary>
            Order Search object. Contains information about search parameters.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Search.OrderSearch.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.Search.OrderSearch"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Search.OrderSearch.SearchOptions">
            <summary>
            Gets or sets the search options.
            </summary>
            <value>The search options.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Search.OrderSearch.SearchParameters">
            <summary>
            Gets or sets the search parameters.
            </summary>
            <value>The search parameters.</value>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Search.OrderSearchOptions">
            <summary>
            Search Options.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Search.OrderSearchOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.Search.OrderSearchOptions"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Search.OrderSearchOptions.#ctor(Mediachase.Commerce.Orders.Search.OrderSearchOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.Search.OrderSearchOptions"/> class.
            </summary>
            <param name="searchOptions">The search options.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Search.OrderSearchParameters">
            <summary>
            Order Search Parameters
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.Shipment">
            <summary>
            Shipment contains information about the particular shipment. Line Items will reference the shipment object they belong to.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.Shipment"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.Discounts">
            <summary>
            Gets the discounts.
            </summary>
            <value>The discounts.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.Parent">
            <summary>
            Gets the parent Order Form.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.ShipmentId">
            <summary>
            Gets the shipment id.
            </summary>
            <value>The shipment id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.OrderGroupId">
            <summary>
            Gets or sets the order group id.
            </summary>
            <value>The order group id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.OrderFormId">
            <summary>
            Gets or sets the order form id.
            </summary>
            <value>The order form id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.ShippingMethodId">
            <summary>
            Gets or sets the shipping method id.
            </summary>
            <value>The shipping method id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.ShippingMethodName">
            <summary>
            Gets or sets the name of the shipping method.
            </summary>
            <value>The name of the shipping method.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.ShippingTax">
            <summary>
            Gets or sets the shipping tax.
            </summary>
            <value>The shipping tax.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.ShippingAddressId">
            <summary>
            Gets or sets the shipping address name.
            </summary>
            <value>The shipping address id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.ShipmentTrackingNumber">
            <summary>
            Gets or sets the shipment tracking number.
            </summary>
            <value>The shipment tracking number.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.ShippingDiscountAmount">
            <summary>
            Gets or sets the shipping discount amount.
            </summary>
            <value>The shipping discount amount.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.ShippingTotal">
            <summary>
            Gets the total shipping cost, including shipping discounts (if any) and shipping tax (if prices excludes tax).
            </summary>
            <value>The shipping total.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.PrevStatus">
            <summary>
            Gets or sets the previous status
            </summary>
            <value>The state of the prev.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.PickListId">
            <summary>
            Gets the pick list id.
            </summary>
            <value>The pick list id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.SubTotal">
            <summary>
            Gets or sets the sub total.
            </summary>
            <value>The sub total.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.WarehouseCode">
            <summary>
            Gets or sets the warehouse code
            </summary>
            <value>The warehouse code.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.OperationKeysMap">
            <summary>
            Gets the mapping between line item index and operation keys
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.OperationKeys">
            <summary>
            Gets the inventory operation keys map.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.ContainsOperationKeyFor(EPiServer.Commerce.Order.ILineItem)">
            <summary>
            Verifies inventory operation keys map with a line item.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.GetOperationKeys(EPiServer.Commerce.Order.ILineItem)">
            <summary>
            Gets inventory operation keys by line item.
            </summary>
            <param name="lineItem">The line item.</param>
            <returns>A collection of operation keys corresponded with the line item, empty list if no key found.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.AddOperationKeys(EPiServer.Commerce.Order.ILineItem,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds the inventory operation keys map.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="operationKeys">A collection of operation keys.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.InsertOperationKeys(EPiServer.Commerce.Order.ILineItem,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Inserts inventory operation keys map with a line item.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="operationKeys">The collection of operation keys.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.RemoveOperationKey(EPiServer.Commerce.Order.ILineItem,System.String)">
            <summary>
            Removes an inventory operation key map with a line item.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="operationKey">The operation key.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.AddInventoryOperationKey(System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds the inventory operation key mapping.
            </summary>
            <param name="lineItemIndex">The line item index.</param>
            <param name="operationKeys">The collection of operation keys.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.GetInventoryOperationKey(System.Int32)">
            <summary>
            Gets operation keys by line item index.
            </summary>
            <param name="lineItemIndex">The line item index</param>
            <returns>A collection of operation keys corresponded with the line item index, empty list if no key found.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.ClearOperationKeys">
            <summary>
            Clears all inventory operation keys map.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.RemoveOperationKey(System.Int32,System.String)">
            <summary>
            Removes an operation key mapping with a line item index.
            </summary>
            <param name="lineItemIndex">The line item index.</param>
            <param name="operationKey">The operation key.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.InsertOperationKeys(System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Inserts operation keys mapping with a line item index.
            </summary>
            <param name="lineItemIndex">The line item index.</param>
            <param name="operationKeys">The collection of operation keys.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.UpdateOperationKeys">
            <summary>
            Updates the OperationKeys value from OperationKeysMap.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.LineItemIndexes">
            <summary>
            Gets the line item indexes. This is a string collection of LineItem indexes in the LineItemCollection.
            </summary>
            <value>The line item ids.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.RemoveLineItemIndex(System.String)">
            <summary>
            Removes the index of the line item.
            </summary>
            <param name="lineItemIndex">Index of the line item.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.RemoveLineItemIndex(System.Int32)">
            <summary>
            Removes the index of the line item.
            </summary>
            <param name="lineItemIndex">Index of the line item.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.RemoveLineItemIndex(System.Int32,System.Decimal)">
            <summary>
            Removes the index of the line item.
            </summary>
            <param name="lineItemIndex">Index of the line item.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.AddLineItemIndex(System.String)">
            <summary>
            Adds the index of the line item.
            </summary>
            <param name="lineItemIndex">Index of the line item.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.AddLineItemIndex(System.Int32)">
            <summary>
            Adds the index of the line item.
            </summary>
            <param name="lineItemIndex">Index of the line item.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.AddLineItemIndex(System.Int32,System.Decimal)">
            <summary>
            Adds the index of the line item.
            </summary>
            <param name="lineItemIndex">Index of the line item.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.GetShipmentLineItems(Mediachase.Commerce.Orders.Shipment)">
            <summary>
            Gets the shipment line items.
            </summary>
            <param name="shipment">The shipment.</param>
            <returns>LineItems in the specified shipment. Warning: LineItems' quantities returned by this method are incorrect. Need to call <see cref="M:Mediachase.Commerce.Orders.Shipment.GetLineItemQuantity(Mediachase.Commerce.Orders.Shipment,System.Int32)"/> for every line item to get actual quantity.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.GetClonedLineItemsForShipment(Mediachase.Commerce.Orders.Shipment)">
            <summary>
            Gets the shipment line items with the correct quantities assigned for this shipment.
            </summary>
            <param name="shipment">The shipment.</param>
            <remarks>The lineitems were cloned. Setting their quantities does not change the actually quantities in the shipment.</remarks>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.GetLineItemQuantity(Mediachase.Commerce.Orders.Shipment,System.Int32)">
            <summary>
            Gets the shipment line items.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="lineItemId">The line item id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.CreateLineItemWithCorrectQuantity(System.Int32)">
            <summary>
            Creates an <see cref="T:EPiServer.Commerce.Order.Internal.InMemoryLineItem"/> with correct quantity.
            </summary>
            <param name="lineItemIndex">Index of the line item in the collection.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.Internal.InMemoryLineItem"/> instance.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.SetParent(System.Object)">
            <summary>
            Sets the parent.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.ParentOrderGroup">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.PopulateCollectionsInternal(System.Data.DataTableCollection,System.String)">
            <summary>
            Populates the collections internal.
            </summary>
            <param name="tables">The tables.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.PopulateCollections(System.Data.DataTableCollection,System.String)">
            <summary>
            Populates collections within table. The tables used will be removed from
            the table collection.
            Override this method to populate your custom collection objects.
            </summary>
            <param name="tables">The tables.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.Shipment"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.DeepCloneImplementation">
            <summary>
            Extends base implementation by handling <see cref="P:Mediachase.Commerce.Orders.Shipment.LineItems"/>
            and <see cref="P:Mediachase.Commerce.Orders.Shipment.OperationKeysMap"/> (resetting the collections
            to be rebuilt).
            </summary>
            <returns>A new object that is a deep copy of the current instance.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.ReadXml(System.Xml.XmlReader)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.WriteXml(System.Xml.XmlWriter)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.Delete">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.LineItems">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.EPiServer#Commerce#Order#IShipment#OrderShipmentStatus">
            <summary>
            Gets or sets the order shipment status.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.EPiServer#Commerce#Storage#IExtendedProperties#Properties">
            <summary>
            Gets the property bag for dealing with custom meta fields.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.EPiServer#Commerce#Order#IShipmentDiscountAmount#ShipmentDiscount">
            <summary>
            Gets or sets the shipment discount.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.EPiServer#Commerce#Order#Internal#IShipmentCalculatedAmount#IsShippingCostUpToDate">
            <summary>
            Gets or sets the flag indicating whether the <see cref="P:EPiServer.Commerce.Order.Internal.IShipmentCalculatedAmount.ShippingCost"/> is up-to-date.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.EPiServer#Commerce#Order#Internal#IShipmentCalculatedAmount#IsShippingTaxUpToDate">
            <summary>
            Gets or sets the flag indicating whether the <see cref="P:EPiServer.Commerce.Order.Internal.IShipmentCalculatedAmount.ShippingTax"/> is up-to-date.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.EPiServer#Commerce#Order#Internal#IShipmentCalculatedAmount#ShippingCost">
            <summary>
            Gets or sets the shipping cost.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.Shipment.EPiServer#Commerce#Order#Internal#IShipmentCalculatedAmount#ShippingTax">
            <summary>
            Gets or sets the shipping tax.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.DeleteUnreferencedLineItems">
            <summary>
            Deletes all lineitems on the parent <see cref="T:Mediachase.Commerce.Orders.OrderForm"/> that do not belong to a shipment.
            </summary>
            <remarks>This clean up is required for multishipment. But the method must only be called while
            using the new abstractions because it introduces a new behavior when removing lineitems before 
            adding them to shipments.</remarks>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.ReindexLineItems(System.Int32)">
            <summary>
            Update index of line items in all shipments that has an index greater than the removed index.
            </summary>
            <param name="indexToRemove">The removed index.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.OnTaxAffectedPropertyChanged(System.Boolean)">
            <summary>
            Resets up-to-date flags of <see cref="T:EPiServer.Commerce.Order.Internal.IOrderGroupCalculatedAmount"/> and <see cref="T:EPiServer.Commerce.Order.Internal.IShipmentCalculatedAmount"/>, 
            in order to re-calculate prices whenever the property of the <see cref="T:Mediachase.Commerce.Orders.Shipment"/> changed.
            </summary>
            <param name="needUpdateLineItemSalesTax">The flag indicating whether the property changed affects to the sales tax of the <see cref="T:Mediachase.Commerce.Orders.LineItem"/>.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.Shipment.LineItemTaxAffectedPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            Resets up-to-date flags of <see cref="T:EPiServer.Commerce.Order.Internal.IOrderGroupCalculatedAmount"/> and <see cref="T:EPiServer.Commerce.Order.Internal.IShipmentCalculatedAmount"/>, 
            in order to re-calculate prices whenver the property of the <see cref="T:Mediachase.Commerce.Orders.LineItem"/> changed.
            </summary>
            <param name="needUpdateShippingTax">The flag indicating whether the property changed affects to the shipping tax of the <see cref="T:Mediachase.Commerce.Orders.Shipment"/>.</param>
            <param name="needUpdateShippingCost">The flag indicating whether the property changed affects to the shipping cost of the <see cref="T:Mediachase.Commerce.Orders.Shipment"/>.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.ShipmentCollection">
            <summary>
            Collection of shipments.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.ShipmentCollection.Parent">
            <summary>
            Gets the parent Order Form.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ShipmentCollection.#ctor(Mediachase.Commerce.Orders.OrderForm)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.ShipmentCollection"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ShipmentCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.ShipmentCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ShipmentCollection.SetParent(Mediachase.Commerce.Orders.OrderForm)">
            <summary>
            Sets the parent Order Form.
            </summary>
            <param name="form">The form.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ShipmentCollection.Add(Mediachase.Commerce.Orders.Shipment)">
            <summary>
            Adds the specified Shipment.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ShipmentCollection.AddNew">
            <summary>
            Adds the new shipment.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Orders.ShipmentDiscount">
            <summary>
            Shipment Discount, contains information about specific shipment discount.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.ShipmentDiscount.Parent">
            <summary>
            Gets the Shipment discount belongs to.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ShipmentDiscount.SetParent(Mediachase.Commerce.Orders.Shipment)">
            <summary>
            Sets the parent shipment.
            </summary>
            <param name="shipment">The shipment.</param>
        </member>
        <member name="P:Mediachase.Commerce.Orders.ShipmentDiscount.ShipmentDiscountId">
            <summary>
            Gets or sets the shipment discount id.
            </summary>
            <value>The shipment discount id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.ShipmentDiscount.ShipmentId">
            <summary>
            Gets or sets the shipment id.
            </summary>
            <value>The shipment id.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ShipmentDiscount.CreateParameters(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Creates the parameters.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ShipmentDiscount.OnSaved(Mediachase.Data.Provider.DataResult)">
            <summary>
            Called when [saved].
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ShipmentDiscount.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ShipmentDiscount.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.ShipmentDiscount"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ShipmentDiscount.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.ShipmentDiscount"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ShipmentDiscount.MarkNew">
            <summary>
            Marks current instance as new which will cause new record to be created in the database for the specified object.
            This is useful for creating duplicates of existing objects.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.ShipmentDiscountCollection">
            <summary>
            Shipment Discount Collection.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.ShipmentDiscountCollection.Parent">
            <summary>
            Gets the parent Shipment.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ShipmentDiscountCollection.#ctor(Mediachase.Commerce.Orders.Shipment)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.ShipmentDiscountCollection"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ShipmentDiscountCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.ShipmentDiscountCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ShipmentDiscountCollection.Add(Mediachase.Commerce.Orders.ShipmentDiscount)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ShipmentDiscountCollection.SetParent(Mediachase.Commerce.Orders.Shipment)">
            <summary>
            Sets the parent.
            </summary>
            <param name="shipment">The shipment.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.ShippingPaymentRestriction">
            <summary>
            A very basic class used to store the data from the ShippingPaymentRestriction table.  Mainly used with the PaymentMethod class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.ShippingRate">
            <summary>
            Contains information about shipping rate
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.ShippingRate.Id">
            <summary>
            Represents the shipping rate ID.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.ShippingRate.Name">
            <summary>
            Represents the shipping rate name.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.ShippingRate.Money">
            <summary>
            Represents the shipping rate's money.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Orders.ShippingRate.#ctor(System.Guid,System.String,Mediachase.Commerce.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.ShippingRate"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="name">The name.</param>
            <param name="money">The money.</param>
        </member>
        <member name="T:Mediachase.Commerce.Orders.TaxType">
            <summary>
            Tax type.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.TaxType.SalesTax">
            <summary>
            Sales tax
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.TaxType.ShippingTax">
            <summary>
            Shipping tax
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.TaxValue">
            <summary>
            Contains Tax Value
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Orders.TaxValue.Percentage">
            <summary>
            Gets or sets the percentage.
            </summary>
            <value>The percentage.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.TaxValue.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.TaxValue.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Orders.TaxValue.TaxType">
            <summary>
            Gets or sets the type of the tax.
            </summary>
            <value>The type of the tax.</value>
        </member>
        <member name="M:Mediachase.Commerce.Orders.TaxValue.#ctor(System.Double,System.String,System.String,Mediachase.Commerce.Orders.TaxType)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.TaxValue"/> class.
            </summary>
            <param name="percentage">The percentage.</param>
            <param name="name">The name.</param>
            <param name="displayname">The displayname.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mediachase.Commerce.Orders.TaxValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Orders.TaxValue"/> class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Orders.TransactionType">
            <summary>
            Transaction types for a payment.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.TransactionType.Authorization">
            <summary>
            Requests to charge a cardholder. 
            An approved Authorization transaction reduces the cardholder’s open-to-buy amount (the amount that can currently be charged against the account), but does not actually capture the funds. 
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.TransactionType.Capture">
            <summary>
            Used to complete an Authorization transaction that was successfully authorized through the payment gateway.
            Note: An Authorization and Capture together are considered one complete transaction. Once the Capture is submitted, the transaction will be sent for settlement.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.TransactionType.Sale">
            <summary>
            Charges the specified amount against the account, and marks the transaction for immediate funds transfer (capture) during the next settlement period.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.TransactionType.Void">
            <summary>
            Used to cancel an original transaction that is not yet settled and prevents it from being sent for settlement.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.TransactionType.Credit">
            <summary>
            Returns the specified amount (posts a credit) to the cardholder’s account.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.TransactionType.Other">
            <summary>
            Other transaction type.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Orders.TransactionType.CaptureOnly">
            <summary>
            Used to capture the remaining balance.
            </summary>
            <remarks>
            In some payment provider, only a single Capture transaction can be submitted against an Authorization, even if we do not capture the full amount with our Capture. 
            If there is an available amount remaining, we may use the Capture Only transaction type to capture the remaining balance.
            </remarks>
        </member>
        <member name="T:Mediachase.Commerce.Permissions">
            <summary>
            Permissions for coomerce
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Permissions.Catalog">
            <summary>
            Permissions for Catalog
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Permissions.Customers">
            <summary>
            Permissions for Customers
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Permissions.Markets">
            <summary>
            Permissions for Markets
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Permissions.Order">
            <summary>
            Permissions for Order
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Permissions.Reporting">
            <summary>
            Permissions for Reporting
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Permissions.Core">
            <summary>
            Permissions for Core
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Pricing.CatalogKeyAndQuantity">
            <summary>
            An object describing a unique catalog entry.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Pricing.CatalogKeyAndQuantity.Quantity">
            <summary>
            Gets or sets the quantity.
            </summary>
            <value>The quantity for the catalog entry.</value>
        </member>
        <member name="F:Mediachase.Commerce.Pricing.CustomerPricing.PriceType.AllCustomers">
            <summary>
            Gets prices valid for all customers. PriceCode must be an empty string when AllCustomers is specified.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Pricing.CustomerPricing.PriceType.UserName">
            <summary>
            Gets prices valid for a specific customer. PriceCode must be the customer's username.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Pricing.CustomerPricing.PriceType.PriceGroup">
            <summary>
            Gets prices valid for a specific price group. PriceCode must be the price group identifier.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Pricing.CustomerPricing.PriceTypeId">
            <summary>
            Gets the price type id.
            </summary>
            <value>The price type id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Pricing.CustomerPricing.PriceCode">
            <summary>
            Gets the price code data.
            </summary>
            <value>The price code. The meaning of this depends on the value of PriceTypeId.</value>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.CustomerPricing.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Pricing.CustomerPricing"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.CustomerPricing.#ctor(Mediachase.Commerce.Pricing.CustomerPricing.PriceType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Pricing.CustomerPricing"/> class.
            </summary>
            <param name="priceTypeId"></param>
            <param name="priceCode"></param>
        </member>
        <member name="T:Mediachase.Commerce.Pricing.Database.PriceDto">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Pricing.Database.PriceDto.PriceDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Pricing.Database.PriceDto.PriceRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Pricing.Database.PriceDto.PriceRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Pricing.Database.PriceServiceDatabase">
            <summary>
            Represents database service to manipulate Entry prices.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.Database.PriceServiceDatabase.#ctor(Mediachase.Commerce.CatalogItemChangeNotifier,EPiServer.Framework.Cache.ISynchronizedObjectInstanceCache,Mediachase.Commerce.Engine.Events.CatalogKeyEventBroadcaster,Mediachase.Commerce.IApplicationContext,Mediachase.Commerce.Catalog.EntryIdentityResolver)">
            <summary>
            Creates a new instance of the <see cref="T:Mediachase.Commerce.Pricing.Database.PriceServiceDatabase" /> class.
            </summary>
            <param name="changeNotifier">The change notifier to notify when changes have been committed.</param>
            <param name="objectInstanceCache">The object instance cache.</param>
            <param name="broadcaster">The class to broadcast price events.</param>
            <param name="applicationContext">The application context</param>
            <param name="identityResolver">The identity resolver.</param>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.Database.PriceServiceDatabase.#ctor(Mediachase.Commerce.CatalogItemChangeManager,EPiServer.Framework.Cache.ISynchronizedObjectInstanceCache,Mediachase.Commerce.Engine.Events.CatalogKeyEventBroadcaster,Mediachase.Commerce.IApplicationContext,Mediachase.Commerce.Catalog.EntryIdentityResolver)">
            <summary>
            Creates a new instance of the <see cref="T:Mediachase.Commerce.Pricing.Database.PriceServiceDatabase" /> class.
            </summary>
            <param name="changeManager">The change manager to notify when changes have been committed.</param>
            <param name="objectInstanceCache">The object instance cache.</param>
            <param name="broadcaster">The class to broadcast price events.</param>
            <param name="applicationContext">The application context</param>
            <param name="identityResolver">The identity resolver.</param>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.Database.PriceServiceDatabase.GetCatalogEntryPrices(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.CatalogKey})">
            <summary>
            Gets catalog entry prices from the list of catalog key.
            </summary>
            <param name="catalogKeys">List of catalog key to get prices.</param>
            <returns>Catalog entry prices.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.Database.PriceServiceDatabase.GetCatalogEntryPricesWorker(System.Collections.Generic.List{Mediachase.Commerce.Catalog.CatalogKey})">
            <summary>
            Gets catalog entry prices from database.
            </summary>
            <param name="itemsToLoad">List of catalog key to get prices.</param>
            <returns>Catalog entry prices.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.Database.PriceServiceDatabase.InsertPriceValuesCache(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Pricing.IPriceValue})">
            <summary>
            Inserts price value to cache, for each specific CatalogKey.
            </summary>
            <param name="prices">Prices to insert to cache.</param>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.Database.PriceServiceDatabase.GetCatalogKeyPriceCacheKey(Mediachase.Commerce.Catalog.CatalogKey)">
            <summary>
            Gets CatalogKey's price cache key.
            </summary>
            <param name="catalogKey">CatalogKey object to get its price cache key.</param>
            <returns>A string represents CatalogKey's price cache key, or null if the CatalogKey is null.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.Database.PriceServiceDatabase.TryGetCachedPrices(Mediachase.Commerce.Catalog.CatalogKey,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Pricing.IPriceValue}@)">
            <summary>
            Tries get cached prices of CatalogKey.
            </summary>
            <param name="catalogKey">CatalogKey to get cached prices.</param>
            <param name="loadedPrices">Reference to the prices list of <paramref name="catalogKey"/>, which will be loaded if cached prices are found.</param>
            <returns>True if cached prices are found, and <paramref name="catalogKey"/> will be loaded with cached prices. Otherwise, returns false, and <paramref name="catalogKey"/> will remain unchanged.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Pricing.Database.ReadOnlyPriceValue">
            <summary>
            Separate IPriceValue implementation to prevent downcasting IPriceValue to PriceValue for edits.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Pricing.DefaultPriceOptimizer">
            <summary>
            Eliminates overlapping values and assigns MaxQuantity values to a set of price values.
            This type/member supports the EPiServer infrastructure and is not intended to be
            used directly from your code.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Pricing.DefaultPriceOptimizer.GroupingComparer">
            <summary>
            A comparer for grouping price values in the same price group.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Pricing.DefaultPriceOptimizer.ValidityDateComparer">
            <summary>
            A comparer for validity dates.  Null will be treated as the end of time, since only ValidUntil may be null.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.DefaultPriceOptimizer.OptimizePrices(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Pricing.IPriceValue})">
            <summary>
            Returns an optimized list of price values representing the same pricing structure as the supplied price value list.
            </summary>
            <param name="prices">The original price list.  All values in the list are expected to be for the same catalog entry.</param>
            <returns>An optimized list.</returns>
            <remarks>
            The optimized list will not have any overlapping values, and tiered pricing on quantity will always decrease or stay the same on
            price as the minimum quantity increases.  Two price values overlap if they are for the same catalog entry, market, currency, and
            customer pricing, and have overlapping validity date ranges.  All overlaps are resolved by taking the lower unit price.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.DefaultPriceOptimizer.OptimizePriceGroup(System.Collections.Generic.List{Mediachase.Commerce.Pricing.IPriceValue})">
            <summary>
            Optimizes the price group.
            </summary>
            <param name="optimizationGroup">Group of price values for the same catalog, market, currency and customer pricing</param>
            <returns>An optimized list for a optimizationGroup</returns>
            <remarks>
            This devides price values in a optimizationGroup into optimizedpricevalue segments
            </remarks>
        </member>
        <member name="T:Mediachase.Commerce.Pricing.IOptimizedPriceValue">
            <summary>
            Optimized price value, with information of max quantity.
            </summary>
            <seealso cref="T:Mediachase.Commerce.Pricing.IPriceValue" />
        </member>
        <member name="P:Mediachase.Commerce.Pricing.IOptimizedPriceValue.MaxQuantity">
            <summary>
            Gets the maximum quantity the price applies for.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Pricing.IPriceDetailService">
            <summary>
            Accesses pricing information for catalog entries.
            </summary>
            <example>
            <code source="../CodeSamples/Mediachase.Commerce/Pricing/CustomPricingServiceSample.cs" lang="cs" />
            </example>
        </member>
        <member name="P:Mediachase.Commerce.Pricing.IPriceDetailService.IsReadOnly">
            <summary>
            Gets a value indicating whether or not the price service can modify prices.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.IPriceDetailService.Get(System.Int64)">
            <summary>
            Gets the price value identified by <paramref name="priceValueId"/>.
            </summary>
            <param name="priceValueId">The idenfitier for the price value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.IPriceDetailService.List(EPiServer.Core.ContentReference)">
            <summary>
            Gets all price details for the <paramref name="catalogContentReference"/>.
            </summary>
            <param name="catalogContentReference">
            A reference to the catalog entity containing the desired prices.
            </param>
            <returns>
            A collection of <see cref="T:Mediachase.Commerce.Pricing.IPriceDetailValue"/> objects associated with the referenced 
            catalog entity.
            </returns>
            <remarks>
            The prices returned will vary on the type on entity referenced by the
            <paramref name="catalogContentReference"/> value.
            <list type="bullet">
            <item><description>
            If the value is a category, then prices will be returned for all products and variants 
            in the category, 
            and all variants associated with products in the category.
            </description></item>
            <item><description>
            If the value is a product, then prices will be returned for the product and for all 
            variants associated with the product.
            </description></item>
            <item><description>
            If the value is a variant, then prices will be returned only for the variant.
            </description></item>
            <item><description>
            If the value is a bundle, package, or dynamic package; then prices will be returned for 
            the specified entity, all products and variants in the specified entity, and all variants
            associated with products in the specified entity.
            </description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.IPriceDetailService.List(EPiServer.Core.ContentReference,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all price details for the <paramref name="catalogContentReference"/> with paging 
            support.
            </summary>
            <param name="catalogContentReference">
            A reference to the catalog entity containing the desired prices.
            </param>
            <param name="offset">The offset within result set to start at.</param>
            <param name="count">
            The number of items to return, starting at <paramref name="offset"/>.
            </param>
            <param name="totalCount">
            The total number of price detail values that exist for <paramref name="catalogContentReference"/>.
            </param>
            <returns>
            A collection of <see cref="T:Mediachase.Commerce.Pricing.IPriceDetailValue"/> objects associated with the referenced
            catalog entity.
            </returns>
            <remarks>
            Prices returned will vary by the type of item referenced by 
            <paramref name="catalogContentReference"/>. 
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.IPriceDetailService.List(EPiServer.Core.ContentReference,Mediachase.Commerce.MarketId,Mediachase.Commerce.Pricing.PriceFilter,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all price details for the <paramref name="catalogContentReference"/> with paging 
            support and filter for market, currencies and customer pricings.
            </summary>
            <param name="catalogContentReference">
            A reference to the catalog entity containing the desired prices.
            </param>
            <param name="marketId">Market Id to filter by.</param>
            <param name="filter">Currencies and CustomerPricing to filter by.</param>
            <param name="offset">The offset within result set to start at.</param>
            <param name="count">
            The number of items to return, starting at <paramref name="offset"/>.
            </param>
            <param name="totalCount">
            The total number of price detail values that exist for <paramref name="catalogContentReference"/>.
            </param>
            <returns>
            A collection of <see cref="T:Mediachase.Commerce.Pricing.IPriceDetailValue"/> objects associated with the referenced
            catalog entity.
            </returns>
            <remarks>
            Prices returned will vary by the type of item referenced by 
            <paramref name="catalogContentReference"/>.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.IPriceDetailService.Save(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Pricing.IPriceDetailValue})">
            <summary>
            Updates or inserts the specified price values.
            </summary>
            <param name="priceValues">The price values to save in the backing store.</param>
            <returns>The saved values.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.IPriceDetailService.Delete(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Deletes the specified price values.
            </summary>
            <param name="priceValueIds">The identifiers of the price values to delete.</param>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.IPriceDetailService.ReplicatePriceServiceChanges(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.CatalogKey},System.Collections.Generic.IEnumerable{Mediachase.Commerce.Pricing.IPriceValue})">
            <summary>
            Sets the price detail values to reflect changes in <see cref="T:Mediachase.Commerce.Pricing.IPriceService"/>.
            This should ONLY be used by implementations of <see cref="T:Mediachase.Commerce.Pricing.IPriceService"/>.
            </summary>
            <param name="catalogKeySet"></param>
            <param name="priceValuesList"></param>
        </member>
        <member name="T:Mediachase.Commerce.Pricing.IPriceOptimizer">
            <summary>
            Optimizes prices on certain criterias.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.IPriceOptimizer.OptimizePrices(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Pricing.IPriceValue})">
            <summary>
            Optimizes a collection of prices, remove duplicated and unwanted prices.
            </summary>
            <param name="prices">The prices to optimized</param>
            <returns>A list of optimized prices.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Pricing.IPriceService">
            <summary>
            Accesses pricing information for catalog entries.
            </summary>
            <example>
            <code source="../CodeSamples/Mediachase.Commerce/Pricing/CustomPricingServiceSample.cs" lang="cs" />
            </example>
        </member>
        <member name="P:Mediachase.Commerce.Pricing.IPriceService.IsReadOnly">
            <summary>
            Gets a value indicating whether or not the price service can modify prices.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.IPriceService.GetDefaultPrice(Mediachase.Commerce.MarketId,System.DateTime,Mediachase.Commerce.Catalog.CatalogKey,Mediachase.Commerce.Currency)">
            <summary>
            Gets a default price for a catalog entry.  The default price for a market, currency, and catalog entry is the price available
            to all customers at a minimum quantity of 0.
            </summary>
            <param name="market">The market ID for the price.</param>
            <param name="validOn">The date and time, in UTC, that the price is valid on.</param>
            <param name="catalogKey">The catalog entry to get pricing for.</param>
            <param name="currency">The currency for the price.</param>
            <returns>The default price, or null if a default price is not found.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.IPriceService.GetPrices(Mediachase.Commerce.MarketId,System.DateTime,Mediachase.Commerce.Catalog.CatalogKey,Mediachase.Commerce.Pricing.PriceFilter)">
            <summary>
            Gets filtered pricing for a single catalog entry.
            </summary>
            <param name="market">The market for the prices.</param>
            <param name="validOn">The valid on date for the prices.</param>
            <param name="catalogKey">The catalog entry.</param>
            <param name="filter">The price filter.</param>
            <returns>All price values that match the parameters.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.IPriceService.GetPrices(Mediachase.Commerce.MarketId,System.DateTime,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.CatalogKey},Mediachase.Commerce.Pricing.PriceFilter)">
            <summary>
            Gets filtered pricing for multiple catalog entries.
            </summary>
            <param name="market">The market for the prices.</param>
            <param name="validOn">The valid on date for the prices.</param>
            <param name="catalogKeys">The catalog entries.  The enumeration will only be evaluated once.</param>
            <param name="filter">The price filter.</param>
            <returns>All price values that match the parameters.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.IPriceService.GetPrices(Mediachase.Commerce.MarketId,System.DateTime,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Pricing.CatalogKeyAndQuantity},Mediachase.Commerce.Pricing.PriceFilter)">
            <summary>
            Gets filtered pricing for multiple catalog entries, in varying quantities.
            </summary>
            <param name="market">The market for the prices.</param>
            <param name="validOn">The valid on date for the prices.</param>
            <param name="catalogKeysAndQuantities">The catalog entries and quantities.  The enumeration will only be evaluated once.</param>
            <param name="filter">The price filter.  The quantity value in the filter will be ignored, using the quantity in catalogEntriesAndQuantities instead.</param>
            <returns>All price values that match the parameters.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.IPriceService.GetCatalogEntryPrices(Mediachase.Commerce.Catalog.CatalogKey)">
            <summary>
            Gets all price values for a single catalog entry.
            </summary>
            <param name="catalogKey">The catalog entry to fetch prices for.</param>
            <returns>An enumeration of IPriceValues describing the pricing for the catalog entry.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.IPriceService.GetCatalogEntryPrices(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.CatalogKey})">
            <summary>
            Gets all price values for one or more catalog entries.
            </summary>
            <param name="catalogKeys">The catalog entries to fetch prices for.</param>
            <returns>An enumeration of IPriceValues describing the pricing for the catalog entry.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.IPriceService.SetCatalogEntryPrices(Mediachase.Commerce.Catalog.CatalogKey,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Pricing.IPriceValue})">
            <summary>
            Sets the price values for a catalog entry.
            </summary>
            <param name="catalogKey">The catalog entry to set prices for.</param>
            <param name="priceValues">The complete set of price values for the catalog entry.</param>
            <remarks>
            <para>To delete pricing for a catalog entry, pass in an empty enumeration of price values.</para>
            <para>Providers may modify the exact price values stored, so long as the final values represent an identical pricing scheme (for example, to eliminate overlapping values).</para>
            <para>Will not be implemented when provider is read only.</para>
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.IPriceService.SetCatalogEntryPrices(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.CatalogKey},System.Collections.Generic.IEnumerable{Mediachase.Commerce.Pricing.IPriceValue})">
            <summary>
            Sets the price values for multiple catalog entries;
            </summary>
            <param name="catalogKeys">The catalog entries to set prices for.</param>
            <param name="priceValues">The complete set of price values for all catalog entries referenced in catalogKeys.</param>
            <remarks>
            <para>Any catalog entry listed in catalogKeys but not represented in priceValues will have its pricing data deleted.</para>
            <para>Providers may modify the exact price values stored, so long as the final values represent an identical pricing scheme (for example, to eliminate overlapping values).</para>
            <para>Will not be implemented when provider is read only.</para>
            </remarks>        
        </member>
        <member name="M:Mediachase.Commerce.Pricing.IPriceService.ReplicatePriceDetailChanges(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.CatalogKey},System.Collections.Generic.IEnumerable{Mediachase.Commerce.Pricing.IPriceValue})">
            <summary>
            Sets the price values for catalog entries to reflect changes in <see cref="T:Mediachase.Commerce.Pricing.IPriceDetailService"/>.
            This should ONLY be used by implementations of <see cref="T:Mediachase.Commerce.Pricing.IPriceDetailService"/>.
            </summary>
            <param name="catalogKeys">catalog entries to set prices for.</param>
            <param name="priceValues">The complete set of price values for all catalog entries referenced in catalogKeys.</param>
            <remarks>
            <para>Will not be implemented when provider is read only.</para>
            </remarks>
        </member>
        <member name="T:Mediachase.Commerce.Pricing.IPriceValue">
            <summary>
            An object exposing read-only pricing data.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Pricing.IPriceValue.CatalogKey">
            <summary>
            Gets the catalog entry key.
            </summary>
            <value>The catalog entry key.</value>
        </member>
        <member name="P:Mediachase.Commerce.Pricing.IPriceValue.MarketId">
            <summary>
            Gets the market.
            </summary>
            <value>The market for the price.</value>
        </member>
        <member name="P:Mediachase.Commerce.Pricing.IPriceValue.CustomerPricing">
            <summary>
            Gets the customer pricing value for this price.
            </summary>
            <value>The customer pricing if ReturnCustomerPricing was <c>true</c> in the request, or null if it was <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.Commerce.Pricing.IPriceValue.ValidFrom">
            <summary>
            Gets the valid from date and time.
            </summary>
            <value>The date and time in UTC when this price data became or becomes active.</value>
        </member>
        <member name="P:Mediachase.Commerce.Pricing.IPriceValue.ValidUntil">
            <summary>
            Gets the valid until date and time.
            </summary>
            <value>The date and time in UTC when this price expires or expired.</value>
        </member>
        <member name="P:Mediachase.Commerce.Pricing.IPriceValue.MinQuantity">
            <summary>
            Gets the minimum quantity.
            </summary>
            <value>The minimum quantity that this pricing applies to.</value>
        </member>
        <member name="P:Mediachase.Commerce.Pricing.IPriceValue.UnitPrice">
            <summary>
            Gets the unit price.
            </summary>
            <value>The price per unit of quantity.</value>
        </member>
        <member name="T:Mediachase.Commerce.Pricing.OptimizedPriceValue">
            <summary>
            Default implementation of <see cref="T:Mediachase.Commerce.Pricing.IOptimizedPriceValue"/>
            </summary>
            <seealso cref="T:Mediachase.Commerce.Pricing.IOptimizedPriceValue" />
        </member>
        <member name="M:Mediachase.Commerce.Pricing.OptimizedPriceValue.#ctor(Mediachase.Commerce.Pricing.IPriceValue,System.Nullable{System.Decimal})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Pricing.OptimizedPriceValue"/> class.
            </summary>
            <param name="price">The price.</param>
            <param name="maxQuantity">The maximum quantity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.OptimizedPriceValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Pricing.OptimizedPriceValue"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Pricing.OptimizedPriceValue.CatalogKey">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Pricing.OptimizedPriceValue.MarketId">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Pricing.OptimizedPriceValue.CustomerPricing">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Pricing.OptimizedPriceValue.ValidFrom">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Pricing.OptimizedPriceValue.ValidUntil">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Pricing.OptimizedPriceValue.MinQuantity">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Pricing.OptimizedPriceValue.MaxQuantity">
            <inheritdoc />
        </member>
        <member name="P:Mediachase.Commerce.Pricing.OptimizedPriceValue.UnitPrice">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Pricing.PriceDetailExtensions.Save(Mediachase.Commerce.Pricing.IPriceDetailService,Mediachase.Commerce.Pricing.IPriceDetailValue)">
            <summary>
            Updates or inserts the specified price value if the price service is editable.
            </summary>
            <param name="service">The price detail service to access, manipulate pricing information.</param>
            <param name="priceValue">The price value to save in the backing store.</param>
            <returns>The saved value.</returns>
            <exception cref="T:System.InvalidOperationException">The IPriceDetailService is read only.</exception>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.PriceDetailExtensions.Delete(Mediachase.Commerce.Pricing.IPriceDetailService,System.Int64)">
            <summary>
            Deletes the specified price value if the price service is editable.
            </summary>
            <param name="service">The price detail service to access, manipulate pricing information.</param>
            <param name="priceValueId">The identifiers of the price value to delete.</param>
            <exception cref="T:System.InvalidOperationException">The IPriceDetailService is read only.</exception>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.PriceDetailExtensions.ThrowIfReadOnly(Mediachase.Commerce.Pricing.IPriceDetailService)">
            <summary>
            If the IPriceDetailService is read only, an application exception will be thrown.
            </summary>
            <param name="service">The price detail service to access, manipulate pricing information.</param>
            <exception cref="T:System.InvalidOperationException">The IPriceDetailService is read only.</exception>
        </member>
        <member name="P:Mediachase.Commerce.Pricing.PriceFilter.Currencies">
            <summary>
            Gets or sets the currencies to filter on.
            </summary>
            <value>The currencies to filter on. If null or empty, prices for all currencies will be returned.</value>
            <remarks>Values passed to the setter will be enumerated exactly once and copied.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Pricing.PriceFilter.Quantity">
            <summary>
            Gets or sets the quantity to filter on.
            </summary>
            <value>The quantity to filter on. If null, prices for all quantities will be returned.</value>
        </member>
        <member name="P:Mediachase.Commerce.Pricing.PriceFilter.CustomerPricing">
            <summary>
            Gets or sets the customer pricing list.
            </summary>
            <value>The customer pricing information to filter on.  If null or empty, all prices will be returned.</value>
            <remarks>
            Values passed to the setter will be enumerated exactly once and copied.</remarks>
        </member>
        <member name="P:Mediachase.Commerce.Pricing.PriceFilter.ReturnCustomerPricing">
            <summary>
            Gets or sets a value indicating whether customer information will be included in the result set.
            </summary>
            <value>
            	If <c>true</c>, individual price rows for all matching customers will be included.
            	If <c>false</c>, conflicts between customer pricing data will be resolved by taking the lowest unit price,
            	and the values returned will not include customer information.
            </value>
        </member>
        <member name="T:Mediachase.Commerce.Pricing.PriceServiceExtension">
            <summary>
            This type/member supports the EPiServer infrastructure and is not intended to be
            used directly from your code.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.PriceServiceExtension.SetCatalogEntryPricesIfNotReadOnly(Mediachase.Commerce.Pricing.IPriceService,Mediachase.Commerce.Catalog.CatalogKey,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Pricing.IPriceValue})">
            <summary>
            This type/member supports the EPiServer infrastructure and is not intended to be
            used directly from your code.
            </summary>
            <param name="priceService"></param>  
            <param name="catalogKey">The catalog entry to set prices for.</param>
            <param name="priceValues">The complete set of price values for the catalog entry.</param>
            <exception cref="T:System.InvalidOperationException">The IPriceDetailService is read only.</exception>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.PriceServiceExtension.SetCatalogEntryPricesIfNotReadOnly(Mediachase.Commerce.Pricing.IPriceService,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.CatalogKey},System.Collections.Generic.IEnumerable{Mediachase.Commerce.Pricing.IPriceValue})">
            <summary>
            This type/member supports the EPiServer infrastructure and is not intended to be
            used directly from your code.
            </summary>  
            <param name="priceService"></param>
            <param name="catalogKeys">The catalog entries to set prices for.</param>
            <param name="priceValues">The complete set of price values for all catalog entries referenced in catalogKeys.</param>
            <exception cref="T:System.InvalidOperationException">The IPriceDetailService is read only.</exception>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.PriceServiceExtension.ReplicatePriceDetailChangesIfNotReadOnly(Mediachase.Commerce.Pricing.IPriceService,System.Collections.Generic.IEnumerable{Mediachase.Commerce.Catalog.CatalogKey},System.Collections.Generic.IEnumerable{Mediachase.Commerce.Pricing.IPriceValue})">
            <summary>
            This type/member supports the EPiServer infrastructure and is not intended to be
            used directly from your code.
            </summary>
            <param name="priceService"></param>
            <param name="catalogKeys">catalog entries to set prices for.</param>
            <param name="priceValues">The complete set of price values for all catalog entries referenced in catalogKeys.</param>
            <exception cref="T:System.InvalidOperationException">The IPriceDetailService is read only.</exception>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.PriceServiceExtension.ThrowIfReadOnly(Mediachase.Commerce.Pricing.IPriceService)">
            <summary>
            If the IPriceService is read only, an application exception will be thrown.
            </summary>
            <param name="service">The price service to access pricing information.</param>
            <exception cref="T:System.InvalidOperationException">The IPriceService is read only.</exception>
        </member>
        <member name="T:Mediachase.Commerce.Pricing.PriceTypeConfiguration">
            <summary>
            The class to manage price type configuration.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Pricing.PriceTypeConfiguration.PriceTypeDefinitions">
            <summary>
            Gets price types from enum and configuration file.
            <remarks>Gets sale price types defined from both enum <see cref="T:Mediachase.Commerce.Pricing.CustomerPricing.PriceType"/> and configuration file.</remarks>
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Pricing.PriceTypeConfiguration.GetAllPriceTypes">
            <summary>
            Gets price types from enum and configuration file.
            </summary>
            <returns>The PriceTypeDefinition dictionary.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Pricing.PriceTypeDefinition.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Mediachase.Commerce.Pricing.PriceTypeDefinition.ControlUrl">
            <summary>
            Gets the control url.
            </summary>
            <value>The control url.</value>
        </member>
        <member name="T:Mediachase.Commerce.Reporting.ReportingPermissions">
            <summary>
            Permissions for reporting subsytem
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Reporting.ReportingPermissions.View">
            <summary>
            Gets the view permission.
            </summary>
            <value>
            The reporting view PermissionType.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Reporting.ReportingPermissions.TabView">
            <summary>
            Gets the TabView permission.
            </summary>
            <value>
            The reporting view PermissionType.
            </value>
        </member>
        <member name="T:Mediachase.Commerce.Serialization.RemoteEventDataSerializer`2">
            <summary>
                Converts an instance of <typeparamref name="TItem"/> into one or more binary serialized instances,
                if possible with serialized sizes below <see cref="F:Mediachase.Commerce.Serialization.RemoteEventDataSerializer`2.MaxMessageSize"/>.
            </summary>
            <typeparam name="TItem">The type to split and serialize.</typeparam>
            <typeparam name="TCollectionItem">The type of item in splittable collections on the <typeparamref name="TItem"/> instance.</typeparam>
        </member>
        <member name="T:Mediachase.Commerce.Serialization.RemoteEventDataSerializer`2.ItemCloner">
            <summary>
                Specifies how to get the data from a specific collection on the instance
                and create a clone of the instance with using a part of that collection.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Serialization.RemoteEventDataSerializer`2.ItemCloner.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}},System.Func{`0,System.Collections.Generic.IEnumerable{`1},`0})">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.Serialization.RemoteEventDataSerializer`2.ItemCloner"/>.
            </summary>
            <param name="collectionAccessor">Delegate to access a certain item collection on the instance.</param>
            <param name="cloneCreator">
                Delegate which creates a clone of the instance, setting the collection accessed by <paramref name="collectionAccessor"/>
                to the provided value. Other cloneable collections of the instance are expected to be left empty on the clone. The
                purpose is to create a clone with a subset of the original data, other collections of the data handled by other instances
                of <see cref="T:Mediachase.Commerce.Serialization.RemoteEventDataSerializer`2.ItemCloner"/> used by the same <see cref="T:Mediachase.Commerce.Serialization.RemoteEventDataSerializer`2"/> instance.
            </param>
        </member>
        <member name="M:Mediachase.Commerce.Serialization.RemoteEventDataSerializer`2.#ctor(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Serialization.RemoteEventDataSerializer{`0,`1}.ItemCloner})">
            <summary>
            Creates a new instance of <see cref="T:Mediachase.Commerce.Serialization.RemoteEventDataSerializer`2"/>.
            </summary>
            <param name="itemCloners">
                The <see cref="T:Mediachase.Commerce.Serialization.RemoteEventDataSerializer`2.ItemCloner"/> instances used to split the instance if necessary before serializing.
            </param>
        </member>
        <member name="M:Mediachase.Commerce.Serialization.RemoteEventDataSerializer`2.Serialize(`0)">
            <summary>
                Creates binary serialized representation(s) of the instance, possibly by first splitting the
                instance into several instances to keep the size of each serialized instance below <see cref="F:Mediachase.Commerce.Serialization.RemoteEventDataSerializer`2.MaxMessageSize"/>.
            </summary>
            <param name="instance">The instance to serialize.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Shared.Check">
            <summary>
            Implements the shared checking methods.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Shared.Check.ArgumentIsNotNull(System.Object,System.String)">
            <summary>
            Arguments the is not null.
            </summary>
            <param name="argument">The argument.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.Commerce.Shared.Check.IsTrue(System.Boolean,System.String)">
            <summary>
            Determines whether the specified argument is true.
            </summary>
            <param name="argument">if set to <c>true</c> [argument].</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.Commerce.Shared.Check.IsNotTrue(System.Boolean,System.String)">
            <summary>
            Determines whether [is not true] [the specified argument].
            </summary>
            <param name="argument">if set to <c>true</c> [argument].</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.Commerce.Shared.Check.IsNotNull(System.Object,System.String)">
            <summary>
            Determines whether [is not null] [the specified argument].
            </summary>
            <param name="argument">The argument.</param>
            <param name="message">The message.</param>
        </member>
        <member name="T:Mediachase.Commerce.Shared.CommerceHelper">
            <summary>
            Implements helper methods for the CommerceLib project.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Shared.CommerceHelper.CodeValidCharacters">
            <summary>
            Defines the characters that are valid for a product code.
            </summary>
            <remarks>
            This is intended to be used as a subset of a Regex - the definition allows regular alphanumerics
            as well as the symbols -, _, (, ), comma and dot.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CommerceHelper.ConvertToString(System.Collections.Specialized.StringCollection,System.String)">
            <summary>
            Converts to string.
            </summary>
            <param name="collection">The collection.</param>
            <param name="separator">The separator.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CommerceHelper.CleanUrlField(System.String)">
            <summary>
            Cleans the URL field.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CommerceHelper.CleanUrlField(System.String,EPiServer.Web.IUrlSegmentGenerator)">
            <summary>
            Cleans the URL field.
            </summary>
            <param name="input">The input.</param>
            <param name="urlSegmentGenerator">The URL segment generator.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CommerceHelper.GetAbsolutePath(System.String)">
            <summary>
            Returns absolute path for the specified relative url.
            </summary>
            <param name="xsPath">The xs path.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CommerceHelper.GetAbsoluteThemedPath(System.String,System.String)">
            <summary>
            Gets the absolute themed path.
            </summary>
            <param name="virtualPath">The virtual path.</param>
            <param name="themeName">Name of the theme.</param>
            <returns>Absolute path.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CommerceHelper.SetContextParameter(System.String,System.Object)">
            <summary>
            Adds specified object to the current HttpContext.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CommerceHelper.GetContextParameter(System.String)">
            <summary>
            Returns an object with the given name from the current HttpContext.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CommerceHelper.GetContextParameter(System.String,System.Object)">
            <summary>
            Returns an object with the given name from the current HttpContext.
            </summary>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CommerceHelper.GetContextParameter``1(System.String,``0)">
            <summary>
            Returns an object with the given name from the current HttpContext.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CommerceHelper.RemoveContextParameter(System.String)">
            <summary>
            Removes the context parameter.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CommerceHelper.ByteSizeToStr(System.Int64)">
            <summary>
            Translates size to string. For instance 1.2 KB instead of  1200, or 200 bytes instead of 200.
            </summary>
            <param name="size">The size in bytes.</param>
            <returns>String representation of the size converted to bytes, KB or MB.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CommerceHelper.HasWriteAccess(System.IO.DirectoryInfo)">
            <summary>
            Determines whether [has write access] [the specified index dir].
            </summary>
            <param name="indexDir">The index dir.</param>
            <returns>
            	<c>true</c> if [has write access] [the specified index dir]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CommerceHelper.TryParse``1(System.Enum,System.String,``0@)">
            <summary>
            Tries the parse.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="theEnum">The enum.</param>
            <param name="valueToParse">The value to parse.</param>
            <param name="returnValue">The return value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CommerceHelper.NormalizeString(System.String,EPiServer.Web.IUrlSegmentGenerator)">
            <summary>
            Normalizes the string to remove all non-ANSI characters.
            </summary>
            <param name="input">The input string.</param>
            <param name="urlSegmentGenerator">The url segment generator.</param>
            <returns>
            Normalized string.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CommerceHelper.GetScheme(System.Web.HttpRequest)">
            <summary>
            Get the scheme based on HttpRequest, with the consideration of load balancer.
            </summary>
            <param name="request">The current request.</param>
            <returns>"https" if the request was on SSL, "http" otherwise.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Shared.CreditCardValidator">
            <summary>
            Credit Card Validator provides basic offline server side validation for credit cards.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CreditCardValidator.EvaluateIsValid">
            <summary>
            When overridden in a derived class, this method contains the code to determine whether the value in the input control is valid.
            </summary>
            <returns>
            true if the value in the input control is valid; otherwise, false.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Shared.CurrencyFormatter">
            <summary>
            Implements operations for the currecy formatter.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Shared.CurrencyFormatter.Cultures">
            <summary>
            Gets the cultures.
            </summary>
            <value>The cultures.</value>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CurrencyFormatter.CurrentCurrency">
            <summary>
            Return the three letter ISO currency code for the current thread.
            </summary>
            <returns>current currency code in String</returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CurrencyFormatter.ConvertCurrency(Mediachase.Commerce.Money,Mediachase.Commerce.Currency)">
            <summary>
            Converts currency from moneyFrom to currencyTo. 
            It will try to find the direct way to convert. If none is found 
            it will try to find reverse way, if that is not available the base currency will 
            be returned.
            </summary>
            <remarks>
            	This function will actually return the effective currency code that was applied.
            	The converted amount will be rounded with the <paramref name="currencyTo"/>.
            </remarks>
            <param name="moneyFrom">The amount and currency of money to be converted.</param>
            <param name="currencyTo">The currency to convert the given money to.</param>
            <returns>The converted money.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CurrencyFormatter.ConvertCurrencyWithFullPrecision(Mediachase.Commerce.Money,Mediachase.Commerce.Currency)">
            <summary>
            Converts currency from moneyFrom to currencyTo. 
            It will try to find the direct way to convert. If none is found 
            it will try to find reverse way, if that is not available the base currency will 
            be returned.
            </summary>
            <remarks>
            	This function will actually return the effective currency code that was applied.
            	The converted amount will be calculated with full precision.
            </remarks>
            <param name="moneyFrom">The amount and currency of money to be converted.</param>
            <param name="currencyTo">The currency to convert the given money to.</param>
            <returns>The converted money.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CurrencyFormatter.CanBeConverted(Mediachase.Commerce.Money,Mediachase.Commerce.Currency)">
            <summary>
            Determines whether this instance [can be converted] the specified money from.
            </summary>
            <param name="moneyFrom">The money from.</param>
            <param name="currencyTo">The currency to.</param>
            <returns>
            	<c>true</c> if this instance [can be converted] the specified money from; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CurrencyFormatter.CanBeConverted(Mediachase.Commerce.Currency,Mediachase.Commerce.Currency)">
            <summary>
            Determines whether this instance [can be converted] the specified currency from.
            </summary>
            <param name="currencyFrom">The currency from.</param>
            <param name="currencyTo">The currency to.</param>
            <returns>
            	<c>true</c> if this instance [can be converted] the specified currency from; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.CurrencyFormatter.GetRates(Mediachase.Commerce.Currency,Mediachase.Commerce.Currency)">
            <summary>
            Gets the exchange rates.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Shared.EncryptionManager">
            <summary>
            Implements operations for the encryption manager.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Shared.EncryptionManager.BytesToHex(System.Byte[])">
            <summary>
            Converts an byte array to a hexadecimal encoded string.
            </summary>
            <param name="bytes">The byte array to convert.</param>
            <returns>The hexadecimal encoded bytes.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.EncryptionManager.BytesToBase64(System.Byte[])">
            <summary>
            Converst a byte array to a Base64 encoded string.
            </summary>
            <param name="bytes">The byte array to convert.</param>
            <returns>The Base64 encoded bytes.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.EncryptionManager.Encrypt(System.String)">
            <summary>
            Encrypts the specified STR plain text.
            </summary>
            <param name="strPlainText">The STR plain text.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.EncryptionManager.Decrypt(System.String)">
            <summary>
            Decrypts the specified STR cipher text.
            </summary>
            <param name="strCipherText">The STR cipher text.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.EncryptionManager.EncryptDecrytString(System.Byte[],System.Boolean)">
            <summary>
            Encrypts and decryt string using certificate and symetric key.
            </summary>
            <param name="rawData">The raw data.</param>
            <param name="encrypt">if set to <c>true</c> [encrypt].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.EncryptionManager.InitializeDataContext">
            <summary>
            Initializes the data context.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.IProgressMessenger.AddProgressMessageText(System.String,System.Boolean,System.Int32)">
            <summary>
            Adds the progress message text.
            </summary>
            <param name="message">The message.</param>
            <param name="error">if set to <c>true</c> [error].</param>
            <param name="percent">The current progress percent.</param>
        </member>
        <member name="T:Mediachase.Commerce.Shared.ResourceEnumConverter">
            <summary>
            Defines a type converter for enum values that converts enum values to 
            and from string representations using resources
            </summary>
            <remarks>
            This class makes localization of display values for enums in a project easy.  Simply
            derive a class from this class and pass the ResourceManagerin the constructor.  
            
            <code lang="C#" escaped="true" >
            class LocalizedEnumConverter : ResourceEnumConverter
            {
               public LocalizedEnumConverter(Type type)
                   : base(type, Properties.Resources.ResourceManager)
               {
               }
            }    
            </code>
            
            <code lang="Visual Basic" escaped="true" >
            Public Class LocalizedEnumConverter
            
               Inherits ResourceEnumConverter
               Public Sub New(ByVal sType as Type)
                   MyBase.New(sType, My.Resources.ResourceManager)
               End Sub
            End Class    
            </code>
            
            Then define the enum values in the resource editor.   The names of
            the resources are simply the enum value prefixed by the enum type name with an
            underscore separator eg MyEnum_MyValue.  You can then use the TypeConverter attribute
            to make the LocalizedEnumConverter the default TypeConverter for the enums in your
            project.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Shared.ResourceEnumConverter.GetLookupTable(System.Globalization.CultureInfo)">
            <summary>
            Get the lookup table for the given culture (creating if necessary)
            </summary>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.ResourceEnumConverter.GetValueText(System.Object)">
            <summary>
            Return the text to display for a simple value in the given culture, uses SharedStrings resource file to lookup enum values
            </summary>
            <param name="value">The enum value to get the text for</param>
            <returns>
            The localized text
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.ResourceEnumConverter.IsSingleBitValue(System.UInt64)">
            <summary>
            Return true if the given value is can be represented using a single bit
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.ResourceEnumConverter.GetFlagValueText(System.Globalization.CultureInfo,System.Object)">
            <summary>
            Return the text to display for a flag value in the given culture
            </summary>
            <param name="culture">The culture to get the text for</param>
            <param name="value">The flag enum value to get the text for</param>
            <returns>The localized text</returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.ResourceEnumConverter.GetValue(System.Globalization.CultureInfo,System.String)">
            <summary>
            Return the Enum value for a simple (non-flagged enum)
            </summary>
            <param name="culture">The culture to convert using</param>
            <param name="text">The text to convert</param>
            <returns>The enum value</returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.ResourceEnumConverter.GetFlagValue(System.Globalization.CultureInfo,System.String)">
            <summary>
            Return the Enum value for a flagged enum
            </summary>
            <param name="culture">The culture to convert using</param>
            <param name="text">The text to convert</param>
            <returns>The enum value</returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.ResourceEnumConverter.#ctor(System.Type)">
            <summary>
            Create a new instance of the converter using translations from the given resource manager
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Mediachase.Commerce.Shared.ResourceEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert string values to enum values
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.ResourceEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert the enum value to a string
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.ResourceEnumConverter.ConvertToString(System.Enum)">
            <summary>
            Convert the given enum value to string using the registered type converter
            </summary>
            <param name="value">The enum value to convert to string</param>
            <returns>The localized string value for the enum</returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.ResourceEnumConverter.GetValues(System.Type,System.Globalization.CultureInfo)">
            <summary>
            Return a list of the enum values and their associated display text for the given enum type
            </summary>
            <param name="enumType">The enum type to get the values for</param>
            <param name="culture">The culture to get the text for</param>
            <returns>
            A list of KeyValuePairs where the key is the enum value and the value is the text to display
            </returns>
            <remarks>
            This method can be used to provide localized binding to enums in ASP.NET applications.   Unlike 
            windows forms the standard ASP.NET controls do not use TypeConverters to convert from enum values
            to the displayed text.   You can bind an ASP.NET control to the list returned by this method by setting
            the DataValueField to "Key" and theDataTextField to "Value". 
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Shared.ResourceEnumConverter.GetValues(System.Type)">
            <summary>
            Return a list of the enum values and their associated display text for the given enum type in the current UI Culture
            </summary>
            <param name="enumType">The enum type to get the values for</param>
            <returns>
            A list of KeyValuePairs where the key is the enum value and the value is the text to display
            </returns>
            <remarks>
            This method can be used to provide localized binding to enums in ASP.NET applications.   Unlike 
            windows forms the standard ASP.NET controls do not use TypeConverters to convert from enum values
            to the displayed text.   You can bind an ASP.NET control to the list returned by this method by setting
            the DataValueField to "Key" and theDataTextField to "Value". 
            </remarks>
        </member>
        <member name="T:Mediachase.Commerce.Shared.SearchOptions">
            <summary>
            Implements operations for and represents the search options.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Shared.SearchOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Shared.SearchOptions"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Shared.SearchOptions.#ctor(Mediachase.Commerce.Shared.SearchOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Shared.SearchOptions"/> class.
            </summary>
            <param name="copy">The copy.</param>
        </member>
        <member name="P:Mediachase.Commerce.Shared.SearchOptions.Classes">
            <summary>
            Gets or sets the classes.
            </summary>
            <value>The classes.</value>
        </member>
        <member name="P:Mediachase.Commerce.Shared.SearchOptions.RecordsToRetrieve">
            <summary>
            Gets or sets the records to retrieve.
            </summary>
            <value>The records to retrieve.</value>
        </member>
        <member name="P:Mediachase.Commerce.Shared.SearchOptions.StartingRecord">
            <summary>
            Gets or sets the starting record.
            </summary>
            <value>The starting record.</value>
        </member>
        <member name="P:Mediachase.Commerce.Shared.SearchOptions.ReturnTotalCount">
            <summary>
            Gets or sets a value indicating whether [return total count].
            </summary>
            <value><c>true</c> if [return total count]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.Commerce.Shared.SearchOptions.Namespace">
            <summary>
            Gets or sets the namespace.
            </summary>
            <value>The namespace.</value>
        </member>
        <member name="P:Mediachase.Commerce.Shared.SearchOptions.CacheResults">
            <summary>
            Gets or sets a value indicating whether [cache results].
            </summary>
            <value><c>true</c> if [cache results]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.Commerce.Shared.SearchOptions.CacheTimeout">
            <summary>
            Gets or sets the cache timeout.
            </summary>
            <value>The cache timeout.</value>
        </member>
        <member name="P:Mediachase.Commerce.Shared.SearchOptions.CacheKey">
            <summary>
            Gets the cache key.
            </summary>
            <value>The cache key.</value>
        </member>
        <member name="T:Mediachase.Commerce.Shared.SearchParameters">
            <summary>
            Search parameters that can be specified to control what SQL Command is executed on the server.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Shared.SearchParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Shared.SearchParameters"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Shared.SearchParameters.JoinType">
            <summary>
            Gets or sets the type of the join used in the query. 
            The example types are: inner join, outer join, left join and right join.
            </summary>
            <value>The type of the join.</value>
        </member>
        <member name="P:Mediachase.Commerce.Shared.SearchParameters.JoinSourceTable">
            <summary>
            Gets or sets the join source table. This value has to be a table name that exists in original
            query. For example it will be CatalogEntry for the Catalog Entry Search or CatalogNode for the Catalog
            Node Search.
            </summary>
            <value>The join source table.</value>
        </member>
        <member name="P:Mediachase.Commerce.Shared.SearchParameters.JoinTargetQuery">
            <summary>
            Gets or sets the join target query. This can either be a table name or a complete query. For exammple
            the table name can be something like CatalogEntryEx for the Catalog Entry search. This particular join will allow
            sorting by meta fields. This is not possible without a join. In some cases the target table can contain multiple 
            records for the same record in source table. That will cause problems with constraints that are inforces by the
            search DTOs. In order to overcome this, you can specify the query, so if our CatalogEntryEx table had multiple
            records for one CatalogEntry, we would join it using the follow query:
            (select distinct ObjectId, DisplayName from CatalogEntryEx) CatalogEntryEx
            </summary>
            <value>The join target table.</value>
        </member>
        <member name="P:Mediachase.Commerce.Shared.SearchParameters.JoinSourceTableKey">
            <summary>
            Gets or sets the join source table key.
            </summary>
            <value>The join source table key.</value>
        </member>
        <member name="P:Mediachase.Commerce.Shared.SearchParameters.JoinTargetTableKey">
            <summary>
            Gets or sets the join target table key.
            </summary>
            <value>The join target table key.</value>
        </member>
        <member name="P:Mediachase.Commerce.Shared.SearchParameters.SqlWhereClause">
            <summary>
            Gets or sets the SQL where clause. You can specify filter conditions against the tables returned by the query.
            </summary>
            <value>The SQL where clause.</value>
        </member>
        <member name="P:Mediachase.Commerce.Shared.SearchParameters.SqlMetaWhereClause">
            <summary>
            Gets or sets the SQL meta where clause. You can specify filters for meta tables. Make sure to specifiy columns that
            exist for items searched.
            </summary>
            <value>The SQL meta where clause.</value>
        </member>
        <member name="P:Mediachase.Commerce.Shared.SearchParameters.KeywordSearchPhrase">
            <summary>
            Gets or sets the keyword text search phrase.
            </summary>
            <value>The keyword text search phrase.</value>
        </member>
        <member name="P:Mediachase.Commerce.Shared.SearchParameters.OrderByClause">
            <summary>
            Gets or sets the order by clause.
            </summary>
            <value>The order by clause.</value>
        </member>
        <member name="P:Mediachase.Commerce.Shared.SearchParameters.CacheKey">
            <summary>
            Gets the cache key. Used to generate hash that will be used to store data in memory if needed.
            </summary>
            <value>The cache key.</value>
        </member>
        <member name="T:Mediachase.Commerce.Shared.XmlSerializerSectionHandler">
            <summary>
            Implements the handler for the XML serializer section. (Inherits <see cref="T:System.Configuration.IConfigurationSectionHandler"/>.)
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Shared.XmlSerializerSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            Creates a configuration section handler.
            </summary>
            <param name="parent">Parent object.</param>
            <param name="configContext">Configuration context object.</param>
            <param name="section">Section XML node.</param>
            <returns>The created section handler object.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Shared.XmlSerializerSectionHandler.CreateInternal(System.Object,System.Object,System.Xml.XmlNode,System.String)">
            <summary>
            Creates the internal.
            </summary>
            <param name="parent">The parent.</param>
            <param name="configContext">The config context.</param>
            <param name="section">The section.</param>
            <param name="typeName">Name of the type.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Storage.DataHelper">
            <summary>
            Implements helper methods for the storage data.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Storage.DataHelper.SaveTableSimple(Mediachase.Data.Provider.DataCommand,System.Data.DataTable)">
            <summary>
            Saves the table simple.
            </summary>
            <param name="cmd">The CMD.</param>
            <param name="table">The table.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.DataHelper.SaveTableSimple(Mediachase.Data.Provider.DataCommand,System.Data.DataTable,System.Data.DataRow[])">
            <summary>
            Saves the table simple.
            </summary>
            <param name="cmd">The CMD.</param>
            <param name="table">The table.</param>
            <param name="rows">The rows.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.DataHelper.SaveDataSetSimple(Mediachase.Data.Provider.DataCommand,System.Data.DataSet,System.String[])">
            <summary>
            Saves the data set simple.
            </summary>
            <param name="cmd">The CMD.</param>
            <param name="set">The set.</param>
            <param name="tables">The tables.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.DataHelper.PopulateParamsFromColumns(Mediachase.Data.Provider.DataCommand@,System.Data.DataColumnCollection)">
            <summary>
            Populates the params from columns.
            </summary>
            <param name="command">The command.</param>
            <param name="columns">The columns.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.DataHelper.MapTables(System.String[])">
            <summary>
            Maps the tables.
            </summary>
            <param name="names">The names.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.DataHelper.MapTables2(System.String[],System.String[])">
            <summary>
            Maps the tables.
            </summary>
            <param name="dbNames">The names.</param>
            <param name="dataSetNames">The data set names.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.DataHelper.CreateInsertStoredProcedureName(System.String)">
            <summary>
            Creates the name of the insert stored procedure.
            </summary>
            <param name="TableName">Name of the table.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.DataHelper.CreateUpdateStoredProcedureName(System.String)">
            <summary>
            Creates the name of the update stored procedure.
            </summary>
            <param name="TableName">Name of the table.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.DataHelper.CreateDeleteStoredProcedureName(System.String)">
            <summary>
            Creates the name of the delete stored procedure.
            </summary>
            <param name="TableName">Name of the table.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.DataHelper.CreateDataReader(System.Data.DataTable,System.String)">
            <summary>
            Creates the data reader.
            </summary>
            <param name="sourceTable">The source table.</param>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.DataHelper.CreateDataView(System.Data.DataTable,System.String)">
            <summary>
            Creates the data view.
            </summary>
            <param name="sourceTable">The source table.</param>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.DataHelper.GetDataRows(System.Data.DataTable,System.String)">
            <summary>
            Gets the data rows based on filter.
            </summary>
            <param name="sourceTable">The source table.</param>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Storage.DataOperation">
            <summary>
            The DataOperation enumeration defines the storage data operation types.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Storage.DataOperation.Create">
            <summary>
            Represents the data creation operation.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Storage.DataOperation.Update">
            <summary>
            Represents the data update operation.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Storage.DataOperation.Delete">
            <summary>
            Represents the data deletion operation.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Storage.DefaultConnectionStringHandler">
            <summary>
            Handles connection string information for the CMS and Commerce database.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Storage.DefaultConnectionStringHandler.Cms">
            <summary>
            Connection string settings for the CMS database.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Storage.DefaultConnectionStringHandler.Commerce">
            <summary>
            Connection string settings for the commerce database.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Storage.IStorageObject">
            <summary>
            Storage object interface.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Storage.IStorageObject.ObjectState">
            <summary>
            Gets the state of the object.
            </summary>
            <value>The state of the object.</value>
        </member>
        <member name="M:Mediachase.Commerce.Storage.IStorageObject.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Storage.MetaHelper">
            <summary>
            Implements operations for the meta helper.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaHelper.GetMetaFieldValue(Mediachase.MetaDataPlus.Configurator.MetaField,System.Object)">
            <summary>
            Gets the meta field value.
            </summary>
            <param name="mf">The mf.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaHelper.SetMetaFieldValue(Mediachase.MetaDataPlus.MetaDataContext,Mediachase.MetaDataPlus.MetaObject,System.String,System.Object[])">
            <summary>
            Sets values for the meta object's meta field. Doesn't set file and image values.
            </summary>
            <param name="context">The context.</param>
            <param name="obj">The obj.</param>
            <param name="fieldName">Name of the field.</param>
            <param name="values">The values.</param>
            <returns>True, if value was set successfully.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaHelper.SetMetaFile(Mediachase.MetaDataPlus.MetaDataContext,Mediachase.MetaDataPlus.MetaObject,System.String,System.String,System.String,System.Byte[])">
            <summary>
            Sets MetaFile and Image values
            </summary>
            <param name="context">The context.</param>
            <param name="obj">The obj.</param>
            <param name="fieldName">Name of the field.</param>
            <param name="name">The name.</param>
            <param name="contentType">Type of the content.</param>
            <param name="fileContents">The file contents.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaHelper.Deserialize(System.Byte[])">
            <summary>
            Deserializes the specified serialized data.
            </summary>
            <param name="serializedData">The serialized data.</param>
            <returns>The deserialized object, or null if the input was null or contained errors.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Storage.MetaObjectAccessor">
            <summary>
            Facade for accessing meta object data.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectAccessor.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Storage.MetaObjectAccessor" /> class
            for reading values from meta objects.
            </summary>
            <param name="objectId">The object id (entry/node). Used if serialized data is empty or can't be deserialized.</param>
            <param name="metaClassId">The meta class id. Used if serialized data is empty or can't be deserialized.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectAccessor.#ctor(Mediachase.MetaDataPlus.MetaObject,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Storage.MetaObjectAccessor"/> class.
            for reading values from a specific meta object.
            </summary>
            <param name="metaObject">The meta object.</param>
            <param name="language">The language of the meta object.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectAccessor.GetMetaClass">
            <summary>
            Gets the meta class using the current meta data context.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectAccessor.GetMetaClass(Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Gets the meta class.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectAccessor.GetCreated(System.String)">
            <summary>
            Gets the created date.
            </summary>
            <param name="language">The language.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectAccessor.GetCreated(Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Gets the created date.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectAccessor.GetCreatorId(System.String)">
            <summary>
            Gets the creator id.
            </summary>
            <param name="language">The language.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectAccessor.GetCreatorId(Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Gets the creator id.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectAccessor.GetModified(System.String)">
            <summary>
            Gets the modified date.
            </summary>
            <param name="language">The language.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectAccessor.GetModified(Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Gets the modified date.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectAccessor.GetModifierId(System.String)">
            <summary>
            Gets the modifier id.
            </summary>
            <param name="language">The language.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectAccessor.GetModifierId(Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Gets the modifier id.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectAccessor.GetFieldValues(System.String)">
            <summary>
            Gets the field values.
            </summary>
            <param name="language">The language.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectAccessor.GetFieldValues(Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Gets the field values.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Storage.MetaObjectSerialized">
            <summary>
            This is the object that will serialized in the system field to improve read performance of the
            meta data engine.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Storage.MetaObjectSerialized.SerializedFieldName">
            <summary>
            Public string literal for the serialized field name.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Storage.MetaObjectSerialized.CreatorId">
            <summary>
            Gets or sets the creator id.
            </summary>
            <value>The creator id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Storage.MetaObjectSerialized.Created">
            <summary>
            Gets or sets the created.
            </summary>
            <value>The created.</value>
        </member>
        <member name="P:Mediachase.Commerce.Storage.MetaObjectSerialized.ModifierId">
            <summary>
            Gets or sets the modifier id.
            </summary>
            <value>The modifier id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Storage.MetaObjectSerialized.Modified">
            <summary>
            Gets or sets the modified.
            </summary>
            <value>The modified.</value>
        </member>
        <member name="P:Mediachase.Commerce.Storage.MetaObjectSerialized.FieldStorage">
            <summary>
            Gets the field storage.
            </summary>
            <value>The field storage.</value>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectSerialized.GetCreatorId(System.String,System.Boolean)">
            <summary>
            Gets the creator id for a specific language
            </summary>
            <param name="language">The language to get the creator id for.</param>
            <param name="fallbackToNonLanguageSpecific">If <c>true</c>, the language with minimum create date will be used to get the creator id.</param>
            <returns>The creator id for the specific language.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectSerialized.GetCreated(System.String,System.Boolean)">
            <summary>
            Gets the created date for a specific language
            </summary>
            <param name="language">The language to get the created date for.</param>
            <param name="fallbackToNonLanguageSpecific">If <c>true</c>, the language with minimum create date will be used.</param>
            <returns>The created date for the specific language.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectSerialized.GetModifierId(System.String,System.Boolean)">
            <summary>
            Gets the modifier id for a specific language
            </summary>
            <param name="language">The language to get the modifier id for.</param>
            <param name="fallbackToNonLanguageSpecific">If <c>true</c>, the language with maximum modified date will be used to get the modifier id.</param>
            <returns>The modifier id for the specific language.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectSerialized.GetModified(System.String,System.Boolean)">
            <summary>
            Gets the modified date for a specific language
            </summary>
            <param name="language">The language to get the modified date for.</param>
            <param name="fallbackToNonLanguageSpecific">If <c>true</c>, the language with maximum modified date will be used.</param>
            <returns>The modified date for the specific language.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectSerialized.GetValues(System.String)">
            <summary>
            Gets the values.
            </summary>
            <param name="language">The language.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectSerialized.CreateNew(System.Byte[])">
            <summary>
            Creates the new MetaObjectSerialized object from the binary array.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Storage.MetaObjectSerialized.BinaryValue">
            <summary>
            Gets the binary value.
            </summary>
            <value>The binary value.</value>
            <summary>
            Gets the binary value.
            </summary>
            <value>The binary value.</value>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectSerialized.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Storage.MetaObjectSerialized"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectSerialized.#ctor(System.Collections.Generic.Dictionary{System.String,Mediachase.MetaDataPlus.MetaObject})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Storage.MetaObjectSerialized"/> class.
            </summary>
            <param name="objects">The objects.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectSerialized.AddMetaObject(System.String,Mediachase.MetaDataPlus.MetaObject)">
            <summary>
            Adds the meta object.
            </summary>
            <param name="language">The language.</param>
            <param name="metaObject">The meta object.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectSerialized.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Storage.MetaObjectSerialized"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaObjectSerialized.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
        </member>
        <member name="T:Mediachase.Commerce.Storage.MetaStorageBase">
            <summary>
            Base class for objects that contain meta fields.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Storage.MetaStorageBase.SystemFieldStorage">
            <summary>
            Gets the system field storage.
            </summary>
            <value>The system field storage.</value>
        </member>
        <member name="P:Mediachase.Commerce.Storage.MetaStorageBase.StorageCollection">
            <summary>
            Gets or sets the storage collection.
            </summary>
            <value>The storage collection.</value>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.#ctor(Mediachase.MetaDataPlus.Configurator.MetaClass,System.Data.IDataReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Storage.MetaStorageBase"/> class.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.#ctor(Mediachase.MetaDataPlus.Configurator.MetaClass)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Storage.MetaStorageBase"/> class.
            </summary>
            <param name="metaClass">The meta class.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.#ctor(Mediachase.MetaDataPlus.Configurator.MetaClass,System.Func{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.MetaDataPlus.MetaObject"/> class.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="getFieldValue">The delegate to get field values.</param>
            <remarks>
             If <paramref name="getFieldValue"/> returns null for a field it will be set to:
             - null, if the field allows nulls.
             - null, if the field is of a complex type (according to <see cref="M:Mediachase.MetaDataPlus.Configurator.MetaDataTypes.IsComplexType(Mediachase.MetaDataPlus.Configurator.MetaDataType)"/>).
             - The default value for the field type (from <see cref="M:Mediachase.MetaDataPlus.Configurator.MetaDataTypes.GetDefaultValue(Mediachase.MetaDataPlus.Configurator.MetaDataType)"/>), if the field does not allow nulls.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.Storage.MetaStorageBase.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified field name.
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.SetMetaField(System.String,System.Object,System.Boolean)">
            <summary>
            Sets the named metafield to the value.  If validation is enabled, the type of the value is checked and the state of the object is updated.
            </summary>
            <param name="fieldName">The name of the meta field to set.</param>
            <param name="value">The value to set in the field.</param>
            <param name="validate">If <c>true</c>, the value type is checked and the object state is updated.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.Load(System.Data.IDataReader)">
            <summary>
            Loads the specified reader.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.Load(System.Data.DataRowView)">
            <summary>
            Loads the specified row.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.FindMetaField(System.String)">
            <summary>
            Finds the meta field.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Storage.MetaStorageBase.SystemMetaClass">
            <summary>
            Gets the system meta class.
            </summary>
            <value>The system meta class.</value>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.AcceptChanges(Mediachase.MetaDataPlus.MetaDataContext,System.Boolean)">
            <summary>
            Accepts the changes.
            </summary>
            <param name="context">The context.</param>
            <param name="saveSystem">if set to <c>true</c> [save system].</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.AcceptChanges(Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Accepts the changes.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.Delete">
            <summary>
            Deletes this instance.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.ProcessInsertUpdateResults(Mediachase.Data.Provider.DataResult)">
            <summary>
            Processes the insert update results.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.CreateParameters(Mediachase.Data.Provider.DataCommand)">
            <summary>
            Creates the parameters.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.CreateInsertCommand(Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Creates the insert command.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.CreateUpdateCommand(Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Creates the update command.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.CreateDeleteCommand(Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Creates the delete command.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.PopulateCollections(System.Data.DataTableCollection,System.String)">
            <summary>
            Populates collections within table. The tables used will be removed from
            the table collection.
            Override this method to populate your custom collection objects.
            </summary>
            <param name="tables">The tables.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.MarkNew">
            <summary>
            Marks current instance as new which will cause new record to be created in the database for the specified object.
            This is useful for creating duplicates of existing objects.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.SetParent(System.Object)">
            <summary>
            Sets the parent.
            </summary>
            <param name="Parent">The parent.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.Clone">
            <summary>
            Clone the object, and returning a reference to a cloned object.
            </summary>
            <returns>Reference to the new cloned 
            object.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Storage.MetaStorageBase"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            The actual cloning is performed by the <see cref="M:Mediachase.Commerce.Storage.MetaStorageBase.DeepCloneImplementation"/>
            method which is the extension point for subclasses.
            </summary>
            <returns>A new object that is a deep copy of the current instance.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.ReadXml(System.Xml.XmlReader)">
            <inheritdoc />
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageBase.WriteXml(System.Xml.XmlWriter)">
            <inheritdoc />
        </member>
        <member name="T:Mediachase.Commerce.Storage.MetaStorageCollectionBase`1">
            <summary>
            Collection of MetaStorageBase objects.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageCollectionBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Storage.MetaStorageCollectionBase`1"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Storage.MetaStorageCollectionBase`1.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageCollectionBase`1.Add(`0)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageCollectionBase`1.IndexOf(`0)">
            <summary>
            Indexes the of.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageCollectionBase`1.Remove(`0)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageCollectionBase`1.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageCollectionBase`1.RefreshCollection">
            <summary>
            Refreshes the collection.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageCollectionBase`1.MarkNew">
            <summary>
            Marks all instances in collection as new which will cause new record to be created in the database for the specified object.
            This is useful for creating duplicates of existing objects.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageCollectionBase`1.ToArray">
            <summary>
            Copies the elements to an array.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageCollectionBase`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageObservableCollection`2.#ctor(Mediachase.Commerce.Storage.MetaStorageCollectionBase{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Storage.MetaStorageObservableCollection`2" /> class.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="P:Mediachase.Commerce.Storage.MetaStorageObservableCollection`2.Items">
            <summary>
            Gets the items.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Storage.MetaStorageObservableCollection`2.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Storage.SimpleObject">
            <summary>
            Implements operations for simple storage objects. (Inherits <see cref="T:Mediachase.Commerce.Storage.IStorageObject"/>, <see cref="T:System.ICloneable"/>, <see cref="T:System.Runtime.Serialization.ISerializable"/>.)
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Storage.SimpleObject.ObjectState">
            <summary>
            Gets the state of the object.
            </summary>
            <value>The state of the object.</value>
        </member>
        <member name="P:Mediachase.Commerce.Storage.SimpleObject.StorageCollection">
            <summary>
            Gets or sets the storage collection.
            </summary>
            <value>The storage collection.</value>
        </member>
        <member name="P:Mediachase.Commerce.Storage.SimpleObject.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>The name of the table.</value>
        </member>
        <member name="P:Mediachase.Commerce.Storage.SimpleObject.FieldStorage">
            <summary>
            Gets the field storage.
            </summary>
            <value>The field storage.</value>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.Delete">
            <summary>
            Deletes this instance.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.ChangeState">
            <summary>
            Changes the state.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.Load(System.Data.IDataReader)">
            <summary>
            Loads the specified reader.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.Load(System.Data.DataRowView)">
            <summary>
            Loads the specified row.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.Load(System.Data.DataRow)">
            <summary>
            Loads the specified row.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="P:Mediachase.Commerce.Storage.SimpleObject.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified field name.
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.MarkNew">
            <summary>
            Marks current instance as new which will cause new record to be created in the database for the specified object.
            This is useful for creating duplicates of existing objects.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.OnSaved(Mediachase.Data.Provider.DataResult)">
            <summary>
            Called when [saved].
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.CreateInsertCommand">
            <summary>
            Creates the insert command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.CreateUpdateCommand">
            <summary>
            Creates the update command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.CreateDeleteCommand">
            <summary>
            Creates the delete command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.GetString(System.String)">
            <summary>
            Gets the string.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.IsNullValue(System.Object)">
            <summary>
            Determines whether [is null value] [the specified val].
            </summary>
            <param name="val">The val.</param>
            <returns>
            	<c>true</c> if [is null value] [the specified val]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.GetInt(System.String)">
            <summary>
            Gets the int.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.GetBool(System.String)">
            <summary>
            Gets the bool.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.GetGuid(System.String)">
            <summary>
            Gets the GUID.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.GetInt32(System.String)">
            <summary>
            Gets the int32.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.GetDateTime(System.String)">
            <summary>
            Gets the date time.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.GetDecimal(System.String)">
            <summary>
            Gets the decimal.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.Clone">
            <summary>
            Clone the object, and returning a reference to a cloned object.
            </summary>
            <returns>Reference to the new cloned 
            object.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Storage.SimpleObject"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Storage.SimpleObject"/> class.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Storage.SimpleObjectCollectionBase`1">
            <summary>
            Simple object collection.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObjectCollectionBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Storage.SimpleObjectCollectionBase`1"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Storage.SimpleObjectCollectionBase`1.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObjectCollectionBase`1.Add(`0)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObjectCollectionBase`1.IndexOf(`0)">
            <summary>
            Indexes the of.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObjectCollectionBase`1.Remove(`0)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObjectCollectionBase`1.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObjectCollectionBase`1.MarkNew">
            <summary>
            Marks all instances in collection as new which will cause new record to be created in the database for the specified object.
            This is useful for creating duplicates of existing objects.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Storage.SimpleObjectCollectionBase`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Storage.StorageCollectionBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Storage.StorageCollectionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Storage.StorageCollectionBase"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Storage.StorageCollectionBase.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Storage.StorageCollectionBase"/> class.
            </summary>
            <param name="capacity">The capacity.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.StorageCollectionBase.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.IList"></see>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only. </exception>
        </member>
        <member name="M:Mediachase.Commerce.Storage.StorageCollectionBase.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.IList"></see> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.IList"></see>. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
        </member>
        <member name="M:Mediachase.Commerce.Storage.StorageCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">array is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero. </exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or- index is equal to or greater than the length of array.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"></see> is greater than the available space from index to the end of the destination array. </exception>
            <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.ICollection"></see> cannot be cast automatically to the type of the destination array. </exception>
        </member>
        <member name="M:Mediachase.Commerce.Storage.StorageCollectionBase.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList"></see>.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to add to the <see cref="T:System.Collections.IList"></see>.</param>
            <returns>
            The position into which the new element was inserted.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
        </member>
        <member name="M:Mediachase.Commerce.Storage.StorageCollectionBase.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList"></see> contains a specific value.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to locate in the <see cref="T:System.Collections.IList"></see>.</param>
            <returns>
            true if the <see cref="T:System.Object"></see> is found in the <see cref="T:System.Collections.IList"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.StorageCollectionBase.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList"></see>.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to locate in the <see cref="T:System.Collections.IList"></see>.</param>
            <returns>
            The index of value if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Storage.StorageCollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList"></see> at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The <see cref="T:System.Object"></see> to insert into the <see cref="T:System.Collections.IList"></see>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.IList"></see>. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
            <exception cref="T:System.NullReferenceException">value is null reference in the <see cref="T:System.Collections.IList"></see>.</exception>
        </member>
        <member name="M:Mediachase.Commerce.Storage.StorageCollectionBase.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList"></see>.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to remove from the <see cref="T:System.Collections.IList"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
        </member>
        <member name="P:Mediachase.Commerce.Storage.StorageCollectionBase.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.Commerce.Storage.StorageCollectionBase.Capacity">
            <summary>
            Gets or sets the capacity.
            </summary>
            <value>The capacity.</value>
        </member>
        <member name="P:Mediachase.Commerce.Storage.StorageCollectionBase.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"></see>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.ICollection"></see>.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Storage.StorageCollectionBase.InnerList">
            <summary>
            Gets the inner list.
            </summary>
            <value>The inner list.</value>
        </member>
        <member name="P:Mediachase.Commerce.Storage.StorageCollectionBase.DeletedList">
            <summary>
            Gets the deleted list.
            </summary>
            <value>The deleted list.</value>
        </member>
        <member name="P:Mediachase.Commerce.Storage.StorageCollectionBase.List">
            <summary>
            Gets the list.
            </summary>
            <value>The list.</value>
        </member>
        <member name="P:Mediachase.Commerce.Storage.StorageCollectionBase.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe).
            </summary>
            <value></value>
            <returns>true if access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Storage.StorageCollectionBase.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.
            </summary>
            <value></value>
            <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Storage.StorageCollectionBase.System#Collections#IList#IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"></see> has a fixed size.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IList"></see> has a fixed size; otherwise, false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Storage.StorageCollectionBase.System#Collections#IList#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"></see> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IList"></see> is read-only; otherwise, false.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Storage.StorageCollectionBase.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.Commerce.Storage.StorageCollectionBase.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList"></see>.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to remove from the <see cref="T:System.Collections.IList"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
        </member>
        <member name="M:Mediachase.Commerce.Storage.StorageCollectionBase.DeleteItem(System.Object)">
            <summary>
            Deletes the item.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.StorageCollectionBase.RemoveDeletedItem(System.Object)">
            <summary>
            Removes the deleted item.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.StorageCollectionBase.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Storage.StorageCollectionEnumerator">
            <summary>
            Implements operations for the storage collection enumerator. (Inherits <see cref="T:System.IDisposable"/>, <see cref="T:System.Collections.IEnumerator"/>.)
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Storage.StorageCollectionEnumerator.#ctor(System.Collections.ArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Storage.StorageCollectionEnumerator"/> class.
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="M:Mediachase.Commerce.Storage.StorageCollectionEnumerator.System#Collections#IEnumerator#MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:Mediachase.Commerce.Storage.StorageCollectionEnumerator.System#Collections#IEnumerator#Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:Mediachase.Commerce.Storage.StorageCollectionEnumerator.System#IDisposable#Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Storage.StorageCollectionEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <value></value>
            <returns>The current element in the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
        </member>
        <member name="M:Mediachase.Commerce.TypedTableBaseExtensions.CatalogIdChanged(System.Data.DataRow)">
            <summary>
            Verify if catalogId of datarow was changed.
            </summary>
            <param name="dataRow">The data row</param>
        </member>
        <member name="T:Mediachase.Commerce.WorkflowCompatibility.Activity">
            <summary>
            Represents the base class for activity.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.WorkflowCompatibility.Activity.Context">
            <summary>
            The context of activity flow execution which contains the activity as a step.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.WorkflowCompatibility.Activity.Initialize(Mediachase.Commerce.Engine.ActivityFlowContext)">
            <summary>
            Initializes the Activity.
            </summary>
            <param name="context">A activity flow execution context.</param>
        </member>
        <member name="M:Mediachase.Commerce.WorkflowCompatibility.Activity.Execute(Mediachase.Commerce.WorkflowCompatibility.ActivityExecutionContext)">
            <summary>
            Executes the activity.
            </summary>
            <param name="executionContext">the <see cref="T:Mediachase.Commerce.WorkflowCompatibility.ActivityExecutionContext"/> object.</param>
            <returns>status of the activity execution.</returns>
        </member>
        <member name="M:Mediachase.Commerce.WorkflowCompatibility.Activity.Execute">
            <summary>
            Executes the activity.
            </summary>
            <returns>Flag to indicate whether the activity is completed or not.</returns>
        </member>
        <member name="M:Mediachase.Commerce.WorkflowCompatibility.Activity.ValidateProperties(Mediachase.Commerce.WorkflowCompatibility.ValidationErrorCollection)">
            <summary>
            Validate the properties of activity.
            </summary>
            <param name="validationErrors">The validation errors.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.WorkflowCompatibility.Activity.AddHandler(System.String,System.EventHandler)">
            <summary>
            Adds a handler for an event.
            </summary>
            <param name="eventName">Name of the event.</param>
            <param name="handler">Handler of the event.</param>
        </member>
        <member name="M:Mediachase.Commerce.WorkflowCompatibility.Activity.RaiseEvent(System.String,System.EventArgs)">
            <summary>
            Raises an event of the activity.
            </summary>
            <param name="eventName">Name of the event.</param>
            <param name="args">The event arguments.</param>
        </member>
        <member name="T:Mediachase.Commerce.WorkflowCompatibility.ActivityExecutionContext">
            <summary>
            Represents the execution environment of an <see cref="T:Mediachase.Commerce.WorkflowCompatibility.Activity"/>.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.WorkflowCompatibility.ActivityExecutionStatus">
            <summary>
            Enumeration of activity status values that correspond to the life cycle of
            an activity within a running workflow instance.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.WorkflowCompatibility.ActivityExecutionStatus.Initialized">
            <summary>
            Represents the status when an activity is being initialized.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.WorkflowCompatibility.ActivityExecutionStatus.Executing">
            <summary>
            Represents the status when an activity is executing.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.WorkflowCompatibility.ActivityExecutionStatus.Canceling">
            <summary>
            Represents the status when an activity is in the process of being canceled.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.WorkflowCompatibility.ActivityExecutionStatus.Closed">
            <summary>
            Represents the status when an activity is closed.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.WorkflowCompatibility.ActivityExecutionStatus.Compensating">
            <summary>
            Represents the status when an activity is compensating.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.WorkflowCompatibility.ActivityExecutionStatus.Faulting">
            <summary>
            Represents the status when an activity is faulting.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.WorkflowCompatibility.ConditionalEventArgs">
            <summary>
            Represents the event argument for code condition.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.WorkflowCompatibility.ConditionalEventArgs.Result">
            <summary>
            Gets or sets the result of a evaluation.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.WorkflowCompatibility.ValidationError">
            <summary>
            Represents the base class for all validation errors.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.WorkflowCompatibility.ValidationError.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.WorkflowCompatibility.ValidationError"/> class;
            initializes the error text and error numbers for this instance.
            </summary>
            <param name="errorText">The associated error text for this instance.</param>
            <param name="errorNumber">The error number for this error.</param>
        </member>
        <member name="M:Mediachase.Commerce.WorkflowCompatibility.ValidationError.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.WorkflowCompatibility.ValidationError"/> class;
            initializes the error text, error number and error type for this instance.
            </summary>
            <param name="errorText">The associated error text for this instance.</param>
            <param name="errorNumber">The error number for this error.</param>
            <param name="isWarning">A Boolean which is <c>true</c> if the error is considered a warning and <c>false</c> otherwise.</param>
        </member>
        <member name="M:Mediachase.Commerce.WorkflowCompatibility.ValidationError.#ctor(System.String,System.Int32,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.WorkflowCompatibility.ValidationError"/> class;
            initializing the error text, the error number, the error type and the property name associated with the error.
            </summary>
            <param name="errorText">The associated error text for this instance.</param>
            <param name="errorNumber">The error number for this error.</param>
            <param name="isWarning">A Boolean which is <c>true</c> if the error is considered a warning and <c>false</c> otherwise.</param>
            <param name="propertyName">The name of the property associated with this error.</param>
        </member>
        <member name="M:Mediachase.Commerce.WorkflowCompatibility.ValidationError.GetNotSetValidationError(System.String)">
            <summary>
            Creates a new validation error defined for the error type of a property not being set.
            </summary>
            <param name="propertyName">The property associated with this error.</param>
            <returns>A new validation error defined for the error type of a property not being set</returns>
        </member>
        <member name="M:Mediachase.Commerce.WorkflowCompatibility.ValidationError.ToString">
            <summary>
            Provides a string representation of this instance incorporating the error
            type (error or warning) the error number and the error text.
            </summary>
            <returns>A string representation of this instance incorporating the error type (error
            or warning) the error number and the error text.</returns>
        </member>
        <member name="P:Mediachase.Commerce.WorkflowCompatibility.ValidationError.ErrorNumber">
            <summary>
            Gets the error number of this instance.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.WorkflowCompatibility.ValidationError.ErrorText">
            <summary>
            Gets the error text for this instance.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.WorkflowCompatibility.ValidationError.IsWarning">
            <summary>
            Gets a value that indicates whether this instance is a warning.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.WorkflowCompatibility.ValidationError.PropertyName">
            <summary>
            Gets or sets the name of the property that failed to validate.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.WorkflowCompatibility.ValidationError.UserData">
            <summary>
            Gets an System.Collections.IDictionary for the definition and storage of
            user-defined data related to this instance.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.WorkflowCompatibility.ValidationErrorCollection">
            <summary>
            Holds a collection of <see cref="T:Mediachase.Commerce.WorkflowCompatibility.ValidationError"/> objects.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.WorkflowCompatibility.ValidationErrorCollection.HasErrors">
            <summary>
            Indicates whether the collection contains <see cref="T:Mediachase.Commerce.WorkflowCompatibility.ValidationError"/>
            objects that indicate compilation errors.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.WorkflowCompatibility.ValidationErrorCollection.HasWarnings">
            <summary>
            This property indicates whether the <see cref="T:Mediachase.Commerce.WorkflowCompatibility.ValidationErrorCollection"/>
            contains at least one <see cref="T:Mediachase.Commerce.WorkflowCompatibility.ValidationError"/>
            object, which indicates a compilation warning.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.WorkflowCompatibility.WorkflowValidationFailedException">
            <summary>
            Represents an System.Exception that occurs when a workflow does not pass
            validation. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.WorkflowCompatibility.WorkflowValidationFailedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.WorkflowCompatibility.WorkflowValidationFailedException"/>
            class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.WorkflowCompatibility.WorkflowValidationFailedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.WorkflowCompatibility.WorkflowValidationFailedException"/>
            class. The exception message is passed as a parameter.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Mediachase.Commerce.WorkflowCompatibility.WorkflowValidationFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.WorkflowCompatibility.WorkflowValidationFailedException"/>
            class. The exception message and the inner exception are passed as parameters.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The <see cref="P:System.Exception.InnerException"/> associated with this exception.</param>
        </member>
        <member name="M:Mediachase.Commerce.WorkflowCompatibility.WorkflowValidationFailedException.#ctor(System.String,Mediachase.Commerce.WorkflowCompatibility.ValidationErrorCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.WorkflowCompatibility.WorkflowValidationFailedException"/>
            class. The exception message and the errors collection are passed as parameters.
            </summary>
            <param name="message">The exception message.</param>
            <param name="errors">The <see cref="T:Mediachase.Commerce.WorkflowCompatibility.ValidationErrorCollection"/> 
            associated with this exception.</param>
        </member>
        <member name="P:Mediachase.Commerce.WorkflowCompatibility.WorkflowValidationFailedException.Errors">
            <summary>
            Returns <see cref="T:Mediachase.Commerce.WorkflowCompatibility.ValidationError"/>s that were
            obtained when creating/validating workflows.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Extensions.FulfillmentStatusExtensions">
            <summary>
            Extension methods for <see cref="T:EPiServer.Commerce.Marketing.FulfillmentStatus"/>.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Extensions.FulfillmentStatusExtensions.GetRewardDescriptionText(EPiServer.Commerce.Marketing.FulfillmentStatus)">
            <summary>
            Gets the reward description text based on a promotion's <see cref="T:EPiServer.Commerce.Marketing.FulfillmentStatus"/>.
            </summary>
            <param name="fulfillmentStatus">The applied promotion's <see cref="T:EPiServer.Commerce.Marketing.FulfillmentStatus"/>.</param>
            <returns>The reward description text.</returns>
            <remarks>By default, get the reward description text from promotion's resource.</remarks>
        </member>
        <member name="M:EPiServer.Commerce.Extensions.FulfillmentStatusExtensions.GetRewardDescriptionText(EPiServer.Commerce.Marketing.FulfillmentStatus,EPiServer.Framework.Localization.LocalizationService)">
            <summary>
            Gets the reward description text based on a promotion's <see cref="T:EPiServer.Commerce.Marketing.FulfillmentStatus"/>.
            </summary>
            <param name="fulfillmentStatus">The applied promotion's <see cref="T:EPiServer.Commerce.Marketing.FulfillmentStatus"/>.</param>
            <param name="localizationService">The localization service.</param>
            <returns>The reward description text.</returns>
            <remarks>By default, get the reward description text from promotion's resource.</remarks>
        </member>
        <member name="M:EPiServer.Commerce.Extensions.FulfillmentStatusExtensions.GetRewardDescriptionText(EPiServer.Commerce.Marketing.FulfillmentStatus,System.Type)">
            <summary>
            Gets the reward description text based on a promotion's <see cref="T:EPiServer.Commerce.Marketing.FulfillmentStatus"/>.
            </summary>
            <param name="fulfillmentStatus">The applied promotion's <see cref="T:EPiServer.Commerce.Marketing.FulfillmentStatus"/>.</param>
            <param name="promotionType">The <see cref="T:System.Type"/> of the promotion.</param>
            <returns>The reward description text.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Extensions.FulfillmentStatusExtensions.GetRewardDescriptionText(EPiServer.Commerce.Marketing.FulfillmentStatus,System.Type,EPiServer.Framework.Localization.LocalizationService)">
            <summary>
            Gets the reward description text based on a promotion's <see cref="T:EPiServer.Commerce.Marketing.FulfillmentStatus"/>.
            </summary>
            <param name="fulfillmentStatus">The applied promotion's <see cref="T:EPiServer.Commerce.Marketing.FulfillmentStatus"/>.</param>
            <param name="promotionType">The <see cref="T:System.Type"/> of the promotion.</param>
            <param name="localizationService">The localization service.</param>
            <returns>The reward description text.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Extensions.FulfillmentStatusExtensions.GetRewardDescriptionText(EPiServer.Commerce.Marketing.FulfillmentStatus,System.String,EPiServer.Framework.Localization.LocalizationService)">
            <summary>
            Gets the reward description text based on a promotion's <see cref="T:EPiServer.Commerce.Marketing.FulfillmentStatus"/>.
            </summary>
            <param name="fulfillmentStatus">The applied promotion's <see cref="T:EPiServer.Commerce.Marketing.FulfillmentStatus"/>.</param>
            <param name="promotionType">The name of promotion's <see cref="T:System.Type"/>.</param>
            <param name="localizationService">The localization service.</param>
            <returns>The reward description text.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Marketing.DefaultCouponUsage">
            <summary>
            Default implementation which doesn't do anything.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.DefaultCouponUsage.Report(System.Collections.Generic.IEnumerable{EPiServer.Commerce.Marketing.PromotionInformation})">
            <summary>
            Does nothing. This implementation does not care about used codes.
            </summary>
            <param name="appliedPromotions">The applied promotions, containing the used coupon code where applicable.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:EPiServer.Commerce.Marketing.DiscountType">
            <summary>
            Type of discount amount.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.DiscountType.None">
            <summary>
            No line item discount type.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.DiscountType.LineItem">
            <summary>
            <see cref="P:EPiServer.Commerce.Order.ILineItemDiscountAmount.EntryAmount"/>
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.DiscountType.Order">
            <summary>
            <see cref="P:EPiServer.Commerce.Order.ILineItemDiscountAmount.OrderAmount"/>
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.DiscountType.Shipping">
            <summary>
            <see cref="P:EPiServer.Commerce.Order.IShipmentDiscountAmount.ShipmentDiscount"/>
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.DiscountType.Manual">
            <summary>
            Manual discount type.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Marketing.FulfillmentStatus">
            <summary>
            The fulfillment level of a promotion. Only promotions with the status Fulfilled will have their rewards applied.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.FulfillmentStatus.NotFulfilled">
            <summary>
            The promotion's conditions is not fulfilled at all.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.FulfillmentStatus.PartiallyFulfilled">
            <summary>
            Some, but not all, of the promotion's condititions are fulfilled.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.FulfillmentStatus.Fulfilled">
            <summary>
            The promotion is fulfilled and the reward should be applied.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.FulfillmentStatus.CouponCodeRequired">
            <summary>
            The promotion required a coupon code to be applied. Modifier, use in conjunction with <see cref="F:EPiServer.Commerce.Marketing.FulfillmentStatus.NotFulfilled"/> etc.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.FulfillmentStatus.Excluded">
            <summary>
            The promotion was excluded by another promotion with higher priority. Modifier, use in conjunction with <see cref="F:EPiServer.Commerce.Marketing.FulfillmentStatus.NotFulfilled"/>.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.FulfillmentStatus.VisitorGroupRequired">
            <summary>
            The promotion required the user to be part of a visitor group to be applied. Modifier, use in conjunction with <see cref="F:EPiServer.Commerce.Marketing.FulfillmentStatus.NotFulfilled"/> etc.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.FulfillmentStatus.RedemptionLimitReached">
            <summary>
            The redemption limit for this promotion has been reached, so it can not be fulfilled.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.FulfillmentStatus.NoMoneySaved">
            <summary>
            The promotion didn't save any money.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.FulfillmentStatus.InvalidCoupon">
            <summary>
            Combines the flags <see cref="F:EPiServer.Commerce.Marketing.FulfillmentStatus.NotFulfilled"/> and <see cref="F:EPiServer.Commerce.Marketing.FulfillmentStatus.CouponCodeRequired"/>.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.FulfillmentStatus.InvalidCombination">
            <summary>
            Combines the flags <see cref="F:EPiServer.Commerce.Marketing.FulfillmentStatus.NotFulfilled"/> and <see cref="F:EPiServer.Commerce.Marketing.FulfillmentStatus.Excluded"/>.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.FulfillmentStatus.MissingVisitorGroup">
            <summary>
            Combines the flags <see cref="F:EPiServer.Commerce.Marketing.FulfillmentStatus.NotFulfilled"/> and <see cref="F:EPiServer.Commerce.Marketing.FulfillmentStatus.VisitorGroupRequired"/>.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.FulfillmentStatus.NoRedemptionRemaining">
            <summary>
            Combines the flags <see cref="F:EPiServer.Commerce.Marketing.FulfillmentStatus.NotFulfilled"/> and <see cref="F:EPiServer.Commerce.Marketing.FulfillmentStatus.RedemptionLimitReached"/>.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.FulfillmentStatus.Ineffective">
            <summary>
            Combines the flags <see cref="F:EPiServer.Commerce.Marketing.FulfillmentStatus.NotFulfilled"/> and <see cref="F:EPiServer.Commerce.Marketing.FulfillmentStatus.NoMoneySaved"/>.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Marketing.ICouponUsage">
            <summary>
            Tracks coupon usage for promotions.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.ICouponUsage.Report(System.Collections.Generic.IEnumerable{EPiServer.Commerce.Marketing.PromotionInformation})">
            <summary>
            Handles any reported used coupons, e.g. marking single-use coupon codes as used.
            </summary>
            <param name="appliedPromotions">The applied promotions, containing the used coupon code where applicable.</param>
        </member>
        <member name="T:EPiServer.Commerce.Marketing.Internal.MarketingStatistic">
            <summary>
            This class is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
            
            Class representing a marketing statistic per one subject (ex.: Campaign, Promotion, ...)
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.Internal.MarketingStatistic.Id">
            <summary>
            Gets the statistic subject id.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.Internal.MarketingStatistic.Value">
            <summary>
            Gets the total orders number.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.Internal.MarketingStatistic.#ctor(System.Guid,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Commerce.Marketing.Internal.MarketingStatistic"/> class.
            </summary>
            <param name="id">The statistic subject id.</param>
            <param name="value">The statistic value.</param>
        </member>
        <member name="T:EPiServer.Commerce.Marketing.Internal.MarketingStatisticRepository">
            <summary>
            This class is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
            
            Repository for <see cref="T:EPiServer.Commerce.Marketing.Internal.MarketingStatistic"/>s.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.Internal.MarketingStatisticRepository.#ctor(EPiServer.IContentLoader,EPiServer.Framework.Cache.ISynchronizedObjectInstanceCache,EPiServer.Web.IPermanentLinkMapper)">
            <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Commerce.Marketing.Internal.MarketingStatisticRepository" /> class.
            </summary>
            <param name="contentLoader">The content loader.</param>
            <param name="cache">The cache.</param>
            <param name="permanentLinkMapper">The permanent link mapper.</param>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.Internal.MarketingStatisticRepository.#ctor(EPiServer.IContentLoader,EPiServer.Framework.Cache.ISynchronizedObjectInstanceCache,EPiServer.Web.IPermanentLinkMapper,Mediachase.Commerce.Marketing.MarketingOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Commerce.Marketing.Internal.MarketingStatisticRepository" /> class.
            </summary>
            <param name="contentLoader">The content loader.</param>
            <param name="cache">The cache.</param>
            <param name="permanentLinkMapper">The permanent link mapper.</param>
            <param name="marketingOptions">The marketing options.</param>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.Internal.MarketingStatisticRepository.GetStatistic(EPiServer.Core.ContentReference)">
            <summary>
            Gets statistics per subject that is an instance of <see cref="T:EPiServer.Core.ContentReference"/>.
            </summary>
            <param name="source">The source used to calculate statistic.</param>
            <returns>Calculated statistic <see cref="T:EPiServer.Commerce.Marketing.Internal.MarketingStatistic"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.Internal.MarketingStatisticRepository.GetStatisticsFromDatabase(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Loads <see cref="T:EPiServer.Commerce.Marketing.Internal.MarketingStatistic"/>s from database.
            </summary>
            <param name="guids">The promotion/campaign guids.</param>
            <returns>A list of <see cref="T:EPiServer.Commerce.Marketing.Internal.MarketingStatistic"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.Internal.MarketingStatisticRepository.ClearCache">
            <summary>
            Clear the statistics cache.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.Internal.MarketingStatisticRepository.CreatePromotionGuidTable(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Creates a data table for a collection of promotion guid.
            </summary>
            <param name="promotionGuidCollection">A collection of promotion guid.</param>
            <returns>A <see cref="T:System.Data.DataTable"/> that contains a collection of promotion guid row.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Marketing.PromotionInformation">
            <summary>
            Information about an applied promotion.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformation.Name">
            <summary>
            Gets or sets the name of the processed promotion.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformation.Description">
            <summary>
            Gets or sets a description of the result when the promotion was processed.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformation.SavedAmount">
            <summary>
            Gets the amount saved by the promotion.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformation.RewardType">
            <summary>
            Gets or sets the reward type, can be percentage or amount or free.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformation.DiscountType">
            <summary>
            Gets or sets the promotion's discount type.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformation.PromotionGuid">
            <summary>
            Gets or sets the guid of the applied promotion.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformation.Entries">
            <summary>
            Gets or sets the information for the entries which the promotion was applied to.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformation.Shipments">
            <summary>
            Gets or sets the information for the shipments which the promotion was applied to.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformation.OrderForm">
            <summary>
            Gets or sets the order promotion information.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformation.OrderFormId">
            <summary>
            Gets or sets the id of the order form this promotion belongs to.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformation.AdditionalInformation">
            <summary>
            Gets or sets additional information. Additional information can be added before storing the promotion information.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformation.CouponCode">
            <summary>
            Gets or sets the coupon code used to activate the promotion.
            </summary>
            <value>
            The coupon code, or null if no coupon code was required.
            </value>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformation.VisitorGroup">
            <summary>
            Gets or sets the visitor group used to activate the promotion.
            </summary>
            <value>
            The visitor group ID, or <c>null</c> if no visitor group was required.
            </value>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformation.CustomerId">
            <summary>
            Gets or sets the id of the customer redeeming the promotion.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformation.IsRedeemed">
            <summary>
            Gets or sets a value indicating whether to include in redemption count.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformation.IsReturnOrderForm">
            <summary>
            Gets or sets a value indicating whether this promotion is applied to a return order form.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.PromotionInformation.Clone">
            <summary>
            Clones the instance of the <see cref="T:EPiServer.Commerce.Marketing.PromotionInformation"/>.
            </summary>
            <returns>Cloned PromotionInformation instance.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.PromotionInformation.ClearSavedAmount">
            <summary>
            Clean up saved amount
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.PromotionInformation.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance,
            including deep clones <see cref="P:EPiServer.Commerce.Marketing.PromotionInformation.Entries"/>, <see cref="P:EPiServer.Commerce.Marketing.PromotionInformation.OrderForm"/>
            and <see cref="P:EPiServer.Commerce.Marketing.PromotionInformation.Shipments"/>.
            </summary>
            <returns>A new object that is a deep copy of the current instance.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Marketing.PromotionInformationEntry">
            <summary>
            Information about an applied promotion of individual entry.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformationEntry.EntryCode">
            <summary>
            Gets or sets the code of entry which the promotion was applied to.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformationEntry.SavedAmount">
            <summary>
            Gets or sets the amount saved by the promotion.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.PromotionInformationEntry.Clone">
            <summary>
            Clones the instance of <see cref="T:EPiServer.Commerce.Marketing.PromotionInformationEntry"/>.
            </summary>
            <returns>Cloned PromotionInformationEntry instance.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Marketing.PromotionInformationOrderForm">
            <summary>
            Information about an applied promotion of type order promotion.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformationOrderForm.SavedAmount">
            <summary>
            Gets or sets the saved amount for order promotions.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.PromotionInformationOrderForm.Clone">
            <summary>
            Clones the instance of <see cref="T:EPiServer.Commerce.Marketing.PromotionInformationOrderForm"/>.
            </summary>
            <returns>Cloned PromotionInformationOrderForm instance.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Marketing.PromotionInformationRepository">
            <summary>
            <see cref="T:EPiServer.Commerce.Marketing.PromotionInformation"/> repository for the content promotion system.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.PromotionInformationRepository.CacheMasterKey">
            <summary>
            The cache master key must be the same with the <see cref="T:EPiServer.Commerce.Marketing.Internal.MarketingStatisticRepository"/> in order to invalidate cache when save or delete an order.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.PromotionInformationRepository.#ctor(EPiServer.Framework.Cache.ISynchronizedObjectInstanceCache,EPiServer.IContentLoader)">
            <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Commerce.Marketing.PromotionInformationRepository" /> class.
            </summary>
            <param name="cache">The cache used for promotion redemptions.</param>
            <param name="contentLoader">The content loader used for finding all promotions belonging to a certain campaign.</param>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.PromotionInformationRepository.#ctor(EPiServer.Framework.Cache.ISynchronizedObjectInstanceCache,EPiServer.IContentLoader,Mediachase.Commerce.Marketing.MarketingOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Commerce.Marketing.PromotionInformationRepository" /> class.
            </summary>
            <param name="cache">The cache used for promotion redemptions.</param>
            <param name="contentLoader">The content loader used for finding all promotions belonging to a certain campaign.</param>
            <param name="marketingOptions">The marketing options.</param>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.PromotionInformationRepository.Save(System.Collections.Generic.IEnumerable{EPiServer.Commerce.Marketing.PromotionInformation})">
            <summary>
            Saves a collection of <see cref="T:EPiServer.Commerce.Marketing.PromotionInformation"/>s.
            </summary>
            <param name="promotionInformations">The promotion information to save.</param>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.PromotionInformationRepository.GetRedemptions(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Loads the redemption information of the given collection of promotions.
            </summary>
            <param name="promotions">A collection of <see cref="T:EPiServer.Core.ContentReference"/>s representing the promotions to be fetched.</param>
            <returns>
            Information about the usage of each promotion for the provided customer.
            </returns>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.PromotionInformationRepository.GetRedemptions(System.Collections.Generic.IEnumerable{System.Guid},System.Guid,System.Nullable{System.Int32})">
            <summary>
            Loads redemption information of for the given collection of promotions and the given customer.
            </summary>
            <param name="promotions">A collection of <see cref="T:EPiServer.Core.ContentReference"/>s representing the promotions to be fetched.</param>
            <param name="customerId">The customer identifier.</param>
            <param name="orderFormId">An optional ID for the current order form which should be excluded in the resultset.</param>
            <returns>Information about the usage of each promotion for the provided customer.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.PromotionInformationRepository.GetRedemptionsPerCampaign(EPiServer.Core.ContentReference)">
            <summary>
            Loads the redemption information for all promotions belonging to the specified campaign.
            </summary>
            <param name="campaignLink">The campaign link.</param>
            <returns>Information about the usage of each promotion in the campaign.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.PromotionInformationRepository.Delete(System.Int32)">
            <summary>
            Deletes promotion informations for an order.
            </summary>
            <param name="orderFormId">Order form id.</param>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.PromotionInformationRepository.Load(EPiServer.Commerce.Order.IOrderForm)">
            <summary>
            Loads promotion information for an order.
            </summary>
            <param name="orderForm">The related order form.</param>
            <returns>Promotion information for the order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.PromotionInformationRepository.Load(System.Int32,System.Data.DataTableCollection)">
            <summary>
            Loads promotion information for an order.
            </summary>
            <param name="orderFormId">OrderForm Id.</param>
            <param name="tables">Collection of DataTables.</param>
            <returns>Promotion information for the order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.PromotionInformationRepository.GetRedemptionsFromDatabase(System.Collections.Generic.IEnumerable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Int32})">
            <summary>
            Loads redemption information from the database.
            </summary>
            <param name="promotions">A list of promotion ID:s that should be included in the result. An empty list will return all promotions.</param>
            <param name="customerId">The customer identifier. Pass null value to return redemption information of all customers.</param>
            <param name="orderFormId">An optional ID for the current order form which should be excluded in the resultset.</param>
        </member>
        <member name="T:EPiServer.Commerce.Marketing.PromotionInformationShipment">
            <summary>
            Information about an applied promotion of individual shipment.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformationShipment.ShippingMethodId">
            <summary>
            Gets or sets the shipping method guid of shipment which the promotion was applied to.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformationShipment.OrderAddressName">
            <summary>
            Gets or sets the order address name of shipment which the promotion was applied to.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformationShipment.ShippingMethodName">
            <summary>
            Gets or sets the shipping method name of shipment which the promotion was applied to.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionInformationShipment.SavedAmount">
            <summary>
            Gets or sets the amount saved by the promotion.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.PromotionInformationShipment.Clone">
            <summary>
            Clones the instance of <see cref="T:EPiServer.Commerce.Marketing.PromotionInformationShipment"/>.
            </summary>
            <returns>Cloned PromotionInformationShipment instance.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Marketing.PromotionRedemption">
            <summary>
            Class representing how many times a promotion has been redeemed by customers.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Marketing.PromotionRedemption.#ctor(System.Guid,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Commerce.Marketing.PromotionRedemption"/> class.
            </summary>
            <param name="promotionGuid">The promotion guid.</param>
            <param name="totalRedemptions">The total redemptions of the promotion.</param>
            <param name="customerRedemptions">The redemptions of a specific customer.</param>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionRedemption.PromotionGuid">
            <summary>
            Gets the promotion guid.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionRedemption.TotalRedemptions">
            <summary>
            Gets the total number of times this promotion has been redeemed.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Marketing.PromotionRedemption.CustomerRedemptions">
            <summary>
            Gets the number of times this promotion has been redeemed by a specific customer.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Marketing.RewardType">
            <summary>
            The type of reward a promotion will give.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.RewardType.None">
            <summary>
            No reward type specified.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.RewardType.Money">
            <summary>
            A monetary reward.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.RewardType.Percentage">
            <summary>
            A percentage reward.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.RewardType.Free">
            <summary>
            A reward of one or more free items.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.RewardType.FixedPrice">
            <summary>
            Fixed price reward.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Marketing.RewardType.Gift">
            <summary>
            A reward of one or more gift items.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.ICart">
            <summary>
                Represents a shopping cart in the system.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.ICreditCardPayment">
            <summary>
            Represents Credit Card type of payment.
            </summary>
            <seealso cref="T:EPiServer.Commerce.Order.IPayment" />
        </member>
        <member name="P:EPiServer.Commerce.Order.ICreditCardPayment.CardType">
            <summary>
            Gets or sets the type of the card. Types typically are VISA, MasterCard, AMEX.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ICreditCardPayment.CreditCardNumber">
            <summary>
            Gets or sets the credit card number. The field is not encrypted by default. 
            Encryption should be handled by the layer calling the property.
            </summary>
            <remarks>It is NOT recommended to store this data, even encrypted.
            Storing credit card number is a security risk and is not compliant with PCI standards.
            More information can be found at https://www.pcisecuritystandards.org/
            </remarks>
        </member>
        <member name="P:EPiServer.Commerce.Order.ICreditCardPayment.CreditCardSecurityCode">
            <summary>
            Gets or sets the credit card security code.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ICreditCardPayment.ExpirationMonth">
            <summary>
            Gets or sets the expiration month. Goes from 1 to 12.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ICreditCardPayment.ExpirationYear">
            <summary>
            Gets or sets the expiration year.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ICreditCardPayment.ProviderPaymentId">
            <summary>
            Gets or sets the provider payment identifier.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ICreditCardPayment.PaymentType">
            <summary>
            Gets the type of the payment.
            </summary>
            <value>
            The type of the payment.
            </value>
        </member>
        <member name="T:EPiServer.Commerce.Order.ILineItem">
            <summary>
                Represents a line item in the system, the actual item that is bought.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ILineItem.LineItemId">
            <summary>
            Gets the identity of the line item.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ILineItem.Code">
            <summary>
            Gets the code of the variation content the line item represent. This property works as the connection between the line item and the variation content.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ILineItem.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ILineItem.PlacedPrice">
            <summary>
            Gets the price for one item that this line item represent. This property don't take any discounts in consideration. 
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ILineItem.Quantity">
            <summary>
            Gets or sets the number of items this line item contains.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ILineItem.ReturnQuantity">
            <summary>
            Gets or sets the returned in stock quantity.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ILineItem.InventoryTrackingStatus">
            <summary>
            Gets or sets the inventory tracking status on whether to check inventory.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ILineItem.IsInventoryAllocated">
            <summary>
            Gets or sets a value indicating whether this instance has allocated inventory for the <see cref="P:EPiServer.Commerce.Order.ILineItem.Quantity"/>.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ILineItem.IsGift">
            <summary>
            Gets or sets a value indicating whether the line item is a gift item.
            </summary>
            <value>
              <c>true</c> if the line item is a gift item; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EPiServer.Commerce.Order.ILineItem.TaxCategoryId">
            <summary>
            Gets or sets the tax category id.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ILineItem.ParentOrderGroup">
            <summary>
            Gets the parent order group.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.ILineItemCalculator">
            <summary>
             Calculates the extended price for a <see cref="T:EPiServer.Commerce.Order.ILineItem"/>.
            </summary>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/LineItemCalculatorSample.cs" region="LineItemCalculatorSample" lang="cs" />
            </example>
        </member>
        <member name="M:EPiServer.Commerce.Order.ILineItemCalculator.GetExtendedPrice(EPiServer.Commerce.Order.ILineItem,Mediachase.Commerce.Currency)">
            <summary>
            Gets the extended price of an <see cref="T:EPiServer.Commerce.Order.ILineItem"/>.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="LineItemGetExtendedPrice" lang="cs" />
            </example>
            <returns>The rounded extended price of the line item.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.ILineItemCalculator.GetDiscountedPrice(EPiServer.Commerce.Order.ILineItem,Mediachase.Commerce.Currency)">
            <summary>
            Gets the discounted price of an <see cref="T:EPiServer.Commerce.Order.ILineItem"/>.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="LineItemGetDiscountedPrice" lang="cs" />
            </example>
            <returns>The discounted price of the line item.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.ILineItemCalculator.GetLineItemPrices(EPiServer.Commerce.Order.ILineItem,Mediachase.Commerce.Currency)">
            <summary>
            Gets the extended and discounted prices of an <see cref="T:EPiServer.Commerce.Order.ILineItem"/>.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="LineItemGetLineItemPrices" lang="cs" />
            </example>
            <returns>The prices for the line item.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.ILineItemCalculator.GetSalesTax(EPiServer.Commerce.Order.ILineItem,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency,EPiServer.Commerce.Order.IOrderAddress)">
            <summary>
            Gets the sales tax of an <see cref="T:EPiServer.Commerce.Order.ILineItem"/>.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <param name="shippingAddress">The shipping address to be used in the calculations.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="LineItemGetSalesTax" lang="cs" />
            </example>
            <returns>The sales tax of the line item.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.ILineItemCalculator.GetSalesTax(System.Collections.Generic.IEnumerable{EPiServer.Commerce.Order.ILineItem},Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency,EPiServer.Commerce.Order.IOrderAddress)">
            <summary>
            Gets the sales tax of a collection of <see cref="T:EPiServer.Commerce.Order.ILineItem"/>s.
            </summary>
            <param name="lineItems">The line items.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <param name="shippingAddress">The shipping address to be used in the calculations.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="LineItemGetSalesTaxes" lang="cs" />
            </example>
            <returns>The sales tax for the line item.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.ILineItemDiscountAmount">
            <summary>
            Represents the discount amount applied  to a line item.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ILineItemDiscountAmount.EntryAmount">
            <summary>
            Gets or sets the discount amount set for this specific line item. This property are normally set by the promotion system.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ILineItemDiscountAmount.OrderAmount">
            <summary>
            Gets the discount amount not specifically set for this line item. This property will contain the total order level discount for the whole order divided by the number of line items the order contains.
            </summary>
            <value>
            The order level discount amount.
            </value>
        </member>
        <member name="T:EPiServer.Commerce.Order.ILineItemExtensions">
            <summary>
                Extension methods for <see cref="T:EPiServer.Commerce.Order.ILineItem" />
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.ILineItemExtensions.GetExtendedPrice(EPiServer.Commerce.Order.ILineItem,Mediachase.Commerce.Currency)">
            <summary>
            Gets the extended price of the line item.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="currency">The currency.</param>
        </member>
        <member name="M:EPiServer.Commerce.Order.ILineItemExtensions.GetExtendedPrice(EPiServer.Commerce.Order.ILineItem,Mediachase.Commerce.Currency,EPiServer.Commerce.Order.ILineItemCalculator)">
            <summary>
            Gets the extended price of the line item.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="currency">The currency.</param>
            <param name="calculator">The line item calculator.</param>
        </member>
        <member name="M:EPiServer.Commerce.Order.ILineItemExtensions.GetDiscountedPrice(EPiServer.Commerce.Order.ILineItem,Mediachase.Commerce.Currency)">
            <summary>
            Gets the discounted price of the line item.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="currency">The currency.</param>
            <returns>The discounted price of the line item.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.ILineItemExtensions.GetDiscountedPrice(EPiServer.Commerce.Order.ILineItem,Mediachase.Commerce.Currency,EPiServer.Commerce.Order.ILineItemCalculator)">
            <summary>
            Gets the discounted price of the line item.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="currency">The currency.</param>
            <param name="calculator">The line item calculator.</param>
            <returns>The discounted price of the line item.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.ILineItemExtensions.GetLineItemPrices(EPiServer.Commerce.Order.ILineItem,Mediachase.Commerce.Currency)">
            <summary>
            Gets the extended and discounted prices of the line item.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="currency">The currency.</param>
            <returns>The prices for the line item.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.ILineItemExtensions.GetLineItemPrices(EPiServer.Commerce.Order.ILineItem,Mediachase.Commerce.Currency,EPiServer.Commerce.Order.ILineItemCalculator)">
            <summary>
            Gets the extended and discounted prices of the line item.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="currency">The currency.</param>
            <param name="calculator">The line item calculator.</param>
            <returns>The prices for the line item.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.ILineItemExtensions.GetDiscountTotal(EPiServer.Commerce.Order.ILineItem,Mediachase.Commerce.Currency)">
            <summary>
            Gets the total of order level and line item level discounts of the line item.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="currency">The currency.</param>
            <returns>The total discount of the given line item.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.ILineItemExtensions.GetSalesTax(EPiServer.Commerce.Order.ILineItem,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency,EPiServer.Commerce.Order.IOrderAddress)">
            <summary>
            Gets the sales tax of the line item.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency.</param>
            <param name="shippingAddress">The shipping address.</param>
            <returns>The sales tax.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.ILineItemExtensions.GetSalesTax(EPiServer.Commerce.Order.ILineItem,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency,EPiServer.Commerce.Order.IOrderAddress,EPiServer.Commerce.Order.ILineItemCalculator)">
            <summary>
            Gets the sales tax of the line item.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency.</param>
            <param name="shippingAddress">The shipping address.</param>
            <param name="calculator">The line item calculator.</param>
            <returns>The sales tax.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.ILineItemExtensions.CopyPropertiesFrom(EPiServer.Commerce.Order.ILineItem,EPiServer.Commerce.Order.ILineItem)">
            <summary>
            Copy properties from a source line item
            </summary>
            <param name="destinationLineItem">The destination line item.</param>
            <param name="sourceLineItem">The source line item.</param>
        </member>
        <member name="T:EPiServer.Commerce.Order.Internal.DefaultPurchaseOrderFactory">
            <summary>
            This class is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
            
            Responsible for creating instances of purchase order components.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.DefaultPurchaseOrderFactory.#ctor(EPiServer.Commerce.Order.IReturnOrderNumberGenerator)">
            <summary>
            Initializes an instance of <see cref="T:EPiServer.Commerce.Order.Internal.DefaultPurchaseOrderFactory"/>.
            </summary>
            <param name="returnOrderNumberGenerator">The return order number generator.</param>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.DefaultPurchaseOrderFactory.CreateReturnOrderForm(EPiServer.Commerce.Order.IPurchaseOrder)">
            <summary>
            Creates the return order form.
            </summary>
            <param name="purchaseOrder">The order group to create object for.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IReturnOrderForm"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.DefaultPurchaseOrderFactory.CreateReturnShipment(EPiServer.Commerce.Order.IShipment)">
            <summary>
            Creates a <see cref="T:EPiServer.Commerce.Order.IShipment"/> for the return.
            </summary>
            <param name="originalShipment">The original shipment.</param>
            <returns>An instance of <see cref="T:EPiServer.Commerce.Order.IShipment"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.DefaultPurchaseOrderFactory.CreateReturnLineItem(EPiServer.Commerce.Order.ILineItem,System.Decimal,System.String)">
            <summary>
            Creates a return line item.
            </summary>
            <param name="originalLineItem">The original line item.</param>
            <param name="returnQuantity">The return quantity.</param>
            <param name="returnReason">The return reason.</param>
            <returns>An instance of <see cref="T:EPiServer.Commerce.Order.IReturnLineItem"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.DefaultPurchaseOrderFactory.CreateExchangePayment">
            <summary>
            Creates a payment for an exchange order.
            </summary>
            <returns>An instance of <see cref="T:EPiServer.Commerce.Order.IPayment"/>.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.Internal.ICartSearchService">
            <summary>
            This interface is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.ICartSearchService.FindCarts(EPiServer.Commerce.Order.OrderSearchFilter,System.Int32@)">
            <summary>
            Finds <see cref="T:EPiServer.Commerce.Order.ICart"/> by a set of parameters.
            </summary>
            <param name="filter">The filter options when finding cart.</param>
            <param name="totalRecords">The total records returned.</param>
            <returns>A collection of <see cref="T:EPiServer.Commerce.Order.ICart"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.ICartSearchService.FindCarts(EPiServer.Commerce.Orders.OrderSearchField,System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            Finds <see cref="T:EPiServer.Commerce.Order.ICart"/> by search field and search value.
            </summary>
            <param name="searchField">The search field use to search. For example: Email, CustomerName.</param>
            <param name="searchValue">The search value.</param>
            <param name="excludedCartNames">The cart names that will be excluded when finding carts.</param>
            <param name="startIndex">The starting index of record to retrieve.</param>
            <param name="recordsToRetrieve">The number of records to retrieve.</param>    
            <param name="returnTotalCount">The flag to indicate if the search should return the total count of matched carts.</param>
            <param name="totalRecords">The total records returned.</param>
            <returns>A collection of <see cref="T:EPiServer.Commerce.Order.ICart"/>.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.Internal.ILineItemCalculatedAmount">
            <summary>
            This interface is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
            
            Represents the calculated amount from calculators for a line item.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.ILineItemCalculatedAmount.IsSalesTaxUpToDate">
            <summary>
            Gets or sets the flag indicating whether the <see cref="P:EPiServer.Commerce.Order.Internal.ILineItemCalculatedAmount.SalesTax"/> is up-to-date.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.ILineItemCalculatedAmount.SalesTax">
            <summary>
            Gets or sets sales tax amount.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.ILineItemCalculatedAmount.PricesIncludeTax">
            <summary>
            Gets the setting of including tax in price from the order group.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.Internal.ILineItemExtensions">
            <summary>
            Extensions method for <see cref= "T:EPiServer.Commerce.Order.ILineItem" /> 
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.ILineItemExtensions.TryGetDiscountValue(EPiServer.Commerce.Order.ILineItem,System.Linq.Expressions.Expression{System.Func{EPiServer.Commerce.Order.ILineItemDiscountAmount,System.Decimal}})">
            <summary>
            Access to the line item discount amount writable properties.
            </summary>
            <param name="lineItem">The line item to be casted</param>
            <param name="property">The property to get the value from.</param>
            <returns>The value from <paramref name="property"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.ILineItemExtensions.GetEntryDiscountValue(EPiServer.Commerce.Order.ILineItem)">
            <summary>
            Gets the <see cref="P:EPiServer.Commerce.Order.ILineItemDiscountAmount.EntryAmount"/> property of the <see cref="T:EPiServer.Commerce.Order.ILineItemDiscountAmount"/> implementation
            on the <see cref="T:EPiServer.Commerce.Order.ILineItem"/> instance passed in. If <see cref="T:EPiServer.Commerce.Order.ILineItemDiscountAmount"/> is not implemented, the default
            decimal value is returned.
            </summary>
            <param name="lineItem">The line item.</param>
            <returns>The entry discount amount.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.ILineItemExtensions.GetOrderDiscountValue(EPiServer.Commerce.Order.ILineItem)">
            <summary>
            Gets the <see cref="P:EPiServer.Commerce.Order.ILineItemDiscountAmount.OrderAmount"/> property of the <see cref="T:EPiServer.Commerce.Order.ILineItemDiscountAmount"/> implementation
            on the <see cref="T:EPiServer.Commerce.Order.ILineItem"/> instance passed in. If <see cref="T:EPiServer.Commerce.Order.ILineItemDiscountAmount"/> is not implemented, the default
            decimal value is returned.
            </summary>
            <param name="lineItem">The line item.</param>
            <returns>The order discount amount.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.ILineItemExtensions.TrySetDiscountValue(EPiServer.Commerce.Order.ILineItem,System.Linq.Expressions.Expression{System.Func{EPiServer.Commerce.Order.ILineItemDiscountAmount,System.Decimal}},System.Decimal)">
            <summary>
            Updates the line item discount with the following action.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="property">The property to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.ILineItemExtensions.SetEntryDiscountValue(EPiServer.Commerce.Order.ILineItem,System.Decimal)">
            <summary>
            Sets the <see cref="P:EPiServer.Commerce.Order.ILineItemDiscountAmount.EntryAmount"/> property of the <see cref="T:EPiServer.Commerce.Order.ILineItemDiscountAmount"/> implementation
            on the <see cref="T:EPiServer.Commerce.Order.ILineItem"/> instance passed in. If <see cref="T:EPiServer.Commerce.Order.ILineItemDiscountAmount"/> is not implemented, there
            is no action.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.ILineItemExtensions.SetOrderDiscountValue(EPiServer.Commerce.Order.ILineItem,System.Decimal)">
            <summary>
            Sets the <see cref="P:EPiServer.Commerce.Order.ILineItemDiscountAmount.OrderAmount"/> property of the <see cref="T:EPiServer.Commerce.Order.ILineItemDiscountAmount"/> implementation
            on the <see cref="T:EPiServer.Commerce.Order.ILineItem"/> instance passed in. If <see cref="T:EPiServer.Commerce.Order.ILineItemDiscountAmount"/> is not implemented, there
            is no action.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="T:EPiServer.Commerce.Order.Internal.InMemoryLineItemTaxAffectedPropertyChangedHandler">
            <summary>
            A delegate for handling tax afftected property changed of a <see cref="T:EPiServer.Commerce.Order.Internal.InMemoryLineItem"/>.
            </summary>
            <param name="needUpdateShippingTax">The flag indicating whether the property changed affects to the shipping tax of the <see cref="T:Mediachase.Commerce.Orders.Shipment"/>.</param>
            <param name="needUpdateShippingCost">The flag indicating whether the property changed affects to the shipping cost of the <see cref="T:Mediachase.Commerce.Orders.Shipment"/>.</param>
        </member>
        <member name="T:EPiServer.Commerce.Order.Internal.InMemoryLineItem">
            <summary>
            This class is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryLineItem.#ctor">
            <summary>
            Initializes a new instance of an <see cref="T:EPiServer.Commerce.Order.Internal.InMemoryLineItem"/>.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryLineItem.#ctor(EPiServer.Commerce.Order.ILineItem)">
            <summary>
            Initializes a new instance of an <see cref="T:EPiServer.Commerce.Order.Internal.InMemoryLineItem"/>, with same values as the specified <see cref="T:EPiServer.Commerce.Order.ILineItem"/>.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.Code">
            <summary>
            Gets or sets the code of the variation content the line item represent. This property works as the connection between the line item and the variation content.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.LineItemDiscountAmount">
            <summary>
            Gets or sets the discount amount set for this specific line item. This property is normally set by the promotion system.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.LineItemId">
            <summary>
            Gets or sets the identity of the line item.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.OrderLevelDiscountAmount">
            <summary>
            Gets or sets the discount amount not specifically set for this line item. This property will contain the total order level discount for the whole order divided by the number of line items the order contains.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.PlacedPrice">
            <summary>
            Gets or sets the price for one item that this line item represents. This property don't take any discounts in consideration.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.Quantity">
            <summary>
            Gets or sets quantity.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.ReturnQuantity">
            <summary>
            Gets or sets return quantity.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.IsGift">
            <summary>
            Gets or sets the number of items on this line that are free.
            </summary>
            <value>
              <c>true</c> if the line item is a gift item; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.InventoryTrackingStatus">
            <summary>
            Gets or sets the inventory tracking status on whether to check inventory.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.IsInventoryAllocated">
            <summary>
            Gets or sets a value indicating whether this instance has allocated inventory for the <see cref="P:Mediachase.Commerce.Orders.ILineItem.Quantity" />.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.Properties">
            <summary>
            Gets the property bag for dealing with custom meta fields.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.TaxCategoryId">
            <summary>
            Gets or sets the tax category id for the line item.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.EPiServer#Commerce#Order#ILineItemDiscountAmount#EntryAmount">
            <summary>
            Gets or sets the entry discount amount.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.EPiServer#Commerce#Order#ILineItemDiscountAmount#OrderAmount">
            <summary>
            Gets or sets the order discount amount.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.EPiServer#Commerce#Order#IReturnLineItem#OriginalLineItemId">
            <summary>
            Gets or sets the identity original line item id for RMA line item.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.EPiServer#Commerce#Order#IReturnLineItem#ReturnReason">
            <summary>
            Gets or sets the reason for RMA line item. ("Corrupted", "Mismatch" etc..).
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.EPiServer#Commerce#Order#Internal#ILineItemCalculatedAmount#SalesTax">
            <summary>
            Gets or sets the sales tax amount.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.EPiServer#Commerce#Order#Internal#ILineItemCalculatedAmount#IsSalesTaxUpToDate">
            <summary>
            Gets or sets the flag indicating whether the <see cref="P:EPiServer.Commerce.Order.Internal.ILineItemCalculatedAmount.SalesTax"/> is up-to-date.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.ParentOrderGroup">
            <inheritdoc />
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.Mediachase#Commerce#Orders#ILineItemInventory#AllowBackordersAndPreorders">
            <summary>
            Gets or sets a value indicating whether [allow backorders and preorders].
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.Mediachase#Commerce#Orders#ILineItemInventory#InStockQuantity">
            <summary>
            Gets or sets the in stock quantity.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.Mediachase#Commerce#Orders#ILineItemInventory#BackorderQuantity">
            <summary>
            Gets or sets the backorder quantity.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.Mediachase#Commerce#Orders#ILineItemInventory#PreorderQuantity">
            <summary>
            Gets or sets the preorder quantity.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.Mediachase#Commerce#Orders#ILineItemInventory#InventoryStatus">
            <summary>
            Gets or sets the inventory status.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.Mediachase#Commerce#Orders#ILineItemInventory#MaxQuantity">
            <summary>
            Gets or sets the max quantity.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryLineItem.Mediachase#Commerce#Orders#ILineItemInventory#MinQuantity">
            <summary>
            Gets or sets the min quantity.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress">
            <summary>
            This class is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress"/> class.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress.#ctor(EPiServer.Commerce.Order.IOrderAddress)">
            <summary>
            Initializes a new instance of an <see cref="T:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress"/>, with same values as the specified <see cref="T:EPiServer.Commerce.Order.IOrderAddress"/>.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress.City">
            <summary>
            Gets or sets the city.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress.CountryCode">
            <summary>
            Gets or sets the country code.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress.CountryName">
            <summary>
            Gets or sets the name of the country.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress.DaytimePhoneNumber">
            <summary>
            Gets or sets the daytime phone number.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress.Email">
            <summary>
            Gets or sets the email.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress.EveningPhoneNumber">
            <summary>
            Gets or sets the evening phone number.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress.FaxNumber">
            <summary>
            Gets or sets the fax number.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress.Id">
            <summary>
            Gets the identity of the order address.  Use this to map the address id to Shipment and billing of OrderForm
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress.LastName">
            <summary>
            Gets or sets last name.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress.Line1">
            <summary>
            Gets or sets the line 1.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress.Line2">
            <summary>
            Gets or sets the line 2.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress.Organization">
            <summary>
            Gets or sets the organization.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress.PostalCode">
            <summary>
            Gets or sets the postal code.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress.Properties">
            <summary>
            Gets the property bag for dealing with custom meta fields.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress.RegionCode">
            <summary>
            Gets or sets the region code.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderAddress.RegionName">
            <summary>
            Gets or sets the name of the region.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.Internal.InMemoryOrderForm">
            <summary>
            This class is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryOrderForm.#ctor">
            <summary>
            Initializes a new instance of an <see cref="T:EPiServer.Commerce.Order.Internal.InMemoryOrderForm"/>, with same values as the specified <see cref="T:EPiServer.Commerce.Order.IOrderForm"/>.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryOrderForm.#ctor(EPiServer.Commerce.Order.IOrderForm)">
            <summary>
            Initializes a new instance of an <see cref="T:EPiServer.Commerce.Order.Internal.InMemoryOrderForm"/>, with same values as the specified <see cref="T:EPiServer.Commerce.Order.IOrderForm"/>.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderForm.AuthorizedPaymentTotal">
            <summary>
            Gets or sets the amount that is on hold, waiting to be captured.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderForm.CapturedPaymentTotal">
            <summary>
            Gets or sets the amount that has been transfered.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderForm.HandlingTotal">
            <summary>
            Gets the handling total.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderForm.CouponCodes">
            <summary>
            Gets the supplied coupon codes.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderForm.OrderFormId">
            <summary>
            Gets the unique identity for the order form.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderForm.Promotions">
            <summary>
            Gets the promotions.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderForm.Shipments">
            <summary>
            Gets the shipments on the order form.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderForm.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderForm.PricesIncludeTax">
            <summary>
            Gets the setting of including tax in price from the order group.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderForm.Payments">
            <summary>
            Gets the payments on the order form.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderForm.Properties">
            <summary>
            Gets the property bag for dealing with custom meta fields.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderForm.ParentOrderGroup">
            <inheritdoc />
        </member>
        <member name="T:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup">
            <summary>
            This class is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup.#ctor(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Initializes a new instance of an <see cref="T:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup"/>, with same values as the specified <see cref="T:EPiServer.Commerce.Order.IOrderGroup"/>.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup.#ctor(Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Initializes a new instance of an <see cref="T:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup"/>.
            </summary>
            <param name="market">The market.</param>
            <param name="currency">The currency.</param>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup.Created">
            <summary>
            Gets the created date.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup.Currency">
            <summary>
            Gets or sets the currency used in the order.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup.CustomerId">
            <summary>
            Gets the customer identifier.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup.Forms">
            <summary>
            Gets the collection of order forms in the order group.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup.Market">
            <summary>
            Gets or sets the market.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup.MarketId">
            <summary>
            Gets or sets the market id.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup.MarketName">
            <summary>
            Gets or sets the market name.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup.PricesIncludeTax">
            <summary>
            Gets the value indicating if the price of the order group includes tax or not.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup.Modified">
            <summary>
            Gets the modified date.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup.Notes">
            <summary>
            Gets or sets the order notes.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup.OrderLink">
            <summary>
            Gets an instance of the class <see cref="T:Mediachase.Commerce.Orders.OrderReference" />, which contains the unique identity for the order group, and the type of order group it represents (cart, purchase order, or payment plan)
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup.OrderStatus">
            <summary>
            Gets or sets the order status.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup.Organization">
            <summary>
            Gets or sets the organization.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup.Properties">
            <summary>
            Gets the property bag for dealing with custom meta fields.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup.EPiServer#Commerce#Order#Internal#IOrderGroupCalculatedAmount#IsTaxTotalUpToDate">
            <summary>
            Gets or sets the flag indicating whether the <see cref="P:EPiServer.Commerce.Order.Internal.IOrderGroupCalculatedAmount.TaxTotal"/> is up-to-date.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderGroup.EPiServer#Commerce#Order#Internal#IOrderGroupCalculatedAmount#TaxTotal">
            <summary>
            Gets or sets the tax total.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.Internal.InMemoryOrderGroupBuilder">
            <summary>
            This class is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderGroupBuilder.SortOrder">
            <summary>
            The sort order of the builder.
            </summary>
            <remarks>
            In case there are multiple registered builders for a type in <see cref="P:EPiServer.Commerce.Order.Internal.InMemoryOrderGroupBuilder.ForType"/>, 
            the one which has the highest sort order value will be chosen.
            </remarks>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryOrderGroupBuilder.ForType">
            <summary>
            The type(s) of order group that this builder will work with.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryOrderGroupBuilder.CreateCardPayment">
            <summary>
            Creates the card payment.
            </summary>
            <returns>An <see cref="T:EPiServer.Commerce.Order.ICreditCardPayment"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryOrderGroupBuilder.CreateLineItem(System.String,EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the line item.
            </summary>
            <param name="code">The line item code.</param>
            <param name="orderGroup">The parent order group.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.ILineItem"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryOrderGroupBuilder.CreateOrderAddress">
            <summary>
            Creates the order address.
            </summary>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IOrderAddress"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryOrderGroupBuilder.CreateOrderForm(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the order form.
            </summary>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IOrderForm"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryOrderGroupBuilder.CreateOrderNote">
            <summary>
            Creates the order note.
            </summary>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IOrderNote"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryOrderGroupBuilder.CreatePayment">
            <summary>
            Creates the payment.
            </summary>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IPayment"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryOrderGroupBuilder.CreatePayment(System.Type)">
            <summary>
            Creates the payment with a specified implementation.
            </summary>
            <param name="paymentType">The payment implementation type.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IPayment"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryOrderGroupBuilder.CreateShipment(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the shipment.
            </summary>
            <param name="orderGroup">The parent order group.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IShipment"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryOrderGroupBuilder.CreateTaxValue">
            <summary>
            Creates the tax value.
            </summary>
            <returns>An <see cref="T:EPiServer.Commerce.Order.ITaxValue"/></returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.Internal.InMemoryPayment">
            <summary>
            This class is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryPayment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Commerce.Order.Internal.InMemoryPayment"/> class.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryPayment.#ctor(EPiServer.Commerce.Order.IPayment)">
            <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Commerce.Order.Internal.InMemoryPayment"/> class.
            </summary>
            <param name="payment">The payment.</param>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPayment.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPayment.AuthorizationCode">
            <summary>
            Gets or sets the authorization code.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPayment.BillingAddress">
            <summary>
            Gets or sets the billing address.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPayment.CustomerName">
            <summary>
            Gets or sets the name of the customer.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPayment.ImplementationClass">
            <summary>
            Gets the implementation class.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPayment.PaymentId">
            <summary>
            Gets the payment identifier.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPayment.PaymentMethodId">
            <summary>
            Gets or sets the payment method identifier.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPayment.PaymentMethodName">
            <summary>
            Gets or sets the name of the payment method.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPayment.PaymentType">
            <summary>
            Gets or sets the type of the payment.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPayment.ProviderTransactionID">
            <summary>
            Gets or sets the provider transaction identifier.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPayment.Status">
            <summary>
            Gets or sets the status.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPayment.TransactionID">
            <summary>
            Gets or sets the transaction identifier.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPayment.TransactionType">
            <summary>
            Gets or sets the type of the transaction.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPayment.ValidationCode">
            <summary>
            Gets or sets the validation code.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPayment.Properties">
            <summary>
            Gets the property bag for dealing with custom meta fields.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder">
            <summary>
            This class is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.#ctor">
            <summary>
            Initializes a new instance of an <see cref="T:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder"/>.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.Properties">
            <summary>
            Gets the property bag for dealing with custom meta fields.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.OrderLink">
            <summary>
            Gets or sets an instance of the class <see cref="T:Mediachase.Commerce.Orders.OrderReference" />, which contains the unique identity for the order group, and the type of order group it represents (cart, purchase order, or payment plan)
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.Forms">
            <summary>
            Gets the collection of order forms in the order group.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.Notes">
            <summary>
            Gets the order notes.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.Market">
            <summary>
            Gets or sets the market.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.MarketId">
            <summary>
            Gets or sets the market id.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.MarketName">
            <summary>
            Gets or sets the market name.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.PricesIncludeTax">
            <summary>
            Gets the value indicating if the price of the order group includes tax or not.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.Organization">
            <summary>
            Gets or sets the organization.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.OrderStatus">
            <summary>
            Gets or sets the order status.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.Currency">
            <summary>
            Gets or sets the currency used in the order.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.CustomerId">
            <summary>
            Gets the customer identifier.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.Created">
            <summary>
            Gets the created date.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.Modified">
            <summary>
            Gets the modified date.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.OrderNumber">
            <summary>
            Gets or sets the order number.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.ExpirationDate">
            <summary>
            Gets or sets the expiration date. Expiration date can be used for subscription type of orders.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.ParentOrderGroupId">
            <summary>
            Gets or sets the parent order group id. This can be used to relate purchase orders to a payment plan or other order.
            </summary>
            <value>The parent order group instance id.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.ReturnForms">
            <summary>
            Gets the return forms.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.EPiServer#Commerce#Order#Internal#IOrderGroupCalculatedAmount#IsTaxTotalUpToDate">
            <summary>
            Gets or sets the flag indicating whether the <see cref="P:EPiServer.Commerce.Order.Internal.IOrderGroupCalculatedAmount.TaxTotal"/> is up-to-date.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryPurchaseOrder.EPiServer#Commerce#Order#Internal#IOrderGroupCalculatedAmount#TaxTotal">
            <summary>
            Gets or sets the tax total.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm">
            <summary>
            This class is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm.#ctor(EPiServer.Commerce.Order.IReturnOrderForm)">
            <summary>
            Initializes a new instance of an <see cref="T:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm"/>, with same values as the specified <see cref="T:EPiServer.Commerce.Order.IReturnOrderForm"/>.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm.AuthorizedPaymentTotal">
            <summary>
            Gets or sets the amount that is on hold, waiting to be captured.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm.CapturedPaymentTotal">
            <summary>
            Gets or sets the amount that has been transfered.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm.HandlingTotal">
            <summary>
            Gets the handling total.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm.CouponCodes">
            <summary>
            Gets the supplied coupon codes.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm.OrderFormId">
            <summary>
            Gets the unique identity for the order form.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm.Promotions">
            <summary>
            Gets the promotions.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm.Shipments">
            <summary>
            Gets the shipments on the order form.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm.PricesIncludeTax">
            <summary>
            Gets the setting of including tax in price from the order group.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm.Payments">
            <summary>
            Gets the payments on the order form.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm.Properties">
            <summary>
            Gets the property bag for dealing with custom meta fields.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm.OriginalOrderFormId">
            <summary>
            Gets the Parent OrderForm identity for RMA request
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm.ExchangeOrderGroupId">
            <summary>
            Gets or sets the related this RMA request Exchange order identity 
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm.ReturnAuthCode">
            <summary>
            Gets the RMA auth code. Using for procedure RMA authentication.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm.RMANumber">
            <summary>
            Gets the RMA number.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm.ReturnType">
            <summary>
            Gets the Return Type. For example can be "Refund", "Exchange" etc.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm.ReturnComment">
            <summary>
            Gets or sets the RMA comment.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm.Status">
            <summary>
            Gets or sets the return status.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryReturnOrderForm.ParentOrderGroup">
            <inheritdoc />
        </member>
        <member name="T:EPiServer.Commerce.Order.Internal.InMemoryShipment">
            <summary>
            This class is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryShipment.#ctor">
            <summary>
            Initializes a new instance of an <see cref="T:EPiServer.Commerce.Order.Internal.InMemoryShipment"/>.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.InMemoryShipment.#ctor(EPiServer.Commerce.Order.IShipment)">
            <summary>
            Initializes a new instance of an <see cref="T:EPiServer.Commerce.Order.Internal.InMemoryShipment"/>, with same values as the specified <see cref="T:EPiServer.Commerce.Order.IShipment"/>.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryShipment.LineItems">
            <summary>
            Gets the collection of line items.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryShipment.OrderShipmentStatus">
            <summary>
            Gets or sets the order shipment status.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryShipment.PickListId">
            <summary>
            Gets or sets the pick list id.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryShipment.ShipmentId">
            <summary>
            Gets the shipment identifier.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryShipment.ShipmentTrackingNumber">
            <summary>
            Gets or sets a string used for tracking the shipment.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryShipment.ShippingMethodName">
            <summary>
            Gets the name of the shipping method.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryShipment.ShippingAddress">
            <summary>
            Gets or sets the shipping address.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryShipment.ShippingMethodId">
            <summary>
            Gets or sets the shipment method used by the shipment.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryShipment.WarehouseCode">
            <summary>
            Gets or sets the warehouse code.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryShipment.Properties">
            <summary>
            Gets the property bag for dealing with custom meta fields.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryShipment.ParentOrderGroup">
            <inheritdoc />
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryShipment.EPiServer#Commerce#Order#IShipmentDiscountAmount#ShipmentDiscount">
            <summary>
            Gets or sets the shipment discount.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryShipment.EPiServer#Commerce#Order#Internal#IShipmentCalculatedAmount#ShippingCost">
            <summary>
            Gets or sets the shipping cost.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryShipment.EPiServer#Commerce#Order#Internal#IShipmentCalculatedAmount#ShippingTax">
            <summary>
            Gets or sets the shipping tax.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryShipment.EPiServer#Commerce#Order#Internal#IShipmentCalculatedAmount#IsShippingCostUpToDate">
            <summary>
            Gets or sets the flag indicating whether the <see cref="P:EPiServer.Commerce.Order.Internal.IShipmentCalculatedAmount.ShippingCost"/> is up-to-date.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.InMemoryShipment.EPiServer#Commerce#Order#Internal#IShipmentCalculatedAmount#IsShippingTaxUpToDate">
            <summary>
            Gets or sets the flag indicating whether the <see cref="P:EPiServer.Commerce.Order.Internal.IShipmentCalculatedAmount.ShippingTax"/> is up-to-date.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.Internal.IOrderGroupCalculatedAmount">
            <summary>
            This interface is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
            
            Represents the calculated amount from calculators for an <see cref="T:EPiServer.Commerce.Order.IOrderGroup"/>.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.IOrderGroupCalculatedAmount.IsTaxTotalUpToDate">
            <summary>
            Gets or sets the flag indicating whether the <see cref="P:EPiServer.Commerce.Order.Internal.IOrderGroupCalculatedAmount.TaxTotal"/> is up-to-date.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.IOrderGroupCalculatedAmount.TaxTotal">
            <summary>
            Gets or sets the tax total.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.Internal.IShipmentCalculatedAmount">
            <summary>
            This interface is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
            
            Represents the calculated amount from calculators for a shipment.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.IShipmentCalculatedAmount.IsShippingCostUpToDate">
            <summary>
            Gets the flag indicating whether the <see cref="P:EPiServer.Commerce.Order.Internal.IShipmentCalculatedAmount.ShippingCost"/> is up-to-date.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.IShipmentCalculatedAmount.IsShippingTaxUpToDate">
            <summary>
            Gets the flag indicating whether the <see cref="P:EPiServer.Commerce.Order.Internal.IShipmentCalculatedAmount.ShippingTax"/> is up-to-date.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.IShipmentCalculatedAmount.ShippingCost">
            <summary>
            Gets or sets the shipping cost.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.IShipmentCalculatedAmount.ShippingTax">
            <summary>
            Gets or sets the shipping tax.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.Internal.IShipmentCalculatedAmountExtensions">
            <summary>
            This interface is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
            
            Extension methods for <see cref="T:EPiServer.Commerce.Order.Internal.IShipmentCalculatedAmount"/>.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.IShipmentCalculatedAmountExtensions.ResetUpToDateFlags(EPiServer.Commerce.Order.Internal.IShipmentCalculatedAmount)">
            <summary>
            Resets up-to-date flags of a shipment and its line items.
            </summary>
            <param name="shipmentCalculatedPrice">The shipment.</param>
        </member>
        <member name="T:EPiServer.Commerce.Order.Internal.IShipmentExtensions">
            <summary>
                This class is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
                Extension methods for <see cref="T:EPiServer.Commerce.Order.IShipment" />
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.IShipmentExtensions.TryGetDiscountValue(EPiServer.Commerce.Order.IShipment,System.Linq.Expressions.Expression{System.Func{EPiServer.Commerce.Order.IShipmentDiscountAmount,System.Decimal}})">
            <summary>
            Gets discount fields for shipment.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="property">The getter function.</param>
            <returns></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.IShipmentExtensions.GetShipmentDiscount(EPiServer.Commerce.Order.IShipment)">
            <summary>
            Sets the <see cref="P:EPiServer.Commerce.Order.IShipmentDiscountAmount.ShipmentDiscount"/> property of the <see cref="T:EPiServer.Commerce.Order.IShipmentDiscountAmount"/> implementation
            on the <see cref="T:EPiServer.Commerce.Order.IShipment"/> instance passed in. If <see cref="T:EPiServer.Commerce.Order.IShipmentDiscountAmount"/> is not implemented, , the default
            decimal value is returned.
            </summary>
            <param name="shipment">The shipment.</param>
            <returns>The shipment discount.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.IShipmentExtensions.TrySetDiscountValue(EPiServer.Commerce.Order.IShipment,System.Linq.Expressions.Expression{System.Func{EPiServer.Commerce.Order.IShipmentDiscountAmount,System.Decimal}},System.Decimal)">
            <summary>
            Updates the shipment discount with the following action.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="property">The property to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.IShipmentExtensions.SetShipmentDiscount(EPiServer.Commerce.Order.IShipment,System.Decimal)">
            <summary>
            Sets the <see cref="P:EPiServer.Commerce.Order.IShipmentDiscountAmount.ShipmentDiscount"/> property of the <see cref="T:EPiServer.Commerce.Order.IShipmentDiscountAmount"/> implementation
            on the <see cref="T:EPiServer.Commerce.Order.IShipment"/> instance passed in. If <see cref="T:EPiServer.Commerce.Order.IShipmentDiscountAmount"/> is not implemented, there
            is no action.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.IShipmentExtensions.AddSkipCalculatingShippingRateFlag(EPiServer.Commerce.Order.IShipment)">
            <summary>
            Add skip calculating shipping rate flag for the given shipment.
            </summary>
            <param name="shipment">The shipment.</param>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.IShipmentExtensions.ShouldSkipCalculatingShippingRate(EPiServer.Commerce.Order.IShipment)">
            <summary>
            Verifies whether it skip calculating shipping rate for a shipment.
            </summary>
            <param name="shipment">The shipment.</param>
            <returns><c>true</c> if it should skip calculate rate for the given shipment; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.OrderActivity.EventType">
            <inheritdoc/>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.OrderActivity.Channel">
            <inheritdoc/>
        </member>
        <member name="T:EPiServer.Commerce.Order.Internal.OrderGroupBuilder">
            <summary>
            This class is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.OrderGroupBuilder.SortOrder">
            <summary>
            The sort order of the builder.
            </summary>
            <remarks>
            In case there are multiple registered builders for a type in <see cref="P:EPiServer.Commerce.Order.Internal.OrderGroupBuilder.ForType"/>, 
            the one which has the highest sort order value will be chosen.
            </remarks>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.OrderGroupBuilder.ForType">
            <summary>
            The type(s) of order group that this builder will work with.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.OrderGroupBuilder.CreateOrderForm(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the order form.
            </summary>
            <param name="orderGroup">The parent order group.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IOrderForm"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.OrderGroupBuilder.CreateShipment(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the shipment.
            </summary>
            <param name="orderGroup">The parent order group.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IShipment"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.OrderGroupBuilder.CreateLineItem(System.String,EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the line item.
            </summary>
            <param name="code">The line item code.</param>
            <param name="orderGroup">The parent order group.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.ILineItem"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.OrderGroupBuilder.CreateOrderAddress">
            <summary>
            Creates the order address.
            </summary>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IOrderAddress"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.OrderGroupBuilder.CreateOrderNote">
            <summary>
            Creates the order note.
            </summary>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IOrderNote"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.OrderGroupBuilder.CreatePayment">
            <summary>
            Creates the payment.
            </summary>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IPayment"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.OrderGroupBuilder.CreatePayment(System.Type)">
            <summary>
            Creates the payment with a specified payment implementation.
            </summary>
            <param name="paymentType">The payment implementation type.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IPayment"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.OrderGroupBuilder.CreateCardPayment">
            <summary>
            Creates the card payment.
            </summary>
            <returns>An <see cref="T:EPiServer.Commerce.Order.ICreditCardPayment"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.OrderGroupBuilder.CreateTaxValue">
            <summary>
            Creates the tax value.
            </summary>
            <returns>An <see cref="T:EPiServer.Commerce.Order.ITaxValue"/></returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.Internal.IShippingOrderAddress">
            <summary>
            This class is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
            
            Represent an order address when it is assigned as a shipping address.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.Internal.IShippingOrderAddress.Shipment">
            <summary>
            The shipment this address is assigned to.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.Internal.IShippingOrderAddress.ShippingAddressChanged">
            <summary>
            Notifies the shipment that there are certain changes in address.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.IOrderActivity">
            <summary>
            Defines the order activity for tracking the order history.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderActivity.EventType">
            <summary>
            Gets or sets the event type.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderActivity.Channel">
            <summary>
            Gets or sets the channel of the order activity.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.IOrderAddress">
            <summary>
            Represents an address associated with an order.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderAddress.Id">
            <summary>
            Gets the identity of the order address.  Use this to map the address id to Shipment and billing of OrderForm
            </summary>
            <value>The identity of the order address.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderAddress.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
            <value>The name of the first.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderAddress.LastName">
            <summary>
            Gets or sets last name.
            </summary>
            <value>The name of the last.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderAddress.Organization">
            <summary>
            Gets or sets the organization.
            </summary>
            <value>The organization.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderAddress.Line1">
            <summary>
            Gets or sets the line 1.
            </summary>
            <value>The line1.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderAddress.Line2">
            <summary>
            Gets or sets the line 2.
            </summary>
            <value>The line2.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderAddress.City">
            <summary>
            Gets or sets the city.
            </summary>
            <value>The city.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderAddress.CountryCode">
            <summary>
            Gets or sets the country code.
            </summary>
            <value>The country code.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderAddress.CountryName">
            <summary>
            Gets or sets the name of the country.
            </summary>
            <value>The name of the country.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderAddress.PostalCode">
            <summary>
            Gets or sets the postal code.
            </summary>
            <value>The postal code.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderAddress.RegionCode">
            <summary>
            Gets or sets the region/state code.
            </summary>
            <remarks>For US addresses, this is used for the state code.</remarks>
            <value>The region code.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderAddress.RegionName">
            <summary>
            Gets or sets the name of the region/state.
            </summary>
            <remarks>For US addresses, this is used for the state name.</remarks>
            <value>The name of the region.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderAddress.DaytimePhoneNumber">
            <summary>
            Gets or sets the daytime phone number.
            </summary>
            <value>The daytime phone number.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderAddress.EveningPhoneNumber">
            <summary>
            Gets or sets the evening phone number.
            </summary>
            <value>The evening phone number.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderAddress.FaxNumber">
            <summary>
            Gets or sets the fax number.
            </summary>
            <value>The fax number.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderAddress.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>The email.</value>
        </member>
        <member name="T:EPiServer.Commerce.Order.IOrderForm">
            <summary>
                Information about an order form.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderForm.OrderFormId">
            <summary>
            Gets the unique identity for the order form.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderForm.AuthorizedPaymentTotal">
            <summary>
            Gets or sets the amount that has is on hold, waiting for being captured.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderForm.CapturedPaymentTotal">
            <summary>
            Gets or sets the amount that has been transfered.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderForm.HandlingTotal">
            <summary>
            Gets or sets the handling total.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderForm.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderForm.Shipments">
            <summary>
            Gets the shipments on the order form.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderForm.Promotions">
            <summary>
            Gets the promotions.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderForm.CouponCodes">
            <summary>
            Gets the supplied coupon codes.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderForm.Payments">
            <summary>
            Gets the payments on the order form.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderForm.PricesIncludeTax">
            <summary>
            Gets the setting of including tax in price from the order group.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderForm.ParentOrderGroup">
            <summary>
            Gets the parent order group.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.IOrderFormCalculator">
            <summary>
             Calculates totals on the order form.
            </summary>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderFormCalculatorSample.cs" region="OrderFormCalculatorSample" lang="cs" />
            </example>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormCalculator.GetTotal(EPiServer.Commerce.Order.IOrderForm,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the total of an <see cref="T:EPiServer.Commerce.Order.IOrderForm"/>.
            </summary>
            <param name="orderForm">The given order form.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculation.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="OrderFormGetTotal" lang="cs" />
            </example>
            <returns>The total of the order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormCalculator.GetSubTotal(EPiServer.Commerce.Order.IOrderForm,Mediachase.Commerce.Currency)">
            <summary>
            Gets the subtotal of an <see cref="T:EPiServer.Commerce.Order.IOrderForm"/>.
            </summary>
            <param name="orderForm">The given order form.</param>
            <param name="currency">The currency to be used in the calculation.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="OrderFormGetSubTotal" lang="cs" />
            </example>
            <returns>The subtotal of the order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormCalculator.GetHandlingTotal(EPiServer.Commerce.Order.IOrderForm,Mediachase.Commerce.Currency)">
            <summary>
            Gets the handling total of an <see cref="T:EPiServer.Commerce.Order.IOrderForm"/>.
            </summary>
            <param name="orderForm">The given order form.</param>
            <param name="currency">The currency to be used in the calculation.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="OrderFormGetHandlingTotal" lang="cs" />
            </example>
            <returns>The handling total for the order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormCalculator.GetShippingSubTotal(EPiServer.Commerce.Order.IOrderForm,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the total of shipping cost of all shipments in an <see cref="T:EPiServer.Commerce.Order.IOrderForm"/>.
            </summary>
            <param name="orderForm">The given order form.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="OrderFormGetShippingSubTotal" lang="cs" />
            </example>
            <returns>The shipping subtotal of the order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormCalculator.GetOrderDiscountTotal(EPiServer.Commerce.Order.IOrderForm,Mediachase.Commerce.Currency)">
            <summary>
            Gets the order discount price of the <paramref name="orderForm"/>.
            </summary>
            <param name="orderForm">The order form.</param>
            <param name="currency">The currency.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="OrderFormGetOrderDiscountTotal" lang="cs" />
            </example>
            <returns>The order discount price for the order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormCalculator.GetDiscountTotal(EPiServer.Commerce.Order.IOrderForm,Mediachase.Commerce.Currency)">
            <summary>
            Gets the total of all discounts applied on an <see cref="T:EPiServer.Commerce.Order.IOrderForm"/>.
            </summary>
            <remarks>
            There're three types of discount can be applied to an order: order level,
            shipment level (or shipping discount) and line item level discount.   
            </remarks>
            <param name="orderForm">The given order form.</param>
            <param name="currency">The currency.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="OrderFormGetDiscountTotal" lang="cs" />
            </example>
            <returns>The discount total of the order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormCalculator.GetOrderFormTotals(EPiServer.Commerce.Order.IOrderForm,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the order form totals of an <see cref="T:EPiServer.Commerce.Order.IOrderForm"/>.
            </summary>
            <param name="orderForm">The given order form.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="OrderFormGetOrderFormTotals" lang="cs" />
            </example>
            <returns>An order form totals.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormCalculator.GetTaxTotal(EPiServer.Commerce.Order.IOrderForm,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the tax total of of an <see cref="T:EPiServer.Commerce.Order.IOrderForm"/>.
            </summary>
            <param name="orderForm">The given order form.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculation.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="OrderFormGetTaxTotal" lang="cs" />
            </example>
            <returns>The total tax amount of the order form.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.IOrderFormExtensions">
            <summary>
            Extension methods for <see cref="T:EPiServer.Commerce.Order.IOrderForm"/>.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormExtensions.GetHandlingTotal(EPiServer.Commerce.Order.IOrderForm,Mediachase.Commerce.Currency)">
            <summary>
            Gets the handling total for the order form.
            </summary>
            <param name="orderForm">The order form.</param>
            <param name="currency">The currency to be used in the calculation.</param>
            <returns>The handling total for the order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormExtensions.GetHandlingTotal(EPiServer.Commerce.Order.IOrderForm,Mediachase.Commerce.Currency,EPiServer.Commerce.Order.IOrderFormCalculator)">
            <summary>
            Gets the handling total for the order form.
            </summary>
            <param name="orderForm">The order form.</param>
            <param name="currency">The currency to be used in the calculation.</param>
            <param name="orderFormCalculator">The order form calculator.</param>
            <returns>The handling total for the order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormExtensions.GetSubTotal(EPiServer.Commerce.Order.IOrderForm,Mediachase.Commerce.Currency)">
            <summary>
            Gets the subtotal of extended prices for all line items in the order form.
            </summary>
            <param name="orderForm">The order form.</param>
            <param name="currency">The currency to be used in the calculation.</param>
            <returns>The subtotal for the order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormExtensions.GetSubTotal(EPiServer.Commerce.Order.IOrderForm,Mediachase.Commerce.Currency,EPiServer.Commerce.Order.IOrderFormCalculator)">
            <summary>
            Gets the subtotal of extended prices for all line items in the order form.
            </summary>
            <param name="orderForm">The order form.</param>
            <param name="currency">The currency to be used in the calculation.</param>
            <param name="orderFormCalculator">The order form calculator.</param>
            <returns>The subtotal for the order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormExtensions.GetTotal(EPiServer.Commerce.Order.IOrderForm,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the total for the order form.
            </summary>
            <param name="orderForm">The order form.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculation.</param>
            <returns>The total for the order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormExtensions.GetTotal(EPiServer.Commerce.Order.IOrderForm,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency,EPiServer.Commerce.Order.IOrderFormCalculator)">
            <summary>
            Gets the total for the order form.
            </summary>
            <param name="orderForm">The order form.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculation.</param>
            <param name="orderFormCalculator">The order form calculator.</param>
            <returns>The total for the order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormExtensions.GetOrderDiscountTotal(EPiServer.Commerce.Order.IOrderForm,Mediachase.Commerce.Currency)">
            <summary>
            Gets the order form discount price.
            </summary>
            <param name="orderForm">The order form.</param>
            <param name="currency">The currency.</param>
            <returns>The order form discount price</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormExtensions.GetOrderDiscountTotal(EPiServer.Commerce.Order.IOrderForm,Mediachase.Commerce.Currency,EPiServer.Commerce.Order.IOrderFormCalculator)">
            <summary>
            Gets the order form discount price.
            </summary>
            <param name="orderForm">The order form.</param>
            <param name="currency">The currency.</param>
            <param name="orderFormCalculator">The order form calculator.</param>
            <returns>The order form discount price</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormExtensions.GetAllLineItems(EPiServer.Commerce.Order.IOrderForm)">
            <summary>
            Gets all line items for the <see cref="T:EPiServer.Commerce.Order.IOrderForm"/>.
            </summary>
            <param name="orderForm">The order form.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormExtensions.ContainGiftItemAddedByPromotionSystem(EPiServer.Commerce.Order.IOrderForm,System.String)">
            <summary>
            Check if a specific gift item was added to the order form by the promotion system or not.
            </summary>
            <param name="orderForm">The order form.</param>
            <param name="giftItemCode">The gift item code.</param>
            <returns><c>true</c> if the gift item is added inside promotion system; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormExtensions.ContainPromotionGiftItem(EPiServer.Commerce.Order.IOrderForm,EPiServer.Commerce.Order.ILineItem)">
            <summary>
            Checks if the order form contain a line item is the gift which was added by the promotion system.
            </summary>
            <param name="orderForm">The order form.</param>
            <param name="lineItem">The line item.</param>
            <returns><c>true</c> if the line item is the gift which was added to order form inside promotion system; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormExtensions.UpdatePaymentTotals(EPiServer.Commerce.Order.IOrderForm)">
            <summary>
            Updates the payment totals for the order form.
            </summary>
            <param name="orderForm">The order form.</param>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormExtensions.GetPaymentsByTransactionType(EPiServer.Commerce.Order.IOrderForm,System.Collections.Generic.IEnumerable{EPiServer.Commerce.Order.IPayment},Mediachase.Commerce.Orders.TransactionType)">
            <summary>
            Gets payments by given transaction type.
            </summary>
            <param name="orderForm">The order form.</param>
            <param name="payments">The payments collection of the order form.</param>
            <param name="transactionType">The transaction type.</param>
            <returns>Collection of <see cref="T:EPiServer.Commerce.Order.IPayment"/> of the order form which have given transaction type.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormExtensions.GetManualDiscount(EPiServer.Commerce.Order.IOrderForm,System.String)">
            <summary>
            Gets manual discount promotion information of line item.
            </summary>
            <param name="orderForm">The order form.</param>
            <param name="lineItemCode">The line item code.</param>
            <returns>The manual discount promotion information.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormExtensions.AddManualDiscounts(EPiServer.Commerce.Order.IOrderForm,System.String,System.Decimal,System.String)">
            <summary>
            Adds manual discount promotion information for the order form. 
            </summary>
            <param name="orderForm">The order form.</param>
            <param name="lineItemCode">The line item code.</param>
            <param name="discountValue">The discount value.</param>
            <param name="discountName">The discount name.</param>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderFormExtensions.AddManualDiscounts(EPiServer.Commerce.Order.IOrderForm,System.String,System.Decimal,System.String,System.String)">
            <summary>
            Adds manual discount promotion information for the order form. 
            </summary>
            <param name="orderForm">The order form.</param>
            <param name="lineItemCode">The line item code.</param>
            <param name="discountValue">The discount value.</param>
            <param name="discountName">The discount name.</param>
            <param name="discountDescription">The discount description.</param>
        </member>
        <member name="T:EPiServer.Commerce.Order.IOrderGroup">
            <summary>
            Order group that can contain multiple order forms.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderGroup.OrderLink">
            <summary>
            Gets an instance of the class <see cref="T:EPiServer.Commerce.Order.OrderReference"/>, which contains the unique identity for the order group, and the type of order group it represents (cart, purchase order, or payment plan) 
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderGroup.Forms">
            <summary>
            Gets the collection of order forms in the order group.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderGroup.Notes">
            <summary>
            Gets the order notes.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderGroup.Market">
            <summary>
            Gets or sets the market.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderGroup.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderGroup.Organization">
            <summary>
            Gets or sets the organization.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderGroup.OrderStatus">
            <summary>
            Gets or sets the order status.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderGroup.Currency">
            <summary>
            Gets or sets the currency used in the order.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderGroup.CustomerId">
            <summary>
            Gets the customer identifier.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderGroup.Created">
            <summary>
            Gets the created date.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderGroup.Modified">
            <summary>
            Gets the modified date.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderGroup.MarketId">
            <summary>
            Gets or sets the market id.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderGroup.MarketName">
            <summary>
            Gets or sets the market name.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderGroup.PricesIncludeTax">
            <summary>
            Gets or sets the value indicating if the price of the order group includes tax or not.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.IOrderGroupBuilder">
            <summary>
            Create sub-components for IOrderGroup.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderGroupBuilder.SortOrder">
            <summary>
            The sort order of the builder.
            </summary>
            <remarks>
            In case there are multiple registered builders for a type in <see cref="P:EPiServer.Commerce.Order.IOrderGroupBuilder.ForType"/>, 
            the one which has the highest sort order value will be chosen.
            </remarks>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderGroupBuilder.ForType">
            <summary>
            The type(s) of order group that this builder will work with.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupBuilder.CreateOrderForm(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the order form.
            </summary>
            <param name="orderGroup">The parent order group.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IOrderForm"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupBuilder.CreateShipment(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the shipment.
            </summary>
            <param name="orderGroup">The parent order group.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IShipment"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupBuilder.CreateLineItem(System.String,EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the line item.
            </summary>
            <param name="code">The line item code.</param>
            <param name="orderGroup">The parent order group.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.ILineItem"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupBuilder.CreateOrderAddress">
            <summary>
            Creates the order address.
            </summary>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IOrderAddress"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupBuilder.CreateOrderNote">
            <summary>
            Creates the order note.
            </summary>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IOrderNote"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupBuilder.CreatePayment">
            <summary>
            Creates the payment.
            </summary>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IPayment"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupBuilder.CreatePayment(System.Type)">
            <summary>
            Creates the payment with a specified payment implementation.
            </summary>
            <param name="paymentType">The payment implementation type.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IPayment"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupBuilder.CreateCardPayment">
            <summary>
            Creates the card payment.
            </summary>
            <returns>An <see cref="T:EPiServer.Commerce.Order.ICreditCardPayment"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupBuilder.CreateTaxValue">
            <summary>
            Creates the tax value.
            </summary>
            <returns>An <see cref="T:EPiServer.Commerce.Order.ITaxValue"/></returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.IOrderGroupCalculator">
            <summary>
             The calculator calculates totals on the order group.
            </summary>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderGroupCalculatorSample.cs" region="OrderGroupCalculatorSample" lang="cs" />
            </example>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupCalculator.GetTotal(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Gets the total of an <see cref="T:EPiServer.Commerce.Order.IOrderGroup"/>.
            </summary>
            <param name="orderGroup">The given order group.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="OrderGroupGetTotal" lang="cs" />
            </example>
            <returns>The total of the order group.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupCalculator.GetSubTotal(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Gets the subtotal of an <see cref="T:EPiServer.Commerce.Order.IOrderGroup"/>.
            </summary>
            <param name="orderGroup">The given order group.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="OrderGroupGetSubTotal" lang="cs" />
            </example>
            <returns>The subtotal of the order group.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupCalculator.GetHandlingTotal(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Gets the handling total of an <see cref="T:EPiServer.Commerce.Order.IOrderGroup"/>.
            </summary>
            <param name="orderGroup">The order group.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="OrderGroupGetHandlingTotal" lang="cs" />
            </example>
            <returns>The handling total for the order group.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupCalculator.GetShippingSubTotal(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Gets the total of shipping cost of all shipments in an <see cref="T:EPiServer.Commerce.Order.IOrderGroup"/>.
            </summary>
            <param name="orderGroup">The given order group.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="OrderGroupGetShippingSubTotal" lang="cs" />
            </example>
            <returns>The shipping subtotal of the order group.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupCalculator.GetOrderDiscountTotal(EPiServer.Commerce.Order.IOrderGroup,Mediachase.Commerce.Currency)">
            <summary>
            Gets the order discount price.
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="currency">The currency.</param>
            <returns>The order discount price.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupCalculator.GetOrderDiscountTotal(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Gets the total of all order level discounts applied on an <see cref="T:EPiServer.Commerce.Order.IOrderGroup"/>.
            </summary>
            <remarks>
            There're three types of discount can be applied to an order: order level, shipment level (or shipping discount)
            and line item level discount. This only returns order level discount.
            </remarks>
            <param name="orderGroup">The order group.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="OrderGroupGetOrderDiscountTotal" lang="cs" />
            </example>
            <returns>The order level discount total of the order.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupCalculator.GetOrderGroupTotals(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Gets the order group totals of an <see cref="T:EPiServer.Commerce.Order.IOrderGroup"/>.
            </summary>
            <param name="orderGroup">The given order group.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="OrderGroupGetOrderGroupTotals" lang="cs" />
            </example>
            <returns>An order group totals.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupCalculator.GetTaxTotal(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Gets the tax total of an <see cref="T:EPiServer.Commerce.Order.IOrderGroup"/>.
            </summary>
            <param name="orderGroup">The given order group.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="OrderGroupGetTaxTotal" lang="cs" />
            </example>
            <returns>The tax total of the order group.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.IOrderGroupFactory">
            <summary>
            Responsible for creating instances of order group components.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupFactory.BuilderFor(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Retrieves the <see cref="T:EPiServer.Commerce.Order.IOrderGroupBuilder"/> implementation for the specific order group.
            </summary>
            <param name="orderGroup">The order group to get a builder implementation for.</param>
            <returns>A builder that can be used to create sub-objects for <paramref name="orderGroup"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupFactory.CreateOrderForm(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the order form.
            </summary>
            <param name="orderGroup">The order group to create object for.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IOrderForm"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupFactory.CreateShipment(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the shipment.
            </summary>
            <param name="orderGroup">The order group to create object for.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IShipment"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupFactory.CreateLineItem(System.String,EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the line item.
            </summary>
            <param name="code">The line item code.</param>
            <param name="orderGroup">The order group to create object for.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.ILineItem"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupFactory.CreateOrderAddress(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the order address.
            </summary>
            <param name="orderGroup">The order group to create object for.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IOrderAddress"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupFactory.CreateOrderNote(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the order note.
            </summary>
            <param name="orderGroup">The order group to create object for.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IOrderNote"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupFactory.CreatePayment(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the payment.
            </summary>
            <param name="orderGroup">The order group to create object for.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IPayment"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupFactory.CreatePayment(EPiServer.Commerce.Order.IOrderGroup,System.Type)">
            <summary>
            Creates the payment with a specified payment implementation.
            </summary>
            <param name="orderGroup">The order group to create object for.</param>
            <param name="paymentType">The payment implementation type.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IPayment"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupFactory.CreateCardPayment(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the card payment.
            </summary>
            <param name="orderGroup">The order group to create object for.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.ICreditCardPayment"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupFactory.CreateTaxValue(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the tax value.
            </summary>
            <param name="orderGroup">The order group to create object for.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.ITaxValue"/></returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.IOrderGroupTotalsCalculator">
            <summary>
            Calculates the total values from all the information on an order group.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupTotalsCalculator.GetTotals(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Calculates all totals for <see cref="T:EPiServer.Commerce.Order.IOrderForm"/>, <see cref="T:EPiServer.Commerce.Order.IShipment"/>, and <see cref="T:EPiServer.Commerce.Order.ILineItem"/>. The result are presented in an <see cref="T:EPiServer.Commerce.Order.OrderGroupTotals"/> instance.
            </summary>
            <param name="orderGroup">The order group.</param>
            <returns>An instance of <see cref="T:EPiServer.Commerce.Order.OrderGroupTotals"/> with all calculated values</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderGroupTotalsCalculator.UpdateProperties(EPiServer.Commerce.Order.IOrderGroup,EPiServer.Commerce.Order.OrderGroupTotals)">
            <summary>
            Updates properties that need updated calculated totals.
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="orderGroupTotals">The order group totals.</param>
        </member>
        <member name="T:EPiServer.Commerce.Order.IOrderNote">
            <summary>
            Represents a note associated with an order.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderNote.OrderNoteId">
            <summary>
            Gets or sets the order note id.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderNote.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderNote.Detail">
            <summary>
            Gets or sets the detail.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderNote.Type">
            <summary>
            Gets or sets the note type.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderNote.LineItemId">
            <summary>
            Gets or sets the lineitem id.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderNote.CustomerId">
            <summary>
            Gets or sets the customer id.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IOrderNote.Created">
            <summary>
            Gets or sets the created date.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.IOrderNumberGenerator">
            <summary>
            Handles order number generation.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderNumberGenerator.GenerateOrderNumber(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Generates order number.
            </summary>
            <param name="orderGroup">The order group.</param>
            <returns>The order number.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.IOrderSearchService">
            <summary>
            Service to retrieve historical data for <see cref="T:EPiServer.Commerce.Order.IOrderGroup"/>.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderSearchService.Find``1(EPiServer.Commerce.Order.OrderSearchFilter)">
            <summary>
            Finds orders with a specific <see cref="T:EPiServer.Commerce.Order.OrderSearchFilter"/> for a specific <typeparamref name="TOrderGroup"/>.
            </summary>
            <typeparam name="TOrderGroup">The given order type for filter.</typeparam>
            <param name="filter">The search filter.</param>
            <returns>The order search results.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderSearchService.Search``1(EPiServer.Commerce.Orders.OrderSearchField,System.String,System.Int32,System.Int32)">
            <summary>
            Finds orders with search value for a specific <typeparamref name="TOrderGroup"/>.
            </summary>
            <typeparam name="TOrderGroup">The given order type for filter.</typeparam>
            <param name="searchField">The search field use to search. For example: Email, CustomerName, TrackingNumber.</param>
            <param name="searchValue">The search value.</param>
            <param name="startIndex">The starting index of record to retrieve.</param>
            <param name="recordsToRetrieve">The number of records to retrieve.</param>        
            <returns>The order search results.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.IOrderSearchServiceExtensions">
             <summary>
             NOTE: This is a pre-release API that is UNSTABLE and might not satisfy the compatibility 
             requirements as denoted by its associated normal version.
            
             Provides convenience extension methods when working with <see cref="T:EPiServer.Commerce.Order.IOrderSearchService"/>.
             </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderSearchServiceExtensions.FindCarts(EPiServer.Commerce.Order.IOrderSearchService,EPiServer.Commerce.Order.OrderSearchFilter)">
            <summary>
            Finds <see cref="T:EPiServer.Commerce.Order.ICart"/> with a specific filter.
            </summary>
            <param name="orderSearch">The order search service.</param>
            <param name="filter">The search filter.</param>
            <returns>The order search results.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderSearchServiceExtensions.FindPurchaseOrders(EPiServer.Commerce.Order.IOrderSearchService,EPiServer.Commerce.Order.OrderSearchFilter)">
            <summary>
            Finds <see cref="T:EPiServer.Commerce.Order.IPurchaseOrder"/> with a specific filter.
            </summary>
            <param name="orderSearch">The order search service.</param>
            <param name="filter">The search filter.</param>
            <returns>The order search results.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IOrderSearchServiceExtensions.FindPaymentPlans(EPiServer.Commerce.Order.IOrderSearchService,EPiServer.Commerce.Order.OrderSearchFilter)">
            <summary>
            Finds <see cref="T:EPiServer.Commerce.Order.IPaymentPlan"/> with a specific filter.
            </summary>
            <param name="orderSearch">The order search service.</param>
            <param name="filter">The search filter.</param>
            <returns>The order search results.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.IPayment">
            <summary>
                Information about a payment.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPayment.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPayment.AuthorizationCode">
            <summary>
            Gets or sets the authorization code.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPayment.BillingAddress">
            <summary>
            Gets or sets the billing address.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPayment.CustomerName">
            <summary>
            Gets or sets the name of the customer.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPayment.ImplementationClass">
            <summary>
            Gets the implementation class.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPayment.PaymentId">
            <summary>
            Gets the payment identifier.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPayment.PaymentMethodId">
            <summary>
            Gets or sets the payment method identifier.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPayment.PaymentMethodName">
            <summary>
            Gets or sets the name of the payment method.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPayment.PaymentType">
            <summary>
            Gets or sets the type of the payment.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPayment.ProviderTransactionID">
            <summary>
            Gets or sets the provider transaction identifier.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPayment.Status">
            <summary>
            Gets or sets the status.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPayment.TransactionID">
            <summary>
            Gets or sets the transaction identifier.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPayment.TransactionType">
            <summary>
            Gets or sets the type of the transaction.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPayment.ValidationCode">
            <summary>
            Gets or sets the validation code.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.IPaymentExtensions">
            <summary>
                Extension methods for <see cref="T:EPiServer.Commerce.Order.IPayment" />.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPaymentExtensions.RelatedPaymentsGetter">
            <summary>
            Function getting all related payments of a given payment.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.IPaymentExtensions.GetPaymentTransactionType(EPiServer.Commerce.Order.IPayment)">
            <summary>
            Gets the type of the payment transaction.
            </summary>
            <param name="payment">The payment.</param>
            <returns>Transaction type of the payment.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IPaymentExtensions.HasTransactionType(EPiServer.Commerce.Order.IPayment,Mediachase.Commerce.Orders.TransactionType)">
            <summary>
            Checks if the payment has a given transaction type.
            </summary>
            <param name="payment">The payment.</param>
            <param name="transactionType">The transaction type.</param>
            <returns><c>true</c> if the payment has the given transaction type; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IPaymentExtensions.GetAllRelatedPayments(EPiServer.Commerce.Order.IPayment)">
            <summary>
            Gets all related payments of the payment, which have the same transaction ID, in the order it belongs to.
            </summary>
            <param name="payment">The payment.</param>
            <returns>All related payments.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.IPaymentPlan">
            <summary>
                Represents a payment plan in the system.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPaymentPlan.CycleMode">
            <summary>
            Gets or sets the cycle mode. Cycle modes available are days, weeks, months and years as well as None, Custom1 and Custom2.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPaymentPlan.CycleLength">
            <summary>
            Gets or sets the length of the cycle. For example to charge customer monthly, set this value
            to 1 and CycleMode to Months.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPaymentPlan.MaxCyclesCount">
            <summary>
            Gets or sets the max cycles count. So for instance if you want to charge customer for a year each month,
            set CycleMode to month, CycleLength to 1 and MaxCyclesCount to 12.
            Leave at 0 if you never want this cycle to end.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPaymentPlan.CompletedCyclesCount">
            <summary>
            Gets or sets the completed cycles count. This property will be auto increased on each new generated sale.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPaymentPlan.StartDate">
            <summary>
            Gets or sets the start date for first payment.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPaymentPlan.EndDate">
            <summary>
            Gets or sets the stop date for the last payment.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPaymentPlan.LastTransactionDate">
            <summary>
            Gets or sets the last transaction date.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPaymentPlan.IsActive">
            <summary>
            Gets or sets a value indicating whether this Payment Plan is active.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.IPurchaseOrder">
            <summary>
                Represents a purchase order in the system.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPurchaseOrder.OrderNumber">
            <summary>
            Gets or sets the order number.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPurchaseOrder.ExpirationDate">
            <summary>
            Gets or sets the expiration date. Expiration date can be used for subscription type of orders.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IPurchaseOrder.ReturnForms">
            <summary>
            Gets the return forms.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.IPurchaseOrderFactory">
            <summary>
             NOTE: This is a pre-release API that is UNSTABLE and might not satisfy the compatibility 
             requirements as denoted by its associated normal version.
            
            Responsible for creating instances of purchase order components.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.IPurchaseOrderFactory.CreateReturnOrderForm(EPiServer.Commerce.Order.IPurchaseOrder)">
            <summary>
            Creates the return order form for a purchase order.
            </summary>
            <param name="purchaseOrder">The purchase order to create object for.</param>
            <returns>An instance of <see cref="T:EPiServer.Commerce.Order.IReturnOrderForm"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IPurchaseOrderFactory.CreateReturnShipment(EPiServer.Commerce.Order.IShipment)">
            <summary>
            Creates a <see cref="T:EPiServer.Commerce.Order.IShipment"/> for the return.
            </summary>
            <param name="originalShipment">The original shipment.</param>
            <returns>An instance of <see cref="T:EPiServer.Commerce.Order.IShipment"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IPurchaseOrderFactory.CreateReturnLineItem(EPiServer.Commerce.Order.ILineItem,System.Decimal,System.String)">
            <summary>
            Creates a return line item.
            </summary>
            <param name="originalLineItem">The original line item.</param>
            <param name="returnQuantity">The return quantity.</param>
            <param name="returnReason">The return reason.</param>
            <returns>An instance of <see cref="T:EPiServer.Commerce.Order.IReturnLineItem"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IPurchaseOrderFactory.CreateExchangePayment">
            <summary>
            Creates a payment for an exchange order.
            </summary>
            <returns>An instance of <see cref="T:EPiServer.Commerce.Order.IPayment"/>.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.IReturnLineItem">
            <summary>
             NOTE: This is a pre-release API that is UNSTABLE and might not satisfy the compatibility 
             requirements as denoted by its associated normal version.
            
                Information about a return line item.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IReturnLineItem.OriginalLineItemId">
            <summary>
            Gets or sets the identity original line item id for RMA line item.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IReturnLineItem.ReturnReason">
            <summary>
            Gets or sets the reason for RMA line item. ("Corrupted", "Mismatch" etc..).
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.IReturnLineItemCalculator">
            <summary>
             NOTE: This is a pre-release API that is UNSTABLE and might not satisfy the compatibility 
             requirements as denoted by its associated normal version.
            
             Calculates the extended price for an <see cref="T:EPiServer.Commerce.Order.IReturnLineItem"/>
            </summary>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/ReturnLineItemCalculatorSample.cs" region="ReturnLineItemCalculatorSample" lang="cs" />
            </example>
        </member>
        <member name="M:EPiServer.Commerce.Order.IReturnLineItemCalculator.GetExtendedPrice(EPiServer.Commerce.Order.IReturnLineItem,Mediachase.Commerce.Currency)">
            <summary>
            Gets the extended price of an <see cref="T:EPiServer.Commerce.Order.IReturnLineItem"/>.
            </summary>
            <param name="returnLineItem">The return line item.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="ReturnLineItemGetExtendedPrice" lang="cs" />
            </example>
            <returns>The rounded extended price of the return line item.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IReturnLineItemCalculator.GetDiscountedPrice(EPiServer.Commerce.Order.IReturnLineItem,Mediachase.Commerce.Currency)">
            <summary>
            Gets the discounted price of an <see cref="T:EPiServer.Commerce.Order.IReturnLineItem"/>.
            </summary>
            <param name="returnLineItem">The return line item.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="ReturnLineItemGetDiscountedPrice" lang="cs" />
            </example>
            <returns>The discounted price of the return line item.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IReturnLineItemCalculator.GetSalesTax(EPiServer.Commerce.Order.IReturnLineItem,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency,EPiServer.Commerce.Order.IOrderAddress)">
            <summary>
            Gets the sales tax of an <see cref="T:EPiServer.Commerce.Order.IReturnLineItem"/>.
            </summary>
            <param name="returnLineItem">The return line item.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <param name="shippingAddress">The shipping address to be used in the calculations.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="ReturnLineItemGetSalesTax" lang="cs" />
            </example>
            <returns>The sales tax for the return line item.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IReturnLineItemCalculator.GetLineItemPrices(EPiServer.Commerce.Order.IReturnLineItem,Mediachase.Commerce.Currency)">
            <summary>
            Gets the extended and discounted prices of an <see cref="T:EPiServer.Commerce.Order.IReturnLineItem"/>.
            </summary>
            <param name="returnLineItem">The return line item to calculate the extended price for.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="ReturnLineItemGetLineItemPrices" lang="cs" />
            </example>
            <returns>The prices for the return line item.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.IReturnOrderForm">
            <summary>
             NOTE: This is a pre-release API that is UNSTABLE and might not satisfy the compatibility 
             requirements as denoted by its associated normal version.
            
                Information about a return order form.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IReturnOrderForm.OriginalOrderFormId">
            <summary>
            Gets the Parent OrderForm identity for RMA request
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IReturnOrderForm.ExchangeOrderGroupId">
            <summary>
            Gets or sets the related this RMA request Exchange order identity 
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IReturnOrderForm.ReturnAuthCode">
            <summary>
            Gets the RMA auth code. Using for procedure RMA authentication.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IReturnOrderForm.RMANumber">
            <summary>
            Gets the RMA number.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IReturnOrderForm.ReturnType">
            <summary>
            Gets the Return Type. For example can be "Refund", "Exchange" etc.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IReturnOrderForm.ReturnComment">
            <summary>
            Gets or sets the RMA comment.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IReturnOrderForm.Status">
            <summary>
            Gets or sets the return status.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.IReturnOrderFormCalculator">
            <summary>
             Calculates totals on an <see cref="T:EPiServer.Commerce.Order.IReturnOrderForm"/>.
            </summary>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/ReturnOrderFormCalculatorSample.cs" region="ReturnOrderFormCalculatorSample" lang="cs" />
            </example>
        </member>
        <member name="M:EPiServer.Commerce.Order.IReturnOrderFormCalculator.GetTotal(EPiServer.Commerce.Order.IReturnOrderForm,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the total for an <see cref="T:EPiServer.Commerce.Order.IReturnOrderForm"/>.
            </summary>
            <param name="returnOrderForm">The return order form.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculation.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="ReturnOrderFormGetTotal" lang="cs" />
            </example>
            <returns>The total for the return order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IReturnOrderFormCalculator.GetSubTotal(EPiServer.Commerce.Order.IReturnOrderForm,Mediachase.Commerce.Currency)">
            <summary>
            Gets the subtotal of an <see cref="T:EPiServer.Commerce.Order.IReturnOrderForm"/>.
            </summary>
            <param name="returnOrderForm">The return order form.</param>
            <param name="currency">The currency to be used in the calculation.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="ReturnOrderFormGetSubTotal" lang="cs" />
            </example>
            <returns>The subtotal for the return order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IReturnOrderFormCalculator.GetHandlingTotal(EPiServer.Commerce.Order.IReturnOrderForm,Mediachase.Commerce.Currency)">
            <summary>
            Gets the handling total of an <see cref="T:EPiServer.Commerce.Order.IReturnOrderForm"/>.
            </summary>
            <param name="returnOrderForm">The return order form.</param>
            <param name="currency">The currency to be used in the calculation.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="ReturnOrderFormGetHandlingTotal" lang="cs" />
            </example>
            <returns>The handling total for the return order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IReturnOrderFormCalculator.GetOrderDiscountTotal(EPiServer.Commerce.Order.IReturnOrderForm,Mediachase.Commerce.Currency)">
            <summary>
            Gets the total of all order level discounts applied on <see cref="T:EPiServer.Commerce.Order.IReturnOrderForm"/>.
            </summary>
            <remarks>
            There're three types of discount can be applied to an order: order level, shipment level (or shipping discount)
            and line item level discount. This only returns the order level discount.    
            </remarks>
            <param name="returnOrderForm">The return order form.</param>
            <param name="currency">The currency.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="ReturnOrderFormGetOrderDiscountTotal" lang="cs" />
            </example>
            <returns>The order level discount total of the return order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IReturnOrderFormCalculator.GetDiscountTotal(EPiServer.Commerce.Order.IReturnOrderForm,Mediachase.Commerce.Currency)">
            <summary>
            Gets the total of all discounts applied on an <see cref="T:EPiServer.Commerce.Order.IReturnOrderForm"/>.
            </summary>
            <remarks>
            There're three types of discount can be applied to an order: order level,
            shipment level (or shipping discount) and line item level discount.   
            </remarks>
            <param name="returnOrderForm">The return order form.</param>
            <param name="currency">The currency.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="ReturnOrderFormGetDiscountTotal" lang="cs" />
            </example>
            <returns>The discount total of the return order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IReturnOrderFormCalculator.GetReturnTaxTotal(EPiServer.Commerce.Order.IReturnOrderForm,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the tax total of an <see cref="T:EPiServer.Commerce.Order.IReturnOrderForm"/>.
            </summary>
            <param name="returnOrderForm">The return order form.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculation.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="ReturnOrderFormGetReturnTaxTotal" lang="cs" />
            </example>
            <returns>The total tax amount of the return order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IReturnOrderFormCalculator.GetReturnOrderFormTotals(EPiServer.Commerce.Order.IReturnOrderForm,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the order form totals for an <see cref="T:EPiServer.Commerce.Order.IReturnOrderForm"/>.
            </summary>
            <param name="returnOrderForm">The return order form.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency.</param>
            <returns>An order form totals.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.IReturnOrderNumberGenerator">
            <summary>
             NOTE: This is a pre-release API that is UNSTABLE and might not satisfy the compatibility 
             requirements as denoted by its associated normal version.
             
            Handles return order number generation.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.IReturnOrderNumberGenerator.GenerateReturnOrderFormNumber(EPiServer.Commerce.Order.IPurchaseOrder)">
            <summary>
            Generates return order form number.
            </summary>
            <param name="purchaseOrder">The purchase order where the return form belongs to.</param>
            <returns>The return order form number.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IReturnOrderNumberGenerator.GenerateExchangeOrderNumber(EPiServer.Commerce.Order.IPurchaseOrder)">
            <summary>
            Generates the exchange order number.
            </summary>
            <param name="exchangeOrder">The exchange order.</param>
            <returns>The exchange order number.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.IReturnPurchaseOrderCalculator">
            <summary>
             NOTE: This is a pre-release API that is UNSTABLE and might not satisfy the compatibility 
             requirements as denoted by its associated normal version.
            
             The calculator calculates return totals on an <see cref="T:EPiServer.Commerce.Order.IPurchaseOrder"/>.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.IReturnPurchaseOrderCalculator.CalculateReturnTotal(EPiServer.Commerce.Order.IPurchaseOrder,EPiServer.Commerce.Order.IReturnOrderForm,System.Boolean)">
            <summary>
            Calculates the return total of an <see cref="T:EPiServer.Commerce.Order.IReturnOrderForm"/>.
            </summary>
            <param name="purchaseOrder">The origin purchase order where the return form belongs to.</param>
            <param name="returnOrderForm">The return order form.</param>
            <param name="isCompletingReturnForm">The flag indicating whether the return form is being completed.</param>
            <returns>The return total for an <see cref="T:EPiServer.Commerce.Order.IReturnOrderForm"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IReturnPurchaseOrderCalculator.GetInvalidatedPromotions(EPiServer.Commerce.Order.IPurchaseOrder,EPiServer.Commerce.Order.IReturnOrderForm,System.Boolean)">
            <summary>
            Get promotions which are no longer applicable to an <see cref="T:EPiServer.Commerce.Order.IPurchaseOrder"/> because an <see cref="T:EPiServer.Commerce.Order.IReturnOrderForm"/> was added to the order.
            </summary>
            <param name="purchaseOrder">The origin purchase order where the return form belongs to.</param>
            <param name="returnOrderForm">The return order form.</param>
            <param name="isCompletingReturnForm">The flag indicating whether the return form is being completed.</param>
            <returns>The invalidated promotions of the <see cref="T:EPiServer.Commerce.Order.IPurchaseOrder"/>.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.IShipment">
            <summary>
            Information about an shipment.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IShipment.ShipmentId">
            <summary>
            Gets the shipment identifier.
            </summary>
            <value>
            The shipment identifier.
            </value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IShipment.ShippingMethodId">
            <summary>
            Gets or sets the shipment method used by the shipment.
            </summary>
            <value>The shipping method id.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IShipment.ShippingMethodName">
            <summary>
            Gets the name of the shipping method.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IShipment.ShippingAddress">
            <summary>
            Gets or sets the shipping address.
            </summary>
            <value>The shipping address.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IShipment.ShipmentTrackingNumber">
            <summary>
            Gets or sets a string used for tracking the shipment
            </summary>
            <value>The shipment tracking number.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IShipment.OrderShipmentStatus">
            <summary>
            Gets or sets the order shipment status.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IShipment.PickListId">
            <summary>
            Gets or sets the pick list id.
            </summary>
            <value>The pick list id.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IShipment.WarehouseCode">
            <summary>
            Gets or sets the warehouse code
            </summary>
            <value>The warehouse code.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IShipment.LineItems">
            <summary>
            Gets the collection of line items
            </summary>
            <value>
            The line items.
            </value>
        </member>
        <member name="P:EPiServer.Commerce.Order.IShipment.ParentOrderGroup">
            <summary>
            Gets the parent order group.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.IShipmentDiscountAmount">
            <summary>
            Represents shipment discounts."/>
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IShipmentDiscountAmount.ShipmentDiscount">
            <summary>
            Gets or sets the shipment discount.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.IShipmentExtensions">
            <summary>
                Extension methods for <see cref="T:EPiServer.Commerce.Order.IShipment" />.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShipmentExtensions.GetShippingCost(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the shipping cost of the shipment.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency.</param>
            <returns>The shipping cost of the shipment.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShipmentExtensions.GetShippingCost(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency,EPiServer.Commerce.Order.IShippingCalculator)">
            <summary>
            Gets the shipping cost of the shipment.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency.</param>
            <param name="calculator">The shipping calculator.</param>
            <returns>The shipping cost of the shipment.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShipmentExtensions.GetShippingItemsTotal(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.Currency)">
            <summary>
            Gets the total of prices for all line items in the shipment.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="currency">The currency.</param>
            <returns>The subtotal of the shipment.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShipmentExtensions.GetShippingItemsTotal(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.Currency,EPiServer.Commerce.Order.IShippingCalculator)">
            <summary>
            Gets the total of prices for all line items in the shipment.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="currency">The currency.</param>
            <param name="calculator">The shipping calculator.</param>
            <returns>The subtotal of the shipment.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShipmentExtensions.GetShippingReturnItemsTotal(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.Currency)">
            <summary>
            Gets the total of prices for all return line items in the shipment.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <returns>The return subtotal of the shipment.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShipmentExtensions.GetShippingReturnItemsTotal(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.Currency,EPiServer.Commerce.Order.IShippingCalculator)">
            <summary>
            Gets the total of prices for all return line items in the shipment.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <param name="calculator">The shipping calculator.</param>
            <returns>The return subtotal of the shipment.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShipmentExtensions.GetShipmentDiscountPrice(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.Currency)">
            <summary>
            Gets the shipment discount price of the shipment.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="currency">The currency.</param>
            <returns>The discount price of the shipment.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShipmentExtensions.GetShipmentDiscountPrice(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.Currency,EPiServer.Commerce.Order.IShippingCalculator)">
            <summary>
            Gets the shipment discount price.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="currency">The currency.</param>
            <param name="calculator">The calculator.</param>
            <returns>The discount price of the shipment.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.IShipmentInventory">
            <summary>
            Represents inventory operation keys handler for shipment.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.IShipmentInventory.OperationKeys">
            <summary>
            Gets the inventory operation keys map.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShipmentInventory.ContainsOperationKeyFor(EPiServer.Commerce.Order.ILineItem)">
            <summary>
            Verifies inventory operation keys map with a line item.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShipmentInventory.GetOperationKeys(EPiServer.Commerce.Order.ILineItem)">
            <summary>
            Gets inventory operation keys by line item.
            </summary>
            <param name="lineItem">The line item.</param>
            <returns>A collection of operation keys corresponded with the line item, empty list if no key found.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShipmentInventory.AddOperationKeys(EPiServer.Commerce.Order.ILineItem,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds the inventory operation keys map.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="operationKeys">The collection of operation keys.</param>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShipmentInventory.InsertOperationKeys(EPiServer.Commerce.Order.ILineItem,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Inserts inventory operation keys map with a line item.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="operationKeys">The collection of operation keys.</param>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShipmentInventory.RemoveOperationKey(EPiServer.Commerce.Order.ILineItem,System.String)">
            <summary>
            Removes an inventory operation key map with a line item.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="operationKey">The operation key.</param>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShipmentInventory.ClearOperationKeys">
            <summary>
            Clears all inventory operation keys map.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.IShippingCalculator">
            <summary>
             Shipping calculator calculates shipping totals
            </summary>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/ShippingCalculatorSample.cs" region="ShippingCalculatorSample" lang="cs" />
            </example>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShippingCalculator.GetShippingCost(EPiServer.Commerce.Order.IOrderGroup,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the shipping cost of the <paramref name="orderGroup"/>.
            </summary>
            <param name="orderGroup">the order group.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <returns>The shipping cost of the order group.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShippingCalculator.GetShippingCost(EPiServer.Commerce.Order.IOrderForm,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the shipping cost of the <paramref name="orderForm"/>.
            </summary>
            <param name="orderForm">The order form.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <returns>The shipping cost of the order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShippingCalculator.GetShippingCost(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the shipping cost of an <see cref="T:EPiServer.Commerce.Order.IShipment"/>.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="ShippingGetShippingCost" lang="cs" />
            </example>
            <returns>The shipping cost of the shipment.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShippingCalculator.GetDiscountedShippingAmount(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the shipping cost with all shipping discounts applied of an <see cref="T:EPiServer.Commerce.Order.IShipment"/>.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="ShippingGetDiscountedShippingAmount" lang="cs" />
            </example>
            <returns>The discounted subtotal of the shipment.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShippingCalculator.GetShippingItemsTotal(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.Currency)">
            <summary>
            Gets the total of prices of all line items in an <see cref="T:EPiServer.Commerce.Order.IShipment"/>.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="ShippingGetShippingItemsTotal" lang="cs" />
            </example>
            <returns>The subtotal of the shipment.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShippingCalculator.GetShippingReturnItemsTotal(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.Currency)">
            <summary>
            Gets the total of prices of all return line items in an <see cref="T:EPiServer.Commerce.Order.IShipment"/>.
            The shipment must belong to an<see cref= "T:EPiServer.Commerce.Order.IReturnOrderForm" />.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="ShippingGetShippingReturnItemsTotal" lang="cs" />
            </example>
            <returns>The return subtotal of the shipment.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShippingCalculator.GetShipmentDiscountPrice(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.Currency)">
            <summary>
            Gets the shipment discount price.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="currency">The currency.</param>
            <returns>The shipment discount price.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShippingCalculator.GetShippingTotals(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the shipping totals, including the shipping tax, shipping cost and items total.
            These prices are wrapped in a <see cref="T:EPiServer.Commerce.Order.ShippingTotals"/> object.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="ShippingGetShippingTotals" lang="cs" />
            </example>
            <returns>A shipping totals.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShippingCalculator.GetShippingTax(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the shipping tax of an <see cref="T:EPiServer.Commerce.Order.IShipment"/>.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculation.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="ShippingGetShippingTax" lang="cs" />
            </example>
            <returns>The shipping tax amount of the shipment.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShippingCalculator.GetSalesTax(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the sales tax of an <see cref="T:EPiServer.Commerce.Order.IShipment"/>.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculation.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="ShippingGetSalesTax" lang="cs" />
            </example>
            <returns>The sales tax amount of the shipment.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShippingCalculator.GetReturnShippingTax(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the shipping tax for an <see cref="T:EPiServer.Commerce.Order.IShipment"/> that contains <see cref="T:EPiServer.Commerce.Order.IReturnLineItem"/>.
            The shipment must belong to an <see cref="T:EPiServer.Commerce.Order.IReturnOrderForm"/>.
            </summary>
            <param name="shipment">The return shipment.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculation.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="ShippingGetReturnShippingTax" lang="cs" />
            </example>
            <returns>The shipping tax amount of the return shipment.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShippingCalculator.GetReturnSalesTax(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the sales tax for an <see cref="T:EPiServer.Commerce.Order.IShipment"/> that contains <see cref="T:EPiServer.Commerce.Order.IReturnLineItem"/>.
            The shipment must belong to an <see cref="T:EPiServer.Commerce.Order.IReturnOrderForm"/>.
            </summary>
            <param name="shipment">The return shipment.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculation.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="ShippingGetReturnSalesTax" lang="cs" />
            </example>
            <returns>The sales tax amount of the return shipment.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.IShippingCalculator.GetReturnShippingTotals(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.Currency)">
            <summary>
            Gets the shipping totals of a return <see cref="T:EPiServer.Commerce.Order.IShipment"/>.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="currency">The currency to be used in the calculation.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="ShippingGetReturnShippingTotals" lang="cs" />
            </example>
            <returns>A shipping totals that excludes value of shipping cost and shipping tax.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.ITaxCalculator">
            <summary>
             Tax calculator calculates tax totals
            </summary>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/TaxCalculatorSample.cs" region="TaxCalculatorSample" lang="cs" />
            </example>
        </member>
        <member name="M:EPiServer.Commerce.Order.ITaxCalculator.GetShippingTaxTotal(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the shipping tax total.
            </summary>
            <param name="shipment">The shipment.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <returns>The shipping tax amount for the shipment.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.ITaxCalculator.GetTaxTotal(EPiServer.Commerce.Order.IOrderGroup,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the tax total.
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <returns>The total tax amount for the order.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.ITaxCalculator.GetTaxTotal(EPiServer.Commerce.Order.IOrderForm,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the tax total for the order form.
            </summary>
            <param name="orderForm">The order form.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculations</param>
            <returns>The total tax amount for the order form</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.ITaxCalculator.GetShippingReturnTaxTotal(EPiServer.Commerce.Order.IShipment,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the tax total for a return shipment that contains <see cref="T:EPiServer.Commerce.Order.IReturnLineItem"/>.
            </summary>
            <param name="shipment">The return shipment.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <returns>The shipping tax amount for the return shipment.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.ITaxCalculator.GetReturnTaxTotal(EPiServer.Commerce.Order.IReturnOrderForm,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the tax total for an <see cref="T:EPiServer.Commerce.Order.IReturnOrderForm"/>.
            </summary>
            <param name="returnOrderForm">The return order form.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="currency">The currency to be used in the calculations.</param>
            <returns>The total tax amount for the return order form.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.ITaxCalculator.GetSalesTax(EPiServer.Commerce.Order.ILineItem,Mediachase.Commerce.IMarket,EPiServer.Commerce.Order.IOrderAddress,Mediachase.Commerce.Money)">
            <summary>
            Gets the sales tax of an <see cref="T:EPiServer.Commerce.Order.ILineItem"/>.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="shippingAddress">The shipping address.</param>
            <param name="basePrice">The base price.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="TaxGetSalesTax" lang="cs" />
            </example>
            <returns>The sales tax.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.ITaxCalculator.GetSalesTax(System.Collections.Generic.IEnumerable{EPiServer.Commerce.Order.ILineItem},Mediachase.Commerce.IMarket,EPiServer.Commerce.Order.IOrderAddress,Mediachase.Commerce.Currency)">
            <summary>
            Gets the sales tax of a collection of <see cref="T:EPiServer.Commerce.Order.ILineItem"/>s.
            </summary>
            <param name="lineItems">The line items.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="shippingAddress">The shipping address.</param>
            <param name="currency">The currency.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="TaxGetSalesTaxes" lang="cs" />
            </example>
            <returns>The sales tax.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Order.ITaxCalculator.GetShippingTax(EPiServer.Commerce.Order.ILineItem,Mediachase.Commerce.IMarket,EPiServer.Commerce.Order.IOrderAddress,Mediachase.Commerce.Money)">
            <summary>
            Gets the shipping tax of an <see cref="T:EPiServer.Commerce.Order.ILineItem"/>.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="market">The market to be used in the calculation.</param>
            <param name="shippingAddress">The shipping address.</param>
            <param name="basePrice">The base price.</param>
            <example>
            <code source="../CodeSamples/EPiServer.Commerce/Orders/OrderCalculatorsSample.cs" region="TaxGetShippingTax" lang="cs" />
            </example>
            <returns>The shipping tax.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.ITaxValue">
            <summary>
                Represents taxes to be applied to order.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ITaxValue.Percentage">
            <summary>
            Gets the tax percentage.
            </summary>
            <value>The percentage.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.ITaxValue.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.ITaxValue.DisplayName">
            <summary>
            Gets the display name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:EPiServer.Commerce.Order.ITaxValue.TaxType">
            <summary>
            Gets the <see cref="P:EPiServer.Commerce.Order.ITaxValue.TaxType"/>
            </summary>
            <value>The tax type.</value>
        </member>
        <member name="T:EPiServer.Commerce.Order.LineItemPrices">
            <summary>
            The calculated prices for a line item.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.LineItemPrices.#ctor(Mediachase.Commerce.Money,Mediachase.Commerce.Money)">
            <summary>
            Creates an instance of <see cref="T:EPiServer.Commerce.Order.LineItemPrices"/>.
            </summary>
            <param name="extendedPrice">The extended price.</param>
            <param name="discountedPrice">The discounted price.</param>
        </member>
        <member name="P:EPiServer.Commerce.Order.LineItemPrices.ExtendedPrice">
            <summary>
            The extended price.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.LineItemPrices.DiscountedPrice">
            <summary>
            The discounted price.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.OrderActivityEvent">
            <summary>
            Defines event types for OrderActivity.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Order.OrderActivityEvent.OrderGroupCreated">
            <summary>
            A purchase order is created.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Order.OrderActivityEvent.OrderGroupOnHold">
            <summary>
            The order is on hold.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Order.OrderActivityEvent.OrderGroupCompleted">
            <summary>
            The order is completed.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Order.OrderActivityEvent.OrderGroupInProgress">
            <summary>
            The order is in progress.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Order.OrderActivityEvent.OrderGroupCancelled">
            <summary>
            The order is cancelled.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Order.OrderActivityEvent.ShipmentAwaitingInventory">
            <summary>
            The shipment is waiting for inventory.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Order.OrderActivityEvent.ShipmentCancelled">
            <summary>
            The shipment is cancelled.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Order.OrderActivityEvent.ShipmentPacking">
            <summary>
            The shipment is added to PickList.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Order.OrderActivityEvent.ShipmentReleased">
            <summary>
            The shipment is released.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Order.OrderActivityEvent.ShipmentShipped">
            <summary>
            The shipment is shipped.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Order.OrderActivityEvent.ReturnCreated">
            <summary>
            A return is created.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Order.OrderActivityEvent.PaymentAdded">
            <summary>
            New payment is added.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Order.OrderActivityEvent.CreatingRefund">
            <summary>
            A refund is created for the order.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Order.OrderActivityEvent.ReturnReceiptItems">
            <summary>
            The return has been received.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Order.OrderActivityEvent.PromotionAddCoupon">
            <summary>
            A coupon code is added.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Order.OrderActivityEvent.PromotionManualDiscount">
            <summary>
            A manual discount is added.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Order.OrderActivityEvent.PromotionRemoveCoupon">
            <summary>
            A coupon code is removed.
            </summary>
        </member>
        <member name="F:EPiServer.Commerce.Order.OrderActivityEvent.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.OrderFormTotals">
            <summary>
            The calculated totals for an order form
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.OrderFormTotals.#ctor(Mediachase.Commerce.Money,Mediachase.Commerce.Money,Mediachase.Commerce.Money,Mediachase.Commerce.Money,Mediachase.Commerce.Money,Mediachase.Commerce.Money,System.Collections.Generic.IDictionary{EPiServer.Commerce.Order.IShipment,EPiServer.Commerce.Order.ShippingTotals})">
            <summary>
            Creates an instance of <see cref="T:EPiServer.Commerce.Order.OrderFormTotals"/>.
            </summary>
            <param name="handlingTotal">The order form handling total.</param>
            <param name="shippingTotal">The order form shipping total.</param>
            <param name="subTotal">The order form sub total.</param>
            <param name="taxTotal">The order form tax total.</param>
            <param name="total">The order form total.</param>
            <param name="discountTotal">The order form discount total.</param>
            <param name="shippingTotals">The shipping totals.</param>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderFormTotals.HandlingTotal">
            <summary>
            The order form handling total
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderFormTotals.ShippingTotal">
            <summary>
            The order form shipping total
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderFormTotals.SubTotal">
            <summary>
            The total of extended prices for all line items in the order form.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderFormTotals.TaxTotal">
            <summary>
            The order form tax total
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderFormTotals.Total">
            <summary>
            The order form total
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderFormTotals.DiscountTotal">
            <summary>
            The order form discount total.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderFormTotals.Item(EPiServer.Commerce.Order.IShipment)">
            <summary>
            Gets the shipping totals for an shipment
            </summary>
            <param name="shipment">The shipment</param>
            <returns>The totals for the shipment</returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.OrderGroupTotals">
            <summary>
            The calculated totals for an order
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.OrderGroupTotals.#ctor(Mediachase.Commerce.Money,Mediachase.Commerce.Money,Mediachase.Commerce.Money,Mediachase.Commerce.Money,Mediachase.Commerce.Money,System.Collections.Generic.IDictionary{EPiServer.Commerce.Order.IOrderForm,EPiServer.Commerce.Order.OrderFormTotals})">
            <summary>
            Creates an instance of <see cref="T:EPiServer.Commerce.Order.OrderGroupTotals"/>
            </summary>
            <param name="subTotal">The order sub total</param>
            <param name="total">The order total</param>
            <param name="shippingTotal">The order shipping total</param>
            <param name="taxTotal">The order tax total</param>
            <param name="handlingTotal">The order handling total</param>
            <param name="orderFormTotals">The order form totals</param>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderGroupTotals.SubTotal">
            <summary>
            The total of discounted prices for all line items in the order.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderGroupTotals.Total">
            <summary>
            The total for the order
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderGroupTotals.ShippingTotal">
            <summary>
            The shipping total for the order
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderGroupTotals.HandlingTotal">
            <summary>
            The handling total for the order
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderGroupTotals.TaxTotal">
            <summary>
            The tax total for the order
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderGroupTotals.Item(EPiServer.Commerce.Order.IOrderForm)">
            <summary>
            Gets the totals for an order form
            </summary>
            <param name="orderForm">The order form</param>
            <returns>The totals for the order form</returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.OrderReference">
            <summary>
            Reference to order instances.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.OrderReference.#ctor(System.Int32,System.String,System.Guid,System.Type)">
            <summary>
            Creates an instance of the <see cref="T:EPiServer.Commerce.Order.OrderReference"/>.
            </summary>
            <param name="orderGroupId">The order id</param>
            <param name="customerId">The customer identity.</param>
            <param name="orderGroupType">The order type</param>
            <param name="name">The name of the order. The name is not unique for each order, instead it's suppose to differentiate orders of the same type.</param>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderReference.OrderGroupId">
            <summary>
            The order Id
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderReference.Name">
            <summary>
                Gets the name of the order. The name is not unique for each order, instead it's suppose to differentiate orders of the same type.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderReference.CustomerId">
            <summary>
                Gets the customer identity.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderReference.OrderType">
            <summary>
            The order type
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.OrderReference.ToString">
            <summary>
            Combination of <see cref="P:EPiServer.Commerce.Order.OrderReference.OrderGroupId"/>, and <see cref="P:EPiServer.Commerce.Order.OrderReference.OrderType"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:EPiServer.Commerce.Order.OrderSearchFilter">
            <summary>
            Filter class used to filter which orders to retrieve.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.OrderSearchFilter.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:EPiServer.Commerce.Order.OrderSearchFilter"/>
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderSearchFilter.CreatedFrom">
            <summary>
            Specifies the time that returned orders were created after.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderSearchFilter.CreatedTo">
            <summary>
            Specifies the time that returned orders were created before.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderSearchFilter.MarketId">
            <summary>
            Specified that only orders created in specified market should be returned.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderSearchFilter.ModifiedFrom">
            <summary>
            Specifies the time that returned orders were modified after.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderSearchFilter.ModifiedTo">
            <summary>
            Specifies the time that returned orders were modified before.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderSearchFilter.Statuses">
            <summary>
            Specified that only orders having statuses should be returned.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderSearchFilter.CustomerId">
            <summary>
            Specifies that only carts/orders created by specified customer should be returned.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderSearchFilter.StartingIndex">
            <summary>
            Gets or sets the starting index.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderSearchFilter.RecordsToRetrieve">
            <summary>
            Gets or sets the number of records to retrieve.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderSearchFilter.ReturnTotalCount">
            <summary>
            Flag to indicate if the search should return the total count of matched orders/carts.
            </summary>
            <remarks>If true, the true total records count will be return, otherwise, set to 0.</remarks>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderSearchFilter.ParentOrderGroupId">
            <summary>
            This can be used to relate purchase orders to a payment plan or other order.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.OrderSearchResults`1">
            <summary>
            The class represents order search results from <see cref="T:EPiServer.Commerce.Order.IOrderSearchService"/>.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.OrderSearchResults`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Commerce.Order.OrderSearchResults`1"/> class.
            </summary>
            <param name="orders">The collection of orders found.</param>
            <param name="totalRecords">The total number of records found.</param>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderSearchResults`1.Orders">
            <summary>
            The returned orders.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.OrderSearchResults`1.TotalRecords">
            <summary>
            The total records found.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Order.ShippingTotals">
            <summary>
            The calculated totals for a shipment
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Order.ShippingTotals.#ctor(Mediachase.Commerce.Money,Mediachase.Commerce.Money,Mediachase.Commerce.Money,System.Collections.Generic.IDictionary{EPiServer.Commerce.Order.ILineItem,EPiServer.Commerce.Order.LineItemPrices})">
            <summary>
            Creates an instance of <see cref="T:EPiServer.Commerce.Order.ShippingTotals"/>.
            </summary>
            <param name="total">The total for the items in the shipment.</param>
            <param name="shippingCost">The shipping cost.</param>
            <param name="shippingTax">The shipping tax.</param>
            <param name="lineItemPrices">The line item prices.</param>
        </member>
        <member name="P:EPiServer.Commerce.Order.ShippingTotals.ShippingCost">
            <summary>
            The shipping cost.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ShippingTotals.ShippingTax">
            <summary>
            The shipping tax.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ShippingTotals.ItemsTotal">
            <summary>
            The extended price total for the line items in the shipment.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Order.ShippingTotals.Item(EPiServer.Commerce.Order.ILineItem)">
            <summary>
            Gets the prices for a line item.
            </summary>
            <param name="lineItem">The line item.</param>
            <returns>The prices for the line item.</returns>
        </member>
        <member name="T:EPiServer.Commerce.Orders.Internal.OrderGroupFactory">
            <summary>
            This class is intended to be used internally by EPiServer. We do not support any backward compatibility on this.
            
            Responsible for creating implementations of order group components.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Orders.Internal.OrderGroupFactory.#ctor(System.Collections.Generic.IEnumerable{EPiServer.Commerce.Order.IOrderGroupBuilder})">
            <summary>
            Initializes an instance of <see cref="T:EPiServer.Commerce.Orders.Internal.OrderGroupFactory"/> with a collection of <see cref="T:EPiServer.Commerce.Order.IOrderGroupBuilder"/>.
            </summary>
            <param name="builders">The collection of <see cref="T:EPiServer.Commerce.Order.IOrderGroupBuilder"/>.</param>
        </member>
        <member name="M:EPiServer.Commerce.Orders.Internal.OrderGroupFactory.BuilderFor(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Retrieves the <see cref="T:EPiServer.Commerce.Order.IOrderGroupBuilder"/> implementation for the specific order group.
            </summary>
            <param name="orderGroup">The order group to get a builder implementation for.</param>
            <returns>A builder that can be used to create sub-objects for <paramref name="orderGroup"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Orders.Internal.OrderGroupFactory.CreateCardPayment(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the card payment.
            </summary>
            <param name="orderGroup">The order group to create object for.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.ICreditCardPayment"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Orders.Internal.OrderGroupFactory.CreateLineItem(System.String,EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the line item.
            </summary>
            <param name="code">The line item code.</param>
            <param name="orderGroup">The order group to create object for.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.ILineItem"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Orders.Internal.OrderGroupFactory.CreateOrderAddress(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the order address.
            </summary>
            <param name="orderGroup">The order group to create object for.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IOrderAddress"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Orders.Internal.OrderGroupFactory.CreateOrderForm(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the order form.
            </summary>
            <param name="orderGroup">The order group to create object for.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IOrderForm"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Orders.Internal.OrderGroupFactory.CreateOrderNote(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the order note.
            </summary>
            <param name="orderGroup">The order group to create object for.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IOrderNote"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Orders.Internal.OrderGroupFactory.CreatePayment(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the payment.
            </summary>
            <param name="orderGroup">The order group to create object for.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IPayment"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Orders.Internal.OrderGroupFactory.CreatePayment(EPiServer.Commerce.Order.IOrderGroup,System.Type)">
            <summary>
            Creates the payment with a specified payment implementation.
            </summary>
            <param name="orderGroup">The order group to create object for.</param>
            <param name="paymentType">The payment implementation type.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IPayment"/>.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Orders.Internal.OrderGroupFactory.CreateShipment(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the shipment.
            </summary>
            <param name="orderGroup">The order group to create object for.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.IShipment"/></returns>
        </member>
        <member name="M:EPiServer.Commerce.Orders.Internal.OrderGroupFactory.CreateTaxValue(EPiServer.Commerce.Order.IOrderGroup)">
            <summary>
            Creates the tax value.
            </summary>
            <param name="orderGroup">The order group to create object for.</param>
            <returns>An <see cref="T:EPiServer.Commerce.Order.ITaxValue"/></returns>
        </member>
        <member name="T:EPiServer.Commerce.Orders.OrderSearchField">
            <summary>
            This class used to define which field use to filter the search result.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Serialization.Json.CurrencyConverter">
            <summary>
                Converts a <see cref="T:Mediachase.Commerce.Currency"/> object to json and back.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Serialization.Json.CurrencyConverter.CanConvert(System.Type)">
            <summary>
                Determines whether this converter can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
              <c>true</c> if this converter can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:EPiServer.Commerce.Serialization.Json.CurrencyConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Deserializes a <see cref="T:Mediachase.Commerce.Currency"/> instance from json.
            </summary>
            <param name="reader">The reader.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value.</param>
            <param name="serializer">The serializer.</param>
            <returns>The currency.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Serialization.Json.CurrencyConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Serializes a  <see cref="T:Mediachase.Commerce.Currency"/> instance to json.
            </summary>
            <param name="writer">The writer.</param>
            <param name="value">The value.</param>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="T:EPiServer.Commerce.Serialization.Json.MoneyConverter">
            <summary>
                Converts a <see cref="T:Mediachase.Commerce.Money"/> object to json and back.
            </summary>
        </member>
        <member name="M:EPiServer.Commerce.Serialization.Json.MoneyConverter.CanConvert(System.Type)">
            <summary>
                Determines whether this converter can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
              <c>true</c> if this converter can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:EPiServer.Commerce.Serialization.Json.MoneyConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Deserializes a <see cref="T:Mediachase.Commerce.Money"/> instance from json.
            </summary>
            <param name="reader">The reader.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value.</param>
            <param name="serializer">The serializer.</param>
            <returns>The currency.</returns>
        </member>
        <member name="M:EPiServer.Commerce.Serialization.Json.MoneyConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Not implemented.
            </summary>
            <param name="writer">The writer.</param>
            <param name="value">The value.</param>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="P:EPiServer.Commerce.Serialization.Json.MoneyConverter.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:Newtonsoft.Json.JsonConverter" /> can write JSON.
            </summary>
            <value>
            Always <c>false</c>.
            </value>
        </member>
        <member name="T:EPiServer.Commerce.Serialization.Json.MoneyConverter.MoneyDto">
            <summary>
            DTO class with read-write properties so that it can be used to
            deserialize the data in a <see cref="T:Mediachase.Commerce.Money" /> instance.
            </summary>
        </member>
        <member name="T:EPiServer.Commerce.Storage.IExtendedProperties">
            <summary>
            Allows for reading and writing custom meta fields.
            </summary>
        </member>
        <member name="P:EPiServer.Commerce.Storage.IExtendedProperties.Properties">
            <summary>
            Gets the property bag for dealing with custom meta fields.
            </summary>
        </member>
    </members>
</doc>
