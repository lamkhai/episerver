<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EPiServer.Social.Common.Rest</name>
    </assembly>
    <members>
        <member name="T:EPiServer.Social.Common.Rest.ExtensionDataAdapter">
            <summary>
            The ExtensionDataAdapter class provides the conversion functionality
            necessary to translate arbitrary extension data to a JObject and back.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ExtensionDataAdapter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ExtensionDataAdapter.AdaptFromExtensionData``1(``0)">
            <summary>
            Converts the specified extension data to a JObject 
            prepared for being sent as an part of an http request message
            </summary>
            <remarks>
            This method utilizes the JsonSerializer from the Newtonsoft library.         
            </remarks>
            <typeparam name="TExtension">Type of the extension data</typeparam>
            <param name="data">Extension data to be converted to a JObject</param>
            <returns>Extension data in the form of a JObject</returns>        
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ExtensionDataAdapter.AdaptToExtensionData``1(Newtonsoft.Json.Linq.JObject,System.Type)">
            <summary>
            Converts extension data represented by the specified JObject 
            to the specified type.
            </summary>
            <remarks>
            This method utilizes the JsonSerializer from the Newtonsoft library.
            </remarks>
            <typeparam name="TExtension">Nominal type of the extension data to be returned</typeparam>
            <param name="jObject">JObject to be converted</param>
            <param name="actualType">Actual type of the extension data to be deserialized</param>
            <returns>Extension data in the form of the specified type</returns>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.ExtensionRequestAdapter">
            <summary>
            The ExtensionRequestAdapter class converts extension data
            to an ExtensionRequest for persistance in a MongoDB
            database. Additionally, it converts instances of 
            ExtensionRequest back to the original extension data.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ExtensionRequestAdapter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ExtensionRequestAdapter.AdaptToExtensionRequest``1(``0)">
            <summary>
            Creates an ExtensionRequest representing the specified extension data.
            </summary>
            <typeparam name="TExtension">Data type of the extension data</typeparam>
            <param name="extension">Data to encapsulated by an ExtensionRequest</param>
            <returns>ExtensionRequest representing the specified extension data</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ExtensionRequestAdapter.AdaptToExtensionType``1">
            <summary>
            Returns the full type name of the specified extension type paramater.
            </summary>
            <typeparam name="TExtension">Data type of the extension data</typeparam>
            <returns>The full type name of the specified extension type paramater</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ExtensionRequestAdapter.CreateJObject``1(``0)">
            <summary>
            Creates a BsonDocument for the specified extension data.
            </summary>
            <typeparam name="TExtension">Type of the extension data to be converted</typeparam>
            <param name="extension">Extension data to be converted</param>
            <returns>The extension data in the form of a BsonDocument</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ExtensionRequestAdapter.CreateTypeHierarchy(System.Type)">
            <summary>
            Creates a collection of type names representing the hierarchy
            of types for the specified type.
            </summary>
            <param name="type">Type for which a type hierarchy should be evaluated</param>
            <returns>Collection of type names representing the hierarchy of types for the specified type</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ExtensionRequestAdapter.CreateQualifiedType(System.Type)">
            <summary>
            Returns the qualified type name to be stored as metadata on
            an extension document. This name is in the traditional .NET format 
            of: "{namespace}.{class-name},{assembly-name}"
            </summary>
            <param name="extensionType">Extension data type</param>
            <returns>Qualified type name</returns>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.ExtensionResponseAdapter">
            <summary>
            The ExtensionRequestAdapter class converts extension data
            to an ExtensionRequest for persistance in a MongoDB
            database. Additionally, it converts instances of 
            ExtensionRequest back to the original extension data.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ExtensionResponseAdapter.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ExtensionResponseAdapter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ExtensionResponseAdapter.AdaptFromExtensionResponse``1(EPiServer.Social.Common.Rest.Contracts.ExtensionResponse)">
            <summary>
            Restores the data encapsulated by an ExtensionRequest to an instnace
            of its original .NET data type.
            </summary>
            <param name="extensionResponse">Extension document containing data to be restored</param>
            <returns>Restored extension data</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ExtensionResponseAdapter.GetExtensionType(System.String)">
            <summary>
            Gets an instance of Type corresponding to the specified
            type name.
            </summary>
            <param name="qualifiedTypeName">Qualified name of the data type</param>
            <returns>Type corresponding to the specified type name.</returns>
            <remarks>
            The type will be retrieved from a type cache when possible. If the
            type has not yet been cached, it will be resolved and added to the
            cache.
            </remarks>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.FilterExpressionAdapter">
            <summary>
            The FilterExpressionAdapter converts instances of FilterExpression
            to corresponding instances of ExpressionFilter.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.Adapt(EPiServer.Social.Common.FilterExpression)">
            <summary>
            Converts the specified FilterExpression to a corresponding ExtensionFilter.
            </summary>
            <param name="expression">FilterExpression to be adapted</param>
            <returns>A corresponding ExtensionFilter</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.Adapt(EPiServer.Social.Common.Rest.Contracts.ExtensionFilter)">
            <summary>
            Returns the serialized Json string corresponding to an instance of the ExtensionFilter.
            </summary>
            <param name="filter">The ExtensionFilter to serialize</param>
            <returns>The serialized Json string corresponding to an instance of the ExtensionFilter</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.Visit(EPiServer.Social.Common.FilterExpression)">
            <summary>
            Visits the specified expression to be interpreted as an ExtensionFilter.
            </summary>
            <param name="expression">Expression to be interpreted</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.Visit(EPiServer.Social.Common.AndExpression)">
            <summary>
            Visits the specified expression to be interpreted as an 'And' ExtensionFilter.
            </summary>
            <param name="expression">Expression to be interpreted</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.Visit(EPiServer.Social.Common.OrExpression)">
            <summary>
            Visits the specified expression to be interpreted as an 'Or' ExtensionFilter.
            </summary>
            <param name="expression">Expression to be interpreted</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.Visit(EPiServer.Social.Common.EqualToExpression)">
            <summary>
            Visits the specified expression to be interpreted as an 'EqualTo' ExtensionFilter.
            </summary>
            <param name="expression">Expression to be interpreted</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.Visit(EPiServer.Social.Common.ContainsExpression)">
            <summary>
            Visits the specified expression to be interpreted as an 'Contains' ExtensionFilter.
            </summary>
            <param name="expression">Expression to be interpreted</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.Visit(EPiServer.Social.Common.AnyExpression)">
            <summary>
            Visits the specified expression to be interpreted as an AnyExpression filter.
            </summary>
            <param name="expression">Expression to be interpreted</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.Visit(EPiServer.Social.Common.EnumerableValueExpression)">
            <summary>
            Visits the specified expression to be interpreted as an EnumerableValueExpression filter.
            </summary>
            <param name="expression">Expression to be interpreted</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.Visit(EPiServer.Social.Common.GreaterThanExpression)">
            <summary>
            Visits the specified expression to be interpreted as an 'GreaterThan' ExtensionFilter.
            </summary>
            <param name="expression">Expression to be interpreted</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.Visit(EPiServer.Social.Common.GreaterThanOrEqualToExpression)">
            <summary>
            Visits the specified expression to be interpreted as an 'GreaterThanOrEqualTo' ExtensionFilter.
            </summary>
            <param name="expression">Expression to be interpreted</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.Visit(EPiServer.Social.Common.LessThanExpression)">
            <summary>
            Visits the specified expression to be interpreted as an 'LessThan' ExtensionFilter.
            </summary>
            <param name="expression">Expression to be interpreted</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.Visit(EPiServer.Social.Common.LessThanOrEqualToExpression)">
            <summary>
            Visits the specified expression to be interpreted as an 'LessThanOrEqualTo' ExtensionFilter.
            </summary>
            <param name="expression">Expression to be interpreted</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.Visit(EPiServer.Social.Common.FieldExpression)">
            <summary>
            Visits the specified expression to be interpreted as an 'field' ExtensionFilter.
            </summary>
            <param name="expression">Expression to be interpreted</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.Visit(EPiServer.Social.Common.BooleanValueExpression)">
            <summary>
            Visits the specified expression to be interpreted as an 'boolean value' ExtensionFilter.
            </summary>
            <param name="expression">Expression to be interpreted</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.Visit(EPiServer.Social.Common.DateTimeValueExpression)">
            <summary>
            Visits the specified expression to be interpreted as an 'DateTime value' ExtensionFilter.
            </summary>
            <param name="expression">Expression to be interpreted</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.Visit(EPiServer.Social.Common.DoubleValueExpression)">
            <summary>
            Visits the specified expression to be interpreted as an 'double value' ExtensionFilter.
            </summary>
            <param name="expression">Expression to be interpreted</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.Visit(EPiServer.Social.Common.IntegerValueExpression)">
            <summary>
            Visits the specified expression to be interpreted as an 'integer value' ExtensionFilter.
            </summary>
            <param name="expression">Expression to be interpreted</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.Visit(EPiServer.Social.Common.StringValueExpression)">
            <summary>
            Visits the specified expression to be interpreted as an 'string value' ExtensionFilter.
            </summary>
            <param name="expression">Expression to be interpreted</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.BuildBinaryExtensionFilter(EPiServer.Social.Common.BinaryExpression,System.String)">
            <summary>
            Builds an ExtensionFilter corresponding to the specified BinaryExpression.
            </summary>
            <param name="expression">Expression to be converted</param>
            <param name="extensionFilterType">Type of ExtensionFilter to be built</param>
            <returns>ExtensionFilter corresponding to the specified BinaryExpression</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.BuildValueExtensionFilter``1(EPiServer.Social.Common.ValueExpression{``0})">
            <summary>
            Builds an ExtensionFilter corresponding to the specified ValueExpression.
            </summary>
            <typeparam name="T">Type of value in the expression</typeparam>
            <param name="expression">Expression to be converted</param>        
            <returns>ExtensionFilter corresponding to the specified ValueExpression</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FilterExpressionAdapter.BuildExtensionFilterForEnumerableValueExpression(EPiServer.Social.Common.EnumerableValueExpression)">
            <summary>
            Builds an ExtensionFilter corresponding to the specified EnumerableValueExpression.
            </summary>
            <typeparam name="T">Type of value in the expression</typeparam>
            <param name="expression">Expression to be converted</param>        
            <returns>ExtensionFilter corresponding to the specified FilterExpression</returns>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.FieldNameResolver">
            <summary>
            The FieldNameResolver class interprets a FieldExpression instance
            to resolve the full name of the corresponding that field.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FieldNameResolver.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.FieldNameResolver.Resolve(EPiServer.Social.Common.FieldExpression)">
            <summary>
            Resolves the field name for the specified FieldExpression.
            </summary>
            <param name="field">FieldExpression to be interpreted</param>
            <returns>Field name</returns>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.SortInfoAdapter">
            <summary>
            Converts SortInfo to the format anticipated by the Social
            cloud services.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.SortInfoAdapter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.SortInfoAdapter.#ctor(System.Collections.Generic.Dictionary{EPiServer.Social.Common.SortField,System.String})">
            <summary>
            Constructor
            </summary>
            <param name="knownFields">A map of known fields to their corresponding identifiers</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.SortInfoAdapter.Adapt(System.Collections.Generic.IEnumerable{EPiServer.Social.Common.SortInfo})">
            <summary>
            Converts a collection of sort rules to the format anticipated
            by the Social cloud services.
            </summary>
            <param name="sortRules">Sort rules to be adapted</param>
            <returns>String representing the sepcified sort rules</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.SortInfoAdapter.Adapt(EPiServer.Social.Common.SortInfo)">
            <summary>
            Converts a sort rules to the format anticipated
            by the Social cloud services.
            </summary>
            <param name="sortRule">Sort rules to be adapted</param>
            <returns>String representing the sepcified sort rules</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.SortInfoAdapter.GetFieldIdentifier(EPiServer.Social.Common.SortField)">
            <summary>
            Gets the identifier for the specified sort field.
            </summary>
            <param name="sortField">Field to identify</param>
            <returns>Identifier for the specified sort field</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.SortInfoAdapter.IsKnownField(EPiServer.Social.Common.SortField)">
            <summary>
            Determines if the specified sort field is known to this adapter.
            </summary>
            <param name="sortField">SortField to verify</param>
            <returns>True if the sort field is known to this adapter, false otherwise</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.SortInfoAdapter.GetIdentifierForKnownField(EPiServer.Social.Common.SortField)">
            <summary>
            Gets the field identifier for a field that is known to this adapter.
            </summary>
            <param name="sortField">Field to identify</param>
            <returns>Identifier for the specified sort field</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.SortInfoAdapter.GetIdentifierForUnknownField(EPiServer.Social.Common.SortField)">
            <summary>
            Gets the field identifier for a field that is unknown to this adapter.
            </summary>
            <param name="sortField">Field to identify</param>
            <returns>Identifier for the specified sort field</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ResponseMessageAdapter.Adapt``1(System.Net.Http.HttpResponseMessage)">
            <summary>
            Extracts the content of a response message.
            </summary>
            <typeparam name="T">Type of content to be extracted from the message</typeparam>
            <param name="responseMessage">Response message from which to extract content</param>
            <returns>Content as the specified type. Null is returned if content cannot be extracted.</returns>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.AssemblyVersionResolver">
            <summary>
            The AssemblyVersionResolver class determines the current version of
            Social's client software by retrieving it from this class's containing
            assembly.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.AssemblyVersionResolver.GetVersion">
            <summary>
            Gets the version from the containing assembly.
            </summary>
            <returns>Version of the containing assembly</returns>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.ClientVersionMessageHandler">
            <summary>
            An HTTP message handler that applies a client version to all outgoing requests.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ClientVersionMessageHandler.#ctor(EPiServer.Social.Common.Rest.IVersionResolver)">
            <summary>
            Constructor
            </summary>
            <param name="versionResolver">Determines the version to be applied to requests</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ClientVersionMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Applies an "X-Client-Version" header to outgoing HTTP requests.
            </summary>
            <param name="request">Outgoing request</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>HTTP response</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ClientVersionMessageHandler.GetCurrentVersion(EPiServer.Social.Common.Rest.IVersionResolver)">
            <summary>
            Gets the version to be applied to HTTP requests.
            </summary>
            <param name="resolver">Determines the version to be applied to requests</param>
            <returns>Version string</returns>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.IVersionResolver">
            <summary>
            The IVersionResolver interface describes a component capable of
            determining the version of a client communicating with Social
            cloud services.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.IVersionResolver.GetVersion">
            <summary>
            Gets the current version.
            </summary>
            <returns>The current version</returns>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.RouteFormatter">
            <summary>
            This abstract base class defines common functionality for social service 
            route formatting.
            </summary>
        </member>
        <member name="F:EPiServer.Social.Common.Rest.RouteFormatter.queryString">
            <summary>
            The route query string.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.RouteFormatter.#ctor">
            <summary>
            Constructor 
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.RouteFormatter.Build">
            <summary>
            Builds the route.
            </summary>
            <returns>The string representing the built route.</returns>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.ExtensionDocument">
            <summary>
            The ExtensionDocument class is a MongoDB document model 
            encapsulating custom data, applied to other MongoDB documents,
            to further extend them.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ExtensionDocument.#ctor(Newtonsoft.Json.Linq.JObject,System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="data">Custom data to be applied as an extension</param>
            <param name="typeHierarchy">Collection of type names identifying the custom data's type hierarchy</param>
            <param name="dataType">Full name of the extension data's actual type</param>
            <param name="qualifiedType">Qualified type name of the extension data's actual type</param>
        </member>
        <member name="P:EPiServer.Social.Common.Rest.ExtensionDocument.Data">
            <summary>
            Gets the extension data encapsulated by this document.
            </summary>
        </member>
        <member name="P:EPiServer.Social.Common.Rest.ExtensionDocument.TypeHierarchy">
            <summary>
            Gets the collection of type names identifying the extension 
            data's type hierarchy
            </summary>
        </member>
        <member name="P:EPiServer.Social.Common.Rest.ExtensionDocument.DataType">
            <summary>
            Gets the full name of the extension data's actual type.
            </summary>
        </member>
        <member name="P:EPiServer.Social.Common.Rest.ExtensionDocument.QualifiedType">
            <summary>
            Gets the qualified type name of the extension data's actual type.
            </summary>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.DateTimeExtensions">
            <summary>
            The DateTimeExtensions class applies helper methods to support
            interations with DateTime values.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.DateTimeExtensions.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.DateTimeExtensions.AsMillisecondsFromUnixEpoch(System.DateTime)">
            <summary>
            Returns a value representing the total number of milliseconds
            that have elapsed between the Unix epoch and this DateTime.
            </summary>
            <param name="dateTime">DateTime value to evaluate</param>
            <returns>Milliseconds elapsed since the Unix epoch</returns>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.AuthenticatingMessageHandler">
            <summary>
            The AuthenticatingMessageHandler class is a delegating handler
            that appends an 'Authorization' header to each request
            it sends.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.AuthenticatingMessageHandler.#ctor(EPiServer.Social.Common.Rest.IAuthenticationHeaderValueFactory)">
            <summary>
            Constructor
            </summary>
            <param name="headerValueFactory">Factory generating auth header values</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.AuthenticatingMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Applies an 'Authorization' header value to each request prior to sending.
            </summary>
            <param name="request">Request to which an 'Authorization' header should be attached</param>
            <param name="cancellationToken">Request cancellation token</param>
            <returns>Response message resulting from the request</returns>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.CachingHttpClientFactory">
            <summary>
            The CachingHttpClientFactory class constructs instances of
            HttpClient capable of communicating with an identified service.
            The factory delivers HttpClient instances from a cache if one
            has already been constructed for a particular service.
            </summary>
            <remarks>
            HttpClient instances are reentrant and threadsafe. Pull
            clients from the cache to prevent socket consumption issues
            upon frequent access.
            </remarks>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.CachingHttpClientFactory.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.CachingHttpClientFactory.#ctor(System.String,System.Int32,System.Net.Http.DelegatingHandler[])">
            <summary>
            Constructor
            </summary>
            <param name="serviceBaseAddress">Base address for the service to be targeted</param>
            <param name="timeout">Gets or sets the number of milliseconds to wait before the request times out</param>
            <param name="messageHandler">a delegating HTTP handler capable of processing Http messages</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.CachingHttpClientFactory.Create">
            <summary>
            Creates an instance of HttpClient targeting the service address
            identified for this factory. If a client for this service has
            previously been requested, a cached instance will be returned.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.CriteriaRouteFormatter">
            <summary>
            This abstract base class defines common functionality for defining query strings
            with criteria filters for use in social service routes.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.CriteriaRouteFormatter.WithOffset(System.String)">
            <summary>
            Appends an indication to the query string as to whether to start taking matched items
            starting at some offset.
            </summary>
            <param name="offset">The offset to start taking matched items from.</param>
            <returns>The instance of the CriteriaRouteFormatter</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.CriteriaRouteFormatter.WithSize(System.String)">
            <summary>
            Appends an indication to the query string as to whether to limite the results set by some size.
            </summary>
            <param name="size">The max size of the result set.</param>
            <returns>The instance of the CriteriaRouteFormatter</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.CriteriaRouteFormatter.WithCalculateTotalCount(System.Boolean)">
            <summary>
            Appends an indication to the query string as to whether to calculate the matched total count.
            </summary>
            <param name="calculateTotalCount">Boolean that indicates whether to calculate total count.</param>
            <returns>The instance of the CriteriaRouteFormatter</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.CriteriaRouteFormatter.WithSort(System.String)">
            <summary>
            Appends an indication to the query string as to whether to sort results.
            </summary>
            <param name="sort">The sort specification.</param>
            <returns>The instance of the CriteriaRouteFormatter</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.CriteriaRouteFormatter.WithExtensionType(System.String)">
            <summary>
            Appends an indication to the query string as to whether to filter by extension type.
            </summary>
            <param name="type">The extension type.</param>
            <returns>The instance of the CriteriaRouteFormatter</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.CriteriaRouteFormatter.WithExtensionFilter(System.String)">
            <summary>
            Appends an indication to the query string as to whether to filter by extension.
            </summary>
            <param name="filter">The extension filter.</param>
            <returns>The instance of the CriteriaRouteFormatter</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.CriteriaRouteFormatter.WithIncludeSubclasses(System.Nullable{System.Boolean})">
            <summary>
            Appends an indication to the query string as to whether to include subclasses.
            </summary>
            <param name="includeSubclasses">Whether to include subclasses or not.</param>
            <returns>The instance of the CriteriaRouteFormatter</returns>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.HmacAlgorithm">
            <summary>
            The HmacAlgorithm class generates a signature certifying the
            integrity of a message.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.HmacAlgorithm.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="applicationId">Identifier of the application that this algorithm is configured to support</param>
            <param name="applicationSecret">Cryptographic key that this algorithm will use to compute request signatures</param>
        </member>
        <member name="P:EPiServer.Social.Common.Rest.HmacAlgorithm.ApplicationId">
            <summary>
            Gets the identifier of the application that this algorithm
            is configured to support.
            </summary>
        </member>
        <member name="P:EPiServer.Social.Common.Rest.HmacAlgorithm.ApplicationSecret">
            <summary>
            Gets the cryptographic key that this algorithm will
            use to compute request signatures.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.HmacAlgorithm.ComputeSignature(EPiServer.Social.Common.Rest.Contracts.HmacMessage)">
            <summary>
            Computes a signature certifying the integrity of the provided message.        
            </summary>
            <param name="message">Message to be signed</param>
            <returns>Signature of the provided message</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.HmacAlgorithm.GenerateTimestamp">
            <summary>
            Generates a timestamp, denoting the current time, in a format
            suitable for computing a message signature.
            </summary>
            <returns>Timestamp denoting the current time</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.HmacAlgorithm.GenerateNonce">
            <summary>
            Generates a nonce value in a format suitable for computing 
            a message signature.
            </summary>
            <returns>Nonce value</returns>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.HmacAuthenticationHeaderValueFactory">
            <summary>
            The HmacAuthenticationHeaderValueFactory class creates 'Authorization'
            headers for requests by leveraging a configured HMAC algorithm.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.HmacAuthenticationHeaderValueFactory.#ctor(EPiServer.Social.Common.Rest.IHmacAlgorithm)">
            <summary>
            Constructor
            </summary>
            <param name="hmacAlgorithm">Algorithm with which to sign requests</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.HmacAuthenticationHeaderValueFactory.CreateAsync(System.Net.Http.HttpRequestMessage)">
            <summary>
            Creates an AuthenticationHeaderValue for the provided request, given the
            signing algorithm configured for this factory.
            </summary>
            <param name="request">Request to be signed</param>
            <returns>AuthenticationHeaderValue for the request</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.HmacAuthenticationHeaderValueFactory.BuildHmacMessage(System.Net.Http.HttpContent,System.UInt64,System.String,System.Net.Http.HttpMethod,System.Uri,System.String)">
            <summary>
            Constructs an HmacMessage comprised of the specified request components.
            </summary>
            <param name="body">Request content</param>
            <param name="timestamp">Request timestamp</param>
            <param name="nonce">Nonce value</param>
            <param name="requestMethod">Request method</param>
            <param name="requestUri">Request URI</param>
            <param name="applicationID">ID of request originator</param>
            <returns>HmacMessage comprised of the specified request components</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.HmacAuthenticationHeaderValueFactory.CreateHeaderValue(System.String,System.UInt64,System.String,System.String)">
            <summary>
            Constructs an AuthenticationHeaderValue comprised of the specified components.
            </summary>
            <param name="applicationId">ID of request originator</param>
            <param name="timestamp">Request timestamp</param>
            <param name="nonce">Nonce value</param>
            <param name="signature">Request signature</param>
            <returns></returns>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.DelegatingHttpClientFactory">
            <summary>
            The DelegatingHttpClientFactory class constructs instances of
            HttpClient capable of communicating with an identified service.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.DelegatingHttpClientFactory.#ctor(System.String,System.Int32,System.Net.Http.DelegatingHandler[])">
            <summary>
            Constructor
            </summary>
            <param name="serviceBaseAddress">Base address for target service</param>
            <param name="requestTimeout">Milliseconds to wait before request times out</param>
            <param name="delegatingHandlers">Message handlers to apply to request pipeline</param>
        </member>
        <member name="P:EPiServer.Social.Common.Rest.DelegatingHttpClientFactory.ServiceBaseAddress">
            <summary>
            Gets the base address for the service to be targeted
            by clients constructed with this service.
            </summary>
        </member>
        <member name="P:EPiServer.Social.Common.Rest.DelegatingHttpClientFactory.RequestTimeout">
            <summary>
            Gets or sets the number of milliseconds to wait before the request times out.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.DelegatingHttpClientFactory.Create">
            <summary>
            Creates an instance of HttpClient targeting the service address
            identified for this factory.
            </summary>
            <returns>New instance of HttpClient</returns>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.HttpClientFactoryResolver">
            <summary>
             Resolves the correct httpclientfactory 
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.HttpClientFactoryResolver.Create(System.String)">
            <summary>
            Exposes a method to create the IHttpClientFactory when an endpoint is provided. 
            </summary>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.HttpResponseHeadersExtensions">
            <summary>
            The HttpResponseHeadersExtensions class adds extension methods
            to the HttpResponseHeaders class.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.HttpResponseHeadersExtensions.GetValue``1(System.Net.Http.Headers.HttpResponseHeaders,System.String,``0)">
            <summary>
            Safely gets a single value for the identified header. If a value cannot be retrieved,
            the specified default value will be returned.
            </summary>
            <typeparam name="T">Data type of header value to retrieve</typeparam>
            <param name="headers">Header collection</param>
            <param name="name">Identifies the name of the header whose value should be retrieved</param>
            <param name="defaultValue">Default value for the header</param>
            <returns>Value of the identified header</returns>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.IAuthenticationHeaderValueFactory">
            <summary>
            The IAuthenticationHeaderValueFactory interface describes a component
            capable of creating 'Authorization' headers for requests.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.IAuthenticationHeaderValueFactory.CreateAsync(System.Net.Http.HttpRequestMessage)">
            <summary>
            Creates an AuthenticationHeaderValue for the provided request.
            </summary>
            <param name="message">Request to be authenticated</param>
            <returns>AuthenticationHeaderValue for the request</returns>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.IHmacAlgorithm">
            <summary>
            The HmacAlgorithm interface describes a component capable of
            generating a signature certifying the integrity of a message.
            </summary>
        </member>
        <member name="P:EPiServer.Social.Common.Rest.IHmacAlgorithm.ApplicationId">
            <summary>
            Gets the identifier of the application that this algorithm
            is configured to support.
            </summary>
        </member>
        <member name="P:EPiServer.Social.Common.Rest.IHmacAlgorithm.ApplicationSecret">
            <summary>
            Gets the cryptographic key that this algorithm will
            use to compute request signatures.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.IHmacAlgorithm.ComputeSignature(EPiServer.Social.Common.Rest.Contracts.HmacMessage)">
            <summary>
            Computes a signature certifying the integrity of the provided message.        
            </summary>
            <param name="hmacMessage">Message to be signed</param>
            <returns>Signature of the provided message</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.IHmacAlgorithm.GenerateTimestamp">
            <summary>
            Generates a timestamp, denoting the current time, in a format
            suitable for computing a message signature.
            </summary>
            <returns>Timestamp denoting the current time</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.IHmacAlgorithm.GenerateNonce">
            <summary>
            Generates a nonce value in a format suitable for computing 
            a message signature.
            </summary>
            <returns>Nonce value</returns>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.IHttpClientFactory">
            <summary>
            The IHttpClientFactory interface describes a factory
            capable of constructing instances of HttpClient.    
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.IHttpClientFactory.Create">
            <summary>
            Creates an instance of HttpClient.
            </summary>
            <returns>An HttpClient</returns>
        </member>
        <member name="T:EPiServer.Social.Common.Rest.ResponseMessageHandler">
            <summary>
            The ResponseMessageHandler class is responsible for interpreting HTTP 
            response messages returned by the Episerver Social REST services.
            </summary>
        </member>
        <member name="F:EPiServer.Social.Common.Rest.ResponseMessageHandler.responseMessageAdapter">
            <summary>
            Gets an adapter capable of interpreting HTTP response messages.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ResponseMessageHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ResponseMessageHandler.HandleUnsuccessful(System.Net.Http.HttpResponseMessage)">
            <summary>
            Interprets a response message to handle platform-wide errors 
            </summary>
            <param name="response">Response message to handle</param>        
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ResponseMessageHandler.WasUnsuccessful(System.Net.Http.HttpResponseMessage)">
            <summary>
            Determines whether or not the specified response represents the successful
            execution of a request.
            </summary>
            <param name="response">Response to evaluate</param>
            <returns>True if the request was unsuccessful, false otherwise</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ResponseMessageHandler.Unauthorized(System.Net.Http.HttpResponseMessage)">
            <summary>
            Handles an "Unauthorized" response.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ResponseMessageHandler.RequestEntityTooLarge">
            <summary>
            Handles a "Request entity too large" response.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ResponseMessageHandler.TooManyRequests(System.Net.Http.HttpResponseMessage)">
            <summary>
            Handles a "Too many requests" response.
            </summary>
            <param name="response">Response to evaluate</param>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.ResponseMessageHandler.UnexpectedError(System.Net.Http.HttpResponseMessage)">
            <summary>
            Handles a response with an unexpected error.
            </summary>
            <param name="response">Response message to handle</param>               
        </member>
        <member name="T:EPiServer.Social.Common.Rest.SocialAuthorizationHeaderValue">
            <summary>
            The SocialAuthenticationHeaderValue class represents authorization
            information according to the custom scheme supported by the
            Episerver Social platform.
            </summary>
        </member>
        <member name="F:EPiServer.Social.Common.Rest.SocialAuthorizationHeaderValue.Scheme">
            <summary>
            Name of the HTTP authorization scheme represented by this class.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.SocialAuthorizationHeaderValue.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.SocialAuthorizationHeaderValue.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.SocialAuthorizationHeaderValue.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="tenantId">Requesting tenant's ID</param>
            <param name="timestamp">Request's timestamp</param>
            <param name="nonce">Request's nonce value</param>
            <param name="signature">Request's signature</param>
        </member>
        <member name="P:EPiServer.Social.Common.Rest.SocialAuthorizationHeaderValue.TenantId">
            <summary>
            Gets the identifier for the tenant who issued the request.
            </summary>
        </member>
        <member name="P:EPiServer.Social.Common.Rest.SocialAuthorizationHeaderValue.Timestamp">
            <summary>
            Gets the timestamp defined in the header, indicating when 
            the requested was issued.
            </summary>
        </member>
        <member name="P:EPiServer.Social.Common.Rest.SocialAuthorizationHeaderValue.Nonce">
            <summary>
            Gets the one-time use, unique identifier (nonce) defined
            within this header. This value can be used to minimize
            the potential for replay attacks.
            </summary>
        </member>
        <member name="P:EPiServer.Social.Common.Rest.SocialAuthorizationHeaderValue.Signature">
            <summary>
            Gets the cryptographic signature for the request.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.SocialAuthorizationHeaderValue.ToAuthenticationHeaderValue">
            <summary>
            Converts this header to an instance of AuthenticationHeaderValue.
            </summary>
            <returns>A corresponding instance of AuthenticationHeaderValue</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.SocialAuthorizationHeaderValue.TryParse(System.String,EPiServer.Social.Common.Rest.SocialAuthorizationHeaderValue@)">
            <summary>
            Tries to parse a raw 'Authorization' header value as an instance
            of SocialAuthenticationHeaderValue.
            </summary>
            <param name="input">Raw 'Authorization' header value to parse</param>
            <param name="value">Parsed header value</param>
            <returns>True if the header value was parsed successfully, false otherwise</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.SocialAuthorizationHeaderValue.TryParse(System.Net.Http.Headers.AuthenticationHeaderValue,EPiServer.Social.Common.Rest.SocialAuthorizationHeaderValue@)">
            <summary>
            Tries to parse a raw 'Authorization' header value as an instance
            of SocialAuthenticationHeaderValue.
            </summary>
            <param name="input">Raw 'Authorization' header value to parse</param>
            <param name="value">Parsed header value</param>
            <returns>True if the header value was parsed successfully, false otherwise</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.SocialAuthorizationHeaderValue.IsKnownAuthorizationScheme(System.Net.Http.Headers.AuthenticationHeaderValue)">
            <summary>
            Determines if the specified header value indicates an authorization
            scheme supported by this class.
            </summary>
            <param name="input">Header value to validate</param>
            <returns>True if the header indicates a known scheme, false otherwise</returns>
        </member>
        <member name="M:EPiServer.Social.Common.Rest.SocialAuthorizationHeaderValue.WasParsedSuccessfully(EPiServer.Social.Common.Rest.SocialAuthorizationHeaderValue)">
            <summary>
            Determines if the specified SocialAuthenticationHeaderValue represents
            a successfully parsed instance.
            </summary>
            <param name="value">Value to verify</param>
            <returns>True if the value was successfully parsed, false otherwise</returns>
        </member>
    </members>
</doc>
