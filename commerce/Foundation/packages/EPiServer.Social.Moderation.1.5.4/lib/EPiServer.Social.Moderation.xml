<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EPiServer.Social.Moderation</name>
    </assembly>
    <members>
        <member name="T:EPiServer.Social.Moderation.DefaultWorkflowItemServiceFactory">
            <summary>
            The DefaultWorkflowItemServiceFactory class encapsulates the platform's 
            default construction of an IWorkflowItemService implementation.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Moderation.DefaultWorkflowItemServiceFactory.Create">
            <summary>
            Creates a new workflow service according to platform defaults.
            </summary>
            <returns>New workflow service</returns>
        </member>
        <member name="M:EPiServer.Social.Moderation.DefaultWorkflowItemServiceFactory.GetRepository">
            <summary>
            Gets an instance of the repository intended to support the service
            constructed by this factory. Override this method to introduce
            a custom repository.
            </summary>
            <returns>Repository intended to support this service</returns>
        </member>
        <member name="T:EPiServer.Social.Moderation.DefaultWorkflowServiceFactory">
            <summary>
            The DefaultWorkflowServiceFactory class encapsulates the platform's 
            default construction of an IWorkflowService implementation.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Moderation.DefaultWorkflowServiceFactory.Create">
            <summary>
            Creates a new workflow service according to platform defaults.
            </summary>
            <returns>New workflow service</returns>
        </member>
        <member name="M:EPiServer.Social.Moderation.DefaultWorkflowServiceFactory.GetRepository">
            <summary>
            Gets an instance of the repository intended to support the service
            constructed by this factory. Override this method to introduce
            a custom repository.
            </summary>
            <returns>Repository intended to support this service</returns>
        </member>
        <member name="T:EPiServer.Social.Moderation.WorkflowItemService">
            <summary>
            The WorkflowItemService class is responsible for facilitating the creation
            and retrieval of items within a moderation workflow.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.#ctor(EPiServer.Social.Moderation.Core.IWorkflowItemRepository)">
            <summary>
            Constructor
            </summary>
            <param name="repository">Repository supporting operation on workflow item data</param>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.Add(EPiServer.Social.Moderation.Core.WorkflowItem)">
            <summary>
            Adds a new workflow item.
            </summary>
            <param name="item">Workflow item to be added</param>
            <returns>Workflow item which was just added</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when any of the parameters passed in are null.</exception>
            <exception cref="T:EPiServer.Social.Moderation.Core.WorkflowDoesNotExistException">Thrown when the workflow specified for workflow item being added does not exist.</exception>
            <exception cref="T:EPiServer.Social.Moderation.Core.InvalidWorkflowStateException">Thrown when the workflow item being added has a state that is not currently 
            supported by its associated workflow.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.AddAsync(EPiServer.Social.Moderation.Core.WorkflowItem)">
            <summary>
            Asynchronously adds a new workflow item.
            </summary>
            <param name="item">Workflow item to be added</param>
            <returns>Workflow item which was just added</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when any of the parameters passed in are null.</exception>
            <exception cref="T:EPiServer.Social.Moderation.Core.WorkflowDoesNotExistException">Thrown when the workflow specified for workflow item being added does not exist.</exception>
            <exception cref="T:EPiServer.Social.Moderation.Core.InvalidWorkflowStateException">Thrown when the workflow item being added has a state that is not currently 
            supported by its associated workflow.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.Add(EPiServer.Social.Moderation.Core.WorkflowItem,EPiServer.Social.Moderation.Core.TransitionSessionToken)">
            <summary>
            Adds a new workflow item within an exclusive transition session. If another 
            client already  has secured access to that target, a  TransitionSessionDeniedException 
            will be thrown.
            </summary>
            <param name="item">Workflow item to be added</param>
            <param name="token">Token authorizing exclusive access to the target within a particular workflow</param>
            <returns>Workflow item which was added</returns>        
            <exception cref="T:EPiServer.Social.Moderation.Core.TransitionSessionDeniedException">
            Exclusive access for the specified workflow and target combination could not be secured. Access
            may have already been secured by another client.
            </exception>    
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.AddAsync(EPiServer.Social.Moderation.Core.WorkflowItem,EPiServer.Social.Moderation.Core.TransitionSessionToken)">
            <summary>
            Asynchronously adds a new workflow item within an exclusive transition session. Use the BeginTransitionSession() method of the
            IWorkflowService to retrieve a session token. If another client already has secured access to that target, 
            a TransitionSessionDeniedException will be thrown.
            </summary>
            <param name="item">Workflow item to be added</param>
            <param name="token">Token authorizing exclusive access to the target within a particular workflow</param>
            <returns>Workflow item which was added</returns>        
            <exception cref="T:EPiServer.Social.Moderation.Core.TransitionSessionDeniedException">
            Exclusive access for the specified workflow and target combination could not be secured. Access
            may have already been secured by another client.
            </exception>    
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.Add``1(EPiServer.Social.Moderation.Core.WorkflowItem,``0)">
            <summary>
            Adds a new workflow item with supporting metadata to form a composite.
            </summary>
            <typeparam name="TExtension">Type applied as an extension of the workflow item</typeparam>
            <param name="item">Workflow item to be added</param>
            <param name="extension">Extended data related to the workflow item</param>
            <returns>A workflow item composed with the extended data</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when any of the parameters passed in are null.</exception>
            <exception cref="T:EPiServer.Social.Moderation.Core.WorkflowDoesNotExistException">Thrown when the workflow specified for workflow item being added does not exist.</exception>
            <exception cref="T:EPiServer.Social.Moderation.Core.InvalidWorkflowStateException">Thrown when the workflow item being added has a state that is not currently 
            supported by its associated workflow.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.AddAsync``1(EPiServer.Social.Moderation.Core.WorkflowItem,``0)">
            <summary>
            Asynchronously adds a new workflow item with supporting metadata to form a composite.
            </summary>
            <typeparam name="TExtension">Type applied as an extension of the workflow item</typeparam>
            <param name="item">Workflow item to be added</param>
            <param name="extension">Extended data related to the workflow item</param>
            <returns>The workflow item composed with the extended data</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when any of the parameters passed in are null.</exception>
            <exception cref="T:EPiServer.Social.Moderation.Core.WorkflowDoesNotExistException">Thrown when the workflow specified for workflow item being added does not exist.</exception>
            <exception cref="T:EPiServer.Social.Moderation.Core.InvalidWorkflowStateException">Thrown when the workflow item being added has a state that is not currently 
            supported by its associated workflow.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.Add``1(EPiServer.Social.Moderation.Core.WorkflowItem,``0,EPiServer.Social.Moderation.Core.TransitionSessionToken)">
            <summary>
            Adds a new workflow item with supporting metadata, within an exclusive transition session.
            </summary>
            <typeparam name="TExtension">Type of data applied as an extension of the workflow item</typeparam>
            <param name="item">Workflow item to be added</param>
            <param name="extension">Extended data supporting the workflow item</param>
            <param name="token">Token authorizing exclusive access to the target within a particular workflow</param>
            <returns>A workflow item composed with the specified extension data</returns>
            <exception cref="T:EPiServer.Social.Moderation.Core.TransitionSessionDeniedException">
            Exclusive access for the specified workflow and target combination could not be secured. Access
            may have already been secured by another client.
            </exception>   
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.AddAsync``1(EPiServer.Social.Moderation.Core.WorkflowItem,``0,EPiServer.Social.Moderation.Core.TransitionSessionToken)">
            <summary>
            Asynchronously adds a new workflow item with supporting metadata, within an exclusive transition session. Use the 
            BeginTransitionSession() method of the IWorkflowService to retrieve a session token. If another 
            client already has secured access to that target, a TransitionSessionDeniedException will be thrown.
            </summary>
            <typeparam name="TExtension">Type of data applied as an extension of the workflow item</typeparam>
            <param name="item">Workflow item to be added</param>
            <param name="extension">Extended data supporting the workflow item</param>
            <param name="token">Token authorizing exclusive access to the target within a particular workflow</param>
            <returns>A workflow item composed with the specified extension data</returns>
            <exception cref="T:EPiServer.Social.Moderation.Core.TransitionSessionDeniedException">
            Exclusive access for the specified workflow and target combination could not be secured. Access
            may have already been secured by another client.
            </exception>   
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.Get(EPiServer.Social.Moderation.Core.WorkflowItemId)">
            <summary>
            Gets the workflow item represented by the specified ID.
            </summary>
            <param name="id">ID of the workflow item to retrieve</param>
            <returns>Workflow item with the specified ID</returns>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are invalid.</exception>
            <exception cref="T:EPiServer.Social.Moderation.Core.WorkflowItemDoesNotExistException">Thrown when the identified workflow item does not exist.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.GetAsync(EPiServer.Social.Moderation.Core.WorkflowItemId)">
            <summary>
            Asynchronously gets the workflow item represented by the specified ID.
            </summary>
            <param name="id">ID of the workflow item to retrieve</param>
            <returns>Workflow item with the specified ID</returns>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are invalid.</exception>
            <exception cref="T:EPiServer.Social.Moderation.Core.WorkflowItemDoesNotExistException">Thrown when the identified workflow item does not exist.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.Get``1(EPiServer.Social.Moderation.Core.WorkflowItemId)">
            <summary>
            Gets a workflow item composed with associated extension data, 
            as identified by the specified ID.        
            </summary>
            <typeparam name="TExtension">Type of data applied as an extension of the workflow item</typeparam>
            <param name="id">ID of the item to be retrieved</param>
            <returns>A workflow item composed with associated extension data</returns>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are invalid.</exception>
            <exception cref="T:EPiServer.Social.Moderation.Core.WorkflowItemDoesNotExistException">Thrown when the identified workflow item does not exist.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.GetAsync``1(EPiServer.Social.Moderation.Core.WorkflowItemId)">
            <summary>
            Asynchronously gets a workflow item composed with associated extension data, 
            as identified by the specified ID.        
            </summary>
            <typeparam name="TExtension">Type of data applied as an extension of the workflow item</typeparam>
            <param name="id">ID of the item to be retrieved</param>
            <returns>A workflow item composed with associated extension data</returns>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are invalid.</exception>
            <exception cref="T:EPiServer.Social.Moderation.Core.WorkflowItemDoesNotExistException">Thrown when the identified workflow item does not exist.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.Get(EPiServer.Social.Common.Criteria{EPiServer.Social.Moderation.Core.WorkflowItemFilter})">
            <summary>
            Retrieves a page of workflow items as specified by the provided criteria.
            </summary>
            <param name="criteria">Filters the result set of workflow items</param>
            <returns>Page of workflow items filtered according to the specified criteria</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when any of the parameters passed in are null.</exception>
            <exception cref="T:EPiServer.Social.Common.InvalidPageInfoException">Thrown when the page info is invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.GetAsync(EPiServer.Social.Common.Criteria{EPiServer.Social.Moderation.Core.WorkflowItemFilter})">
            <summary>
            Asynchronously retrieves a page of workflow items as specified by the provided criteria.
            </summary>
            <param name="criteria">Filters the result set of workflow items</param>
            <returns>Page of workflow items filtered according to the specified criteria</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when any of the parameters passed in are null.</exception>
            <exception cref="T:EPiServer.Social.Common.InvalidPageInfoException">Thrown when the page info is invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.Get``1(EPiServer.Social.Common.CompositeCriteria{EPiServer.Social.Moderation.Core.WorkflowItemFilter,``0})">
            <summary>
            Retrieves a page of workflow items as specified by the provided criteria. The 
            workflow items are filtered by the type of their associated data.
            </summary>
            <typeparam name="TExtension">Type of data associated with the desired workflow items</typeparam>
            <param name="criteria">Filters the result set of workflow items</param>
            <returns>Page of workflow items filtered according to the specified criteria</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when any of the parameters passed in are null.</exception>
            <exception cref="T:EPiServer.Social.Common.InvalidPageInfoException">Thrown when the page info is invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.GetAsync``1(EPiServer.Social.Common.CompositeCriteria{EPiServer.Social.Moderation.Core.WorkflowItemFilter,``0})">
            <summary>
            Asynchronously retrieves a page of workflow items as specified by the provided criteria. The 
            workflow items are filtered by the type of their associated data.
            </summary>
            <typeparam name="TExtension">Type of data associated with the desired workflow items</typeparam>
            <param name="criteria">Filters the result set of workflow items</param>
            <returns>Page of composite workflow items filtered according to the specified criteria</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when any of the parameters passed in are null.</exception>
            <exception cref="T:EPiServer.Social.Common.InvalidPageInfoException">Thrown when the page info is invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.Remove(EPiServer.Social.Moderation.Core.WorkflowItemId)">
            <summary>
            Removes the workflow item with the specified ID.
            </summary>
            <param name="id">ID of the workflow item to be removed</param>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are null or invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.RemoveAsync(EPiServer.Social.Moderation.Core.WorkflowItemId)">
            <summary>
            Asynchronously removes the workflow item with the specified ID.
            </summary>
            <param name="id">ID of the workflow item to be removed</param>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are null or invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.Remove(EPiServer.Social.Moderation.Core.WorkflowId)">
            <summary>
            Removes the workflow items associated with the identified
            workflow.
            </summary>
            <param name="id">ID of the workflow whose items should be removed</param>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are null or invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.RemoveAsync(EPiServer.Social.Moderation.Core.WorkflowId)">
            <summary>
            Asynchronously removes the workflow items associated with the identified
            workflow.
            </summary>
            <param name="id">ID of the workflow whose items should be removed</param>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are null or invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.Remove(EPiServer.Social.Common.Reference)">
            <summary>
            Removes the workflow items associated with the specified
            resource under moderation.
            </summary>
            <param name="target">Reference identifying the resource under moderation 
            whose workflow items should be removed</param>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are null or invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowItemService.RemoveAsync(EPiServer.Social.Common.Reference)">
            <summary>
            Asynchronously removes the workflow items associated with the specified
            resource under moderation.
            </summary>
            <param name="target">Reference identifying the resource under moderation 
            whose workflow items should be removed</param>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are null or invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="T:EPiServer.Social.Moderation.WorkflowService">
            <summary>
            The WorkflowService class is responsible for facilitating the addition,
            removal, and retrieval of moderation workflows.
            </summary>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.#ctor(EPiServer.Social.Moderation.Core.IWorkflowRepository)">
            <summary>
            Constructor
            </summary>
            <param name="repository">Repository supporting operations on workflow data</param>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.Add(EPiServer.Social.Moderation.Core.Workflow)">
            <summary>
            Adds a new moderation workflow.
            </summary>
            <param name="workflow">Workflow to be added</param>
            <returns>Workflow which was just added</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when any of the parameters passed in are null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.AddAsync(EPiServer.Social.Moderation.Core.Workflow)">
            <summary>
            Asynchronously adds a new moderation workflow.
            </summary>
            <param name="workflow">Workflow to be added</param>
            <returns>Workflow which was just added</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when any of the parameters passed in are null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.Add``1(EPiServer.Social.Moderation.Core.Workflow,``0)">
            <summary>
            Adds a new workflow with supporting metadata to form a composite.
            </summary>
            <typeparam name="TExtension">Type applied as an extension of the workflow</typeparam>
            <param name="workflow">Workflow to be added</param>
            <param name="extension">Extended data related to the workflow</param>
            <returns>The workflow composed with the extended data</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when any of the parameters passed in are null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.AddAsync``1(EPiServer.Social.Moderation.Core.Workflow,``0)">
            <summary>
            Asynchronously adds a new workflow with supporting metadata to form a composite.
            </summary>
            <typeparam name="TExtension">Type applied as an extension of the workflow</typeparam>
            <param name="workflow">Workflow to be added</param>
            <param name="extension">Extended data related to the workflow</param>
            <returns>The workflow composed with the extended data</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when any of the parameters passed in are null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.Remove(EPiServer.Social.Moderation.Core.WorkflowId)">
            <summary>
            Removes an existing workflow from the system.
            </summary>
            <param name="id">ID of the workflow to be removed</param>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are null or invalid.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when workflow items still exist for the workflow being removed.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.RemoveAsync(EPiServer.Social.Moderation.Core.WorkflowId)">
            <summary>
            Asynchronously removes an existing workflow from the system.
            </summary>
            <param name="id">ID of the workflow to be removed</param>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are null or invalid.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when workflow items still exist for the workflow being removed.</exception>
            <exception cref="T:EPiServer.Social.Moderation.Core.WorkflowDoesNotExistException">Thrown when the identified workflow does not exist.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.Get(EPiServer.Social.Moderation.Core.WorkflowId)">
            <summary>
            Gets a workflow as identified by the specified ID.
            </summary>
            <param name="id">Workflow identifier</param>
            <returns>Workflow corresponding to the specified ID</returns>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are invalid.</exception>
            <exception cref="T:EPiServer.Social.Moderation.Core.WorkflowDoesNotExistException">Thrown when the identified workflow does not exist.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.GetAsync(EPiServer.Social.Moderation.Core.WorkflowId)">
            <summary>
            Asynchronously gets a workflow as identified by the specified ID.
            </summary>
            <param name="id">Workflow identifier</param>
            <returns>Workflow corresponding to the specified ID</returns>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are invalid.</exception>
            <exception cref="T:EPiServer.Social.Moderation.Core.WorkflowDoesNotExistException">Thrown when the identified workflow does not exist.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.Get``1(EPiServer.Social.Moderation.Core.WorkflowId)">
            <summary>
            Gets a workflow composed with associated extension data, 
            as identified by the specified ID.        
            </summary>
            <typeparam name="TExtension">Type of data applied as an extension of the workflow</typeparam>
            <param name="id">ID of the workflow to be retrieved</param>
            <returns>A workflow composed with associated extension data</returns>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are invalid.</exception>
            <exception cref="T:EPiServer.Social.Moderation.Core.WorkflowDoesNotExistException">Thrown when the identified workflow does not exist.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.GetAsync``1(EPiServer.Social.Moderation.Core.WorkflowId)">
            <summary>
            Asynchronously gets a workflow composed with associated extension data, 
            as identified by the specified ID.        
            </summary>
            <typeparam name="TExtension">Type of data applied as an extension of the workflow</typeparam>
            <param name="id">ID of the workflow to be retrieved</param>
            <returns>A workflow composed with associated extension data</returns>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are invalid.</exception>
            <exception cref="T:EPiServer.Social.Moderation.Core.WorkflowDoesNotExistException">Thrown when the identified workflow does not exist.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.Get(EPiServer.Social.Common.Criteria{EPiServer.Social.Moderation.Core.WorkflowFilter})">
            <summary>
            Retrieves a page of workflows as specified by the provided criteria.
            </summary>
            <param name="criteria">Filters the result set of workflows</param>
            <returns>Page of workflows filtered according to the specified criteria</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when any of the parameters passed in are null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.InvalidPageInfoException">Thrown when the page info is invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.GetAsync(EPiServer.Social.Common.Criteria{EPiServer.Social.Moderation.Core.WorkflowFilter})">
            <summary>
            Asynchronously retrieves a page of workflows as specified by the provided criteria.
            </summary>
            <param name="criteria">Filters the result set of workflows</param>
            <returns>Page of workflows filtered according to the specified criteria</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when any of the parameters passed in are null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.InvalidPageInfoException">Thrown when the page info is invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.Get``1(EPiServer.Social.Common.CompositeCriteria{EPiServer.Social.Moderation.Core.WorkflowFilter,``0})">
            <summary>
            Retrieves a page of workflows as specified by the provided criteria. The 
            workflow are filtered by the type of their associated data.
            </summary>
            <typeparam name="TExtension">Type of data associated with the desired workflows</typeparam>
            <param name="criteria">Filters the result set of workflows</param>
            <returns>Page of composite workflows filtered according to the specified criteria</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when any of the parameters passed in are null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.InvalidPageInfoException">Thrown when the page info is invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.GetAsync``1(EPiServer.Social.Common.CompositeCriteria{EPiServer.Social.Moderation.Core.WorkflowFilter,``0})">
            <summary>
            Asynchronously retrieves a page of workflows as specified by the provided criteria. The 
            workflow are filtered by the type of their associated data.
            </summary>
            <typeparam name="TExtension">Type of data associated with the desired workflows</typeparam>
            <param name="criteria">Filters the result set of workflows</param>
            <returns>Page of composite workflows filtered according to the specified criteria</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when any of the parameters passed in are null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters passed in are invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.InvalidPageInfoException">Thrown when the page info is invalid.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.BeginTransitionSession(EPiServer.Social.Moderation.Core.WorkflowId,EPiServer.Social.Common.Reference)">
            <summary>
            Requests exclusive access to add workflow items for a target within a particular workflow. If
            another client already has secured access to that target, a TransitionSessionDeniedException 
            will be thrown.
            </summary>
            <param name="workflow">Identifies the workflow through which transitions are to occur</param>
            <param name="target">Identifies the target which is to be transitioned through the workflow</param>
            <returns>
            A TransitionSessionToken authorizing exclusive access to transition a target within a particular workflow. Apply
            this token when adding workflow items with IWorkflowItemService to ensure that
            exclusive access is respected.
            </returns>
            <exception cref="T:EPiServer.Social.Moderation.Core.TransitionSessionDeniedException">
            Exclusive access for the specified workflow and target combination could not be secured. Access
            may have already been secured by another client.
            </exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.BeginTransitionSessionAsync(EPiServer.Social.Moderation.Core.WorkflowId,EPiServer.Social.Common.Reference)">
            <summary>
            Asynchronously requests exclusive access to add workflow items for a target within a particular workflow. If
            another client already has secured access to that target, a TransitionSessionDeniedException 
            will be thrown.
            </summary>
            <param name="workflow">Identifies the workflow through which transitions are to occur</param>
            <param name="target">Identifies the target which is to be transitioned through the workflow</param>
            <returns>
            A TransitionSessionToken authorizing exclusive access to transition a target within a particular workflow. Apply
            this token when adding workflow items with IWorkflowItemService to ensure that
            exclusive access is respected.
            </returns>
            <exception cref="T:EPiServer.Social.Moderation.Core.TransitionSessionDeniedException">
            Exclusive access for the specified workflow and target combination could not be secured. Access
            may have already been secured by another client.
            </exception>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.EndTransitionSession(EPiServer.Social.Moderation.Core.TransitionSessionToken)">
            <summary>
            Ends a transition session, relinquishing exclusive access to add workflow items for a target.
            </summary>
            <param name="token">Token authorizing exclusive access to a target within a particular workflow</param>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.EndTransitionSessionAsync(EPiServer.Social.Moderation.Core.TransitionSessionToken)">
            <summary>
            Asynchronously ends a transition session, relinquishing exclusive access to add workflow items for a target.
            </summary>
            <param name="token">Token authorizing exclusive access to a target within a particular workflow</param>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.EndTransitionSession(EPiServer.Social.Moderation.Core.WorkflowId,EPiServer.Social.Common.Reference)">
             <summary>
            Ends a transition session, relinquishing exclusive access to add workflow items for a target.
             </summary>
             <param name="workflow">Identifies the workflow to which access was granted</param>
             <param name="target">Identifies the target to which access was granted</param>
             <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
             <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
             <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
             <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
        <member name="M:EPiServer.Social.Moderation.WorkflowService.EndTransitionSessionAsync(EPiServer.Social.Moderation.Core.WorkflowId,EPiServer.Social.Common.Reference)">
            <summary>
            Asynchronously ends a transition session, relinquishing exclusive access to add workflow items for a target.
            </summary>
            <param name="workflow">Identifies the workflow to which access was granted</param>
            <param name="target">Identifies the target to which access was granted</param>
            <exception cref="T:EPiServer.Social.Common.SocialException">Thrown when an error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialAuthenticationException">Thrown when an authentication error occurs while processing the request.</exception>
            <exception cref="T:EPiServer.Social.Common.MaximumDataSizeExceededException">Thrown when a Social object is submitted, which exceeds the size restrictions of the system.</exception>
            <exception cref="T:EPiServer.Social.Common.SocialCommunicationException">Thrown when errors occur communicating with the cloud services.</exception>
        </member>
    </members>
</doc>
