<?xml version="1.0" encoding="utf-8"?>
<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
  <configSections>
    <sectionGroup name="CommerceFramework">
      <section name="ContentManagement" xdt:Transform="Remove" xdt:Locator="Match(name)"/>
    </sectionGroup>
  </configSections>
  <appSettings xdt:Transform="InsertIfMissing">
    <add key="PromotionExclusionLevel" value="Order" xdt:Locator="Match(key)" xdt:Transform="InsertIfMissing" />
  </appSettings>
  <system.web>
    <siteMap>
      <providers>
        <add name="CmsSiteMapProvider" xdt:Transform="Remove" xdt:Locator="Match(name)"/>
      </providers>
    </siteMap>
  </system.web>
  <location path="Apps/Shell/Pages/Readonly.html" xdt:Transform="InsertIfMissing" xdt:Locator="Match(path)">
    <system.web>
      <authorization>
        <allow users="*" />
      </authorization>
    </system.web>
  </location>
  <system.webServer>
    <modules xdt:Transform="SetAttributes(runAllManagedModulesForAllRequests)" runAllManagedModulesForAllRequests="false">
    </modules>
  </system.webServer>
  <system.web>
    <roleManager>
      <providers>
        <add name="SqlServerRoleProvider" applicationName="ECApplication" xdt:Transform="SetAttributes(applicationName)" xdt:Locator="Condition(@name='SqlServerRoleProvider' and @applicationName='{CommerceManagerApplicationName}')"/>
      </providers>
    </roleManager>
  </system.web>
  <episerver>
    <applicationSettings xdt:Transform="SetAttributes(enableScheduler)" enableScheduler="false" />
    <applicationSettings xdt:Transform="SetAttributes(enableModelSyncCommit)" enableModelSyncCommit="false" />
  </episerver>
  <episerver.framework xdt:Transform="InsertIfMissing">
    <scanAssembly forceBinFolderScan="true" xdt:Transform="InsertIfMissing"/>
    <appData basePath="appData" xdt:Transform="InsertIfMissing"/>
  </episerver.framework>
  <system.serviceModel xdt:Transform="InsertIfMissing">
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" xdt:Transform="SetAttributes"/>
    <extensions xdt:Transform="InsertIfMissing">
      <bindingElementExtensions xdt:Transform="InsertIfMissing">
      <add name="udpTransportCustom" type="Microsoft.ServiceModel.Samples.UdpTransportElement, EPiServer.Framework.AspNet" xdt:Transform="SetAttributes"/>
      </bindingElementExtensions>
    </extensions>
    <services xdt:Transform="InsertIfMissing">
      <service name="EPiServer.Events.Remote.EventReplication" behaviorConfiguration="DebugServiceBehaviour" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)">
      <endpoint name="RemoteEventServiceEndPoint" contract="EPiServer.Events.ServiceModel.IEventReplication" binding="customBinding" bindingConfiguration="RemoteEventsBinding" address="soap.udp://239.255.255.19:5000/RemoteEventService" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
      </service>
    </services>
    <client xdt:Transform="InsertIfMissing">
      <endpoint name="RemoteEventServiceClientEndPoint" address="soap.udp://239.255.255.19:5000/RemoteEventService" binding="customBinding" bindingConfiguration="RemoteEventsBinding" contract="EPiServer.Events.ServiceModel.IEventReplication" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)" />
    </client>
    <behaviors xdt:Transform="InsertIfMissing">
      <serviceBehaviors xdt:Transform="InsertIfMissing">
      <behavior name="DebugServiceBehaviour" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)">
        <serviceDebug includeExceptionDetailInFaults="true" xdt:Transform="InsertIfMissing" />
      </behavior>
      <behavior name="EPiServer.Business.Commerce.EventServiceBehavior" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)">
        <serviceMetadata httpGetEnabled="true" xdt:Transform="InsertIfMissing" />
        <serviceDebug includeExceptionDetailInFaults="false" xdt:Transform="InsertIfMissing" />
      </behavior>
      <behavior name="CommerceSiteBehavior" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)">
        <serviceMetadata httpGetEnabled="true" xdt:Transform="InsertIfMissing" />
        <serviceDebug includeExceptionDetailInFaults="true" xdt:Transform="InsertIfMissing" />
      </behavior>
      </serviceBehaviors>
      <endpointBehaviors xdt:Transform="InsertIfMissing">
      <behavior name="EventServiceEndpointBehavior" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)">
        <webHttp xdt:Transform="InsertIfMissing" />
      </behavior>
      </endpointBehaviors>
    </behaviors>
    <bindings xdt:Transform="InsertIfMissing">
      <customBinding xdt:Transform="InsertIfMissing">
      <binding name="RemoteEventsBinding" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)">
        <binaryMessageEncoding xdt:Transform="InsertIfMissing" />
        <udpTransportCustom multicast="True" xdt:Transform="InsertIfMissing" />
      </binding>
      </customBinding>
    </bindings>
  </system.serviceModel>
  <CommerceFramework>  
    <ContentManagement configSource="Configs\ecf.cms.config" xdt:Transform="Remove" xdt:Locator="Match(configSource)"/>
  </CommerceFramework>
  <FrameworkProviders>
    <urlService defaultProvider="CmsUrlProvider" xdt:Transform="RemoveAttributes(defaultProvider)" xdt:Locator="Match(defaultProvider)">
    </urlService>
    <urlService>
      <providers>
        <add name="CmsUrlProvider" xdt:Transform="Remove" xdt:Locator="Match(name)"/>
      </providers>
    </urlService>
    <siteService defaultProvider="CmsSiteProvider" xdt:Transform="RemoveAttributes(defaultProvider)" xdt:Locator="Match(defaultProvider)">
    </siteService>
    <siteService>
      <providers>
        <add name="CmsSiteProvider" xdt:Transform="Remove" xdt:Locator="Match(name)"/>
      </providers>
    </siteService>
  </FrameworkProviders>
</configuration>